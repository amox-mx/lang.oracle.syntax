{ "name": "Oracle SQL",
  "scopeName": "source.sql",
  "fileTypes": [""],
  "patterns": [
    { "include": "#sql-code" }
  ],
  "repository": {
    "sql-code": {
      "patterns": [
        { "include": "#sql-query" }
      ]
    },
    "sql-comments": {
      "patterns": [
        { "include": "#sql-comment-block" },
        { "include": "#sql-coment-double-dash" }
      ]
    },
    "sql-hint-includes": {
      "patterns": [
        {
          "name": "keyword.other.hint.sql.oracle",
          "match": "\\b(?i)(?>all_rows|append(_values)?|cache|change_dupkey_error_index|cluster(ing)?|cursor_sharing_exact|driving_site|dynamic_sampling|fact|first_rows|full|gather_optimizer_statistics|hash|ignore_row_on_dupkey_index|index(_(?>asc|combine|desc|ffs|join|ss(_(?>asc|desc))?))?|inmemory(_pruning)?|leading|merge|model_min_analysis|monitor|native_full_outer_join|no_clustering|no_expand|no_fact|no_gather_optimizer_statistics|no_index|no_index_ffs|no_index_ss|no_inmemory|no_inmemory_pruning|no_merge|no_monitor|no_native_full_outer_join|no_parallel|no_parallel_index|no_pq_concurrent_union|no_pq_skew|no_push_pred|no_push_subq|no_px_join_filter|no_query_transformation|no_result_cache|no_rewrite|no_star_transformation|no_unnest|no_use_cube|no_use_hash|no_use_merge|no_use_nl|no_xml_query_rewrite|no_xmlindex_rewrite|no_zonemap|noappend|nocache|opt_param|ordered|parallel|parallel_index|pq_concurrent_union|pq_distribute|pq_filter|pq_skew|push_pred|push_subq|px_join_filter|qb_name|result_cache|retry_on_row_change|rewrite|star_transformation|unnest|use_concat|use_cube|use_hash|use_merge|use_nl(_with_index)?)\\b"
        },
        {  "name": "invalid.deprecated",
           "match": "\\b(?i)(?>noparallel(_index)?|norewrite)\\b"
        },
        {

          "begin": "(\\()",
          "captures": {
              "1": { "name": "meta.brace.round" }
          },
          "patterns": [
            {  "name": "variable.other",
               "match": "(@)\\w++",
               "captures": {
                   "1": { "name": "keyword.operator" }
               }
            },
            {  "name": "keyword.other.delimiter",
               "match": "\\.|,"
            },
            {  "name": "constant.numeric",
               "match": "\\b(\\d++)\\b"
            },
            {  "name": "constant.language",
               "match": "\\b(?i)(?>auto|broadcast|default|hash|join|manual|none|partition|random(_local)?|scan|serial|partition)\\b"
            },
            {  "name": "variable.other",
               "match": "."
            }
          ],
          "end": "(\\))"
        }
      ]
    },
    "sql-coment-double-dash": {
      "patterns": [
        {
          "name": "comment.line.double-dash",
          "begin": "(--\\+)",
          "beginCaptures": {
              "1": { "name": "keyword.operator" }
          },
          "patterns": [
            { "include": "#sql-hint-includes" }
          ],
          "end": "$"
        },
        {
          "name": "comment.line.double-dash",
          "match": "(--).*$",
          "captures": {
              "1": { "name": "keyword.other.delimiter.plsql.oracle" }
          }
        }
      ]
    },
    "sql-comment-block": {
      "patterns": [
        {
          "name": "meta.section.hint.sqlplus",
          "begin": "(/\\*\\+)(?=.*?\\*/)",
          "captures": {
              "1": { "name": "keyword.other.delimiter.oracle" }
          },
          "patterns": [
            { "include": "#sql-hint-includes" },
            {  "name": "comment.block",
               "match": "."
            }
          ],
          "end": "(\\*/)",
          "comment": "PL/SQL block hint"
        },
        {
          "name": "meta.section.comment.sqlplus",
          "begin": "(/\\*)",
          "captures": {
              "1": { "name": "keyword.other.delimiter.oracle" }
          },
          "patterns": [
            {  "name": "comment.block",
               "match": "."
            }
          ],
          "end": "(\\*/)",
          "comment": "PL/SQL block Comment"
        }
      ]
    },
    "sql-literals": {
      "patterns": [
        { "name": "constant.character",
          "begin": "(N|n)?(')",
          "beginCaptures": {
              "1": { "name": "keyword.other.plsql.oracle" },
              "2": { "name": "punctuation.definition.string.begin" }
          },
          "patterns": [
            { "include": "#sqlplus-variable-substitution" }
          ],
          "end": "(\\2)",
          "endCaptures": {
              "1": { "name": "punctuation.definition.string.end" }
          }
        },
        { "name": "constant.character",
          "begin": "(N|n)?(Q|q)(')([^\\s\\[\\{<])",
          "beginCaptures": {
              "1": { "name": "keyword.other.plsql.oracle" },
              "2": { "name": "keyword.other.plsql.oracle" },
              "3": { "name": "punctuation.definition.string.begin" },
              "4": { "name": "punctuation.definition.string.begin" }
          },
          "patterns": [
            { "include": "#sqlplus-variable-substitution" }
          ],
          "end": "(\\4\\3)",
          "endCaptures": {
              "1": { "name": "punctuation.definition.string.end" }
          }
        },
        { "name": "constant.character",
          "begin": "(N|n)?(Q|q)(')([\\[\\{<])",
          "beginCaptures": {
              "1": { "name": "keyword.other.plsql.oracle" },
              "2": { "name": "keyword.other.plsql.oracle" },
              "3": { "name": "punctuation.definition.string.begin" },
              "4": { "name": "punctuation.definition.string.begin" }
          },
          "patterns": [
            { "include": "#sqlplus-variable-substitution" }
          ],
          "end": "([\\]\\}>]\\3)",
          "endCaptures": {
              "1": { "name": "punctuation.definition.string.end" }
          }
        },
        {  "name": "constant.numeric",
           "match": "((?<=\\+|-)|\\b)\\d+(d|D|e|E|f|F)?",
           "captures": {
               "2": { "name": "constant.character" }
           }
        },
        {  "name": "constant.language",
           "match": "\\b(?i)(?>day|dbtimezone|error|false|hour|interval|minute|month|null|second|sessiontimezone|to|true|year)\\b"
        },
        {  "name": "support.other.pseudocolumn",
           "match": "\\b(?i)(?>column_value|connect_by_(iscycle|isleaf)|currval|level|nextval|object_(id|value)|ora_rowscn|row(id|num)|versions_(?>end(scn|time)|operation|start(scn|time)|xid)|xmldata)\\b"
        },
        {  "name": "invalid.deprecated",
           "match": "\\b(?i)(?>sys_nc_(oid|rowinfo)\\$)"
        }
      ]
    },
    "sql-operators": {
      "patterns": [
        {
          "name": "keyword.operator.arithmetic",
          "match": "\\+|\\-|\\*|/"
        },
        {  "name": "keyword.operator.concatenation",
           "match": "\\|\\|"
        },
        {  "name": "keyword.operator.comparison.floating-point",
           "match": "\\b(?i:is( not)? (infinite|nan))\\b"
        },
        {  "name": "keyword.operator.comparison.multiset",
           "match": "\\b(?i:is( not)? (a set|empty)|(not )?(member|submultiset)( of)?)\\b"
        },
        {  "name": "keyword.operator.comparison.pattern",
           "match": "\\b(?i:(not )?like(2|4|c)?|excape|regexp_like)\\b"
        },
        {  "name": "keyword.operator.comparison.json",
           "match": "\\b(?i:is( not)? json( (lax|strict))?( with(out)?)?( unique keys)?|json_(exists|textcontains)|on error)\\b"
        },
        {  "name": "keyword.operator.comparison",
           "match": "=|!=|^=|<>|<|>|<=|>=|(?i:all|any|exists|is of|is( not)? null|(not)? (between|in)|some)"
        },
        {  "name": "keyword.operator.comparison.negation",
           "match": "\\b(?i:not)\\b"
        },
        {  "name": "keyword.operator.comparison.conjuction",
           "match": "\\b(?i:and)\\b"
        },
        {  "name": "keyword.operator.comparison.disjunction",
           "match": "\\b(?i:or)\\b"
        },
        {  "name": "keyword.operator.assignment",
           "match": "=>"
        },
        {  "name": "keyword.operator.hierarchical",
           "match": "\\b(?i)(?>connect by root|prior)\\b"
        },
        {  "name": "keyword.operator.set",
           "match": "\\b(?i)(?>intersect|minus|union( all))\\b"
        },
        {  "name": "keyword.operator.multiset",
           "match": "\\b(?i)(?>multiset (?:except|intersect|union)( (all|distinct))?)\\b",
           "captures": {
               "2": { "name": "constant.language" }
           }
        },
        {  "name": "keyword.other.delimiter",
           "match": ",|\\.|@"
        },
        {  "name": "keyword.operator.comparison.xml",
           "match": "\\b(?i:equals_path|under_path)\\b"
        }
      ]
    },
    "sql-keywords": {
      "patterns": [
        {  "name": "keyword.other.sqlplus.oracle",
           "match": "\\b(?i)(?>at|cursor|for|local|partition|subpartition|time zone)\\b"
        }
      ]
    },
    "sql-functions": {
      "patterns": [
        {
          "name": "support.function",
          "match": "\\b(?i)(?>chartorowid|hextoraw|numto(?>dsinterval|yminterval)|rawto(?>hex|idtochar|nhex)|to_(?>binary_(?>double|float)|blob|char|clob|date|dsinterval|lob|nchar|nclob|number|timestamp(_tz)?|yminterval))\\b",
          "comment": "Data conversion"
        },
        {  "name": "support.function",
           "match": "\\b(?i:sysdate|systimestamp|urifactory)\\b",
          "comment": "Oracle provided"
        },
        {  "name": "invalid.deprecated",
           "match": "\\b(?i)(?>sys_xml(?>agg|gen))\\b",
          "comment": "Deprecated"
        }
      ]
    },
    "sql-parenthesis": {
      "patterns": [
        {
          "begin": "(\\()",
          "captures": {
              "1": { "name": "meta.brace.round" }
          },
          "patterns": [
            { "include": "#sql-query" },
            { "include": "#sql-expression" }
          ],
          "end": "(\\))"
        }
      ]
    },
    "sql-identifier": {
      "patterns": [
        {
          "name": "variable.other",
          "match": "(?<=@)\\w++"
        },
        {  "name": "variable.other",
           "match": "(:)\\w+",
           "captures": {
               "1": { "name": "keyword.other.delimiter" }
           }
        },
        {  "name": "keyword.other",
           "match": "\\b(?i:indicator)\\b"
        }
      ]
    },
    "sql-case": {
      "name": "meta.section.block.conditional.plsql.oracle",
      "begin": "\\s*+((?i:case))\\b",
      "beginCaptures": {
          "1": { "name": "keyword.control.plsql.oracle" }
      },
      "patterns": [
        {  "name": "keyword.control.plsql.oracle",
           "match": "\\b(?i:when)\\b"
        },
        {
          "name": "meta.section.block.branch.conditional.plsql.oracle",
          "begin": "\\b((?i:else|then))\\b",
          "beginCaptures": {
              "1": { "name": "keyword.control.plsql.oracle" }
          },
          "patterns": [
            { "include": "#sql-expression" }
          ],
          "end": "(?=\\s*+(?i:when|else|end( case)?)\\b)"
        },
        { "include": "#sql-expression" }
      ],
      "end": "\\b((?i:end( case)?))",
      "endCaptures": {
          "1": { "name": "keyword.control.plsql.oracle" },
          "2": { "name": "keyword.other.delimiter.plsql.oracle" }
      }
    },
    "sql-expression": {
      "patterns": [
        { "include": "#sql-comments" },
        { "include": "#sql-parenthesis" },
        { "include": "#sql-literals" },
        { "include": "#sql-functions" },
        { "include": "#sql-operators" },
        { "include": "#sql-keywords" },
        { "include": "#sql-identifier" },
        { "include": "#sqlplus-variable-substitution" },
        { "include": "#sql-case" },
        { "include": "#sql-model" }
      ]
    },
    "sql-model": {
      "patterns": [
        {  "name": "keyword.other",
           "match": "\\b(?i)(?>all|automatic|by|dimension|ignore|in|iterate|keep|measures|model|nav|order|partition|reference|rules|sequential|single|unique|until|update|upsert)\\b"
        },
        {  "name": "keyword.operator.model",
           "match": "\\b(?i:(is )?(any|present))\\b"
        }
      ]
    },
    "sql-query": {
      "patterns": [
        {
          "name": "meta.section.query.sql.oracle",
          "begin": "(?=\\s*+((?i:select))\\b)",
          "patterns": [
            { "begin": "\\s*+((?i:select))\\b",
              "beginCaptures": {
                  "1": { "name": "keyword.other.sql.oracle" }
              },
              "patterns": [
                { "include": "#sql-expression" }
              ],
              "end": "(?=\\s*+(?i:from)\\b)"
            },
            { "begin": "\\s*+((?i:from))\\b",
              "beginCaptures": {
                  "1": { "name": "keyword.other.sql.oracle" }
              },
              "patterns": [
                { "include": "#sql-parenthesis" },
                { "include": "#sql-model" }
              ],
              "end": "(?=\\s*+(?i:connect|group|order\\s++by|start|where)\\b)|(?=;|\\))|^(?=\\s*+/\\s*+$)|^(?=\\.\\s*+$)"
            },
            { "begin": "\\s*+((?i:where))\\b",
              "beginCaptures": {
                  "1": { "name": "keyword.other.sql.oracle" }
              },
              "patterns": [
                { "include": "#sql-expression" }
              ],
              "end": "(?=\\s*+(?i:group\\s++by|order|start)\\b)|(?=;|\\))|^(?=\\s*+/\\s*+$)|^(?=\\.\\s*+$)"
            },
            { "begin": "\\s*+((?i:order))\\b",
              "beginCaptures": {
                  "1": { "name": "keyword.other.sql.oracle" }
              },
              "patterns": [
                { "include": "#sql-expression" }
              ],
              "end": "(?=;|\\))|^(?=\\s*+/\\s*+$)|^(?=\\.\\s*+$)"
            },
            { "begin": "\\s*+((?i:start))\\b",
              "beginCaptures": {
                  "1": { "name": "keyword.other.sql.oracle" }
              },
              "patterns": [
                { "include": "#sql-expression" }
              ],
              "end": "(?=\\s*+(?i:connect)\\b)|(?=;|\\))|^(?=\\s*+/\\s*+$)|^(?=\\.\\s*+$)"
            },
            { "begin": "\\s*+((?i:connect))\\b",
              "beginCaptures": {
                  "1": { "name": "keyword.other.sql.oracle" }
              },
              "patterns": [
                { "include": "#sql-expression" }
              ],
              "end": "(?=\\s*+(?i:order)\\b)|(?=;|\\))|^(?=\\s*+/\\s*+$)|^(?=\\.\\s*+$)"
            },
            { "begin": "\\s*+((?i:group))\\b",
              "beginCaptures": {
                  "1": { "name": "keyword.other.sql.oracle" }
              },
              "patterns": [
                { "include": "#sql-expression" }
              ],
              "end": "(?=\\s*+(?i:having|order)\\b)|(?=;|\\))|^(?=\\s*+/\\s*+$)|^(?=\\.\\s*+$)"
            },
            { "begin": "\\s*+((?i:having))\\b",
              "beginCaptures": {
                  "1": { "name": "keyword.other.sql.oracle" }
              },
              "patterns": [
                { "include": "#sql-expression" }
              ],
              "end": "(?=\\s*+(?i:order\\s++by))|(?=;|\\))|^(?=\\s*+/\\s*+$)|^(?=\\.\\s*+$)"
            }
          ],
          "end": "(?=;|\\))|^(?=\\s*+/\\s*+$)|^(?=\\.\\s*+$)"
        }
      ]
    }
  },
  "uuid": "a4ca2c84-f85d-4eed-a920-649b44cbdced"
}
