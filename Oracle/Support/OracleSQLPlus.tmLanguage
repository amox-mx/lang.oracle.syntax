<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string></string>
	</array>
	<key>name</key>
	<string>Oracle SQL*Plus</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#command-execute</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#command</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>alt-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#common-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string-unquoted</string>
				</dict>
			</array>
		</dict>
		<key>command</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*(?i)(newpage)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.deprecated.oracle.sqlplus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Alphabetical deprecated commands, options, end has to handle continuation</string>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|^\s*+$</string>
					<key>name</key>
					<string>meta.command.sqlplus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*(?i)(copy)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.deprecated.oracle.sqlplus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Alphabetical deprecated commands, options, end has to handle continuation</string>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|^\s*+$</string>
					<key>name</key>
					<string>meta.command.sqlplus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(append|create|from|insert|replace|select|to|using|where)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(\*|\+|=|,|\(|\))</string>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(/|@|\[|\])</string>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*(?i)(doc(?&gt;ument|umen|ume|um|u)?)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.deprecated.oracle.sqlplus</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>DOCUMENT deprecated command</string>
					<key>end</key>
					<string>^(#)$</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.sqlplus.oracle</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.command.sqlplus</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable-substitution</string>
						</dict>
						<dict>
							<key>match</key>
							<string>.</string>
							<key>name</key>
							<string>comment.other.sqlplus.oracle</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*+(@{1,2})</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Non Alphabetical</string>
					<key>end</key>
					<string>($)</string>
					<key>name</key>
					<string>meta.command.sqlplus.start</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable-substitution</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-quoted</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;=@)\s*+</string>
							<key>end</key>
							<string>(?=\s)</string>
							<key>name</key>
							<string>variable.other</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(ftp|http)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(\.|/|\\|\?|:|#|&amp;|=|\+|%)</string>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#alt-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(acc(?&gt;ept|ep|e)?)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.accept</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(binary_(double|float)|char|date|num(?&gt;ber|be|b)?)\b</string>
							<key>name</key>
							<string>storage.type</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(def(?&gt;ault|aul|au|a)?|for(?&gt;mat|ma|m)?|hide|nopr(?&gt;ompt|omp|om|i)?|prompt)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(a(?&gt;ppend|ppen|ppe|pp|p)?)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.append</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#terminator</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-unquoted</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(archive(\s++log(\s++list))?)(?=\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.archive-log-list</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(l(ist|og))\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#terminator</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(attr(?&gt;ibute|ibut|ibu|ib|i)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.attribute</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(ali(?&gt;as|a)?|cle(?&gt;ar|a)?|for(?&gt;mat|ma|m)?|like)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(o(ff|n))\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(\$|,|\.)</string>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(bre(?&gt;ak|a)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.break</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(on|ski(p))\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(dup(?&gt;licates|licate|licat|lica|lic|li|l)?|nodup(?&gt;licates|licate|licat|lica|lic|li|l)?|page|r(eport|ow))\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(bti(?&gt;tle|tl|t)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.btitle</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#title-include</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(c(?&gt;hange|hang|han|ha|h)?)(?=\b)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.change</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#terminator</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>string.unquoted</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\s*+(?&lt;sep&gt;\S)(.+?)(?=\k&lt;sep&gt;|\s*+$)</string>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\s*+(?&lt;sep&gt;\S)(?=\s*+((-|;)\s*+)?$)</string>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(cl(?&gt;ear|ea|e)?)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.clear</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#terminator</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>constant.character</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?i)\b(bre(?&gt;aks|ak|a)?|buff(?&gt;er|e)?|col(?&gt;umns|umn|um|u)?|comp(?&gt;utes|ute|ut|u)?|scr(?&gt;een|ee|e)?|sql|timi(?&gt;ng|n)?)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(col(?&gt;umn|um|u)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.column</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(ali(?&gt;as|a)?|cle(?&gt;ar|a)?|entmap|fo(ld_(a(?&gt;fter|fte|ft|f)?|b(?&gt;efore|efor|efo|ef|e)?)|r(?&gt;mat|ma|m)?)|hea(?&gt;ding|din|di|d)?|jus(?&gt;tify|tif|ti|f)?|like|n(ew(l(?&gt;ine|in|i)?|_v(?&gt;alue|alu|al|a)?)|opri(?&gt;nt|n)?|ull)|old_v(?&gt;alue|alu|al|a)?|pri(?&gt;nt|n)?|tru(?&gt;ncated|ncate|ncat|nca|nc|n)?|w(or(?&gt;d_wrapped|d_wrappe|d_wrapp|d_wrap|d_wra|d_wr|d_w|d_|d)?|ra(?&gt;pped|ppe|pp|p)?))\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(c(?&gt;enter|ente|ent|en|e)?|l(?&gt;eft|ef|e)?|o(ff|n)|r(?&gt;ight|igh|ig|i)?)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(\+|-|\*|/)</string>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(\$|,|\.)</string>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(comp(?&gt;ute|ut|u)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.compute</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(avg|cou(?&gt;nt|n)?|m(ax(?&gt;imun|imu|im|i)?|in(?&gt;imun|imu|im|i)?)|num(?&gt;ber|be|b)?|s(td|um)|var(?&gt;iance|ianc|ian|ia|i)?)\b</string>
							<key>name</key>
							<string>support.function</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(label|o(f|n))\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(r(eport|ow))\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(conn(?&gt;ect|ec|e)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.connect</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(as|edition)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(sys(asm|backup|dba|dg|oper|km))\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(=)</string>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(/|@|\[|\])</string>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)(?&lt;=/)(?!\s++as)[^\s@]++</string>
							<key>name</key>
							<string>string.unquoted</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(def(?&gt;ine|in|i)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.define</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(=)</string>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable-language</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?&lt;==)\s*+(?=([^'"&amp;\n])++)</string>
							<key>end</key>
							<string>(?=\s)</string>
							<key>name</key>
							<string>string.quoted.double.untitled</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#alt-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(del)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.delete</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\*</string>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#constant-numeric</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(last)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#terminator</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\S</string>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(desc(?&gt;ribe|rib|ri|r)?)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.describe</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(disc(?&gt;onnect|onnec|onne|onn|on|o)?)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.disconnect</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#terminator</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(exec(?&gt;ute|ut|u)?)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.execute</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(\+|-|:|=|/|\(|\)|&gt;|\.)</string>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(ed(?&gt;it|i)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.edit</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\.</string>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#identifier</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#terminator</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(exit|quit)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.exit</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(commit|rollback)\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(failure|success|warning)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#constant-numeric</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(commit|rollback)\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(:|\.)</string>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#identifier</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#terminator</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(get)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.get</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(file|list|nolist)\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(:|\.)</string>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(help|\?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.help</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#identifier</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#terminator</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(ho(?&gt;st|s)?|\$|\!)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.host</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(:|\.|/|\\|\*|%|{|}|\$|&gt;|&lt;|&amp;)</string>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#alt-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(i(?&gt;nput|npu|np|n)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.input</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#terminator</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-unquoted</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(l(?&gt;ist|is|i)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.list</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#terminator</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#constant-numeric</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)(\*|last)</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\S</string>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(passw(?&gt;ord|or|o)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.password</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#terminator</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#identifier</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(pau(?&gt;se|s)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.pause</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#terminator</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-unquoted</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(pri(?&gt;nt|n)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.print</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#terminator</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#identifier</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(pro(?&gt;mpt|mp|m)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.prompt</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable-substitution</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#terminator</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-unquoted</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(recover)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.recover</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>general-clause</string>
							<key>match</key>
							<string>(?i)\b(a(llow|utomatic)|c(ancel|o(ntinue|rruption))|default|from|logfile|test)\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>full-database-recovery</string>
							<key>match</key>
							<string>(?i)\b(backup|database|c(ancel|hange|ontrolfile)|s(napshot|tandby)|time|u(ntil|sing))\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>partial-database-recovery</string>
							<key>match</key>
							<string>(?i)\b(consistent|controlfile|datafile|standby|tablespace|until|with)\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>parallel-clause</string>
							<key>match</key>
							<string>(?i)\b(noparallel|parallel)\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>managed-clause</string>
							<key>match</key>
							<string>(?i)\b(database|managed|standby)\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>recover-clause</string>
							<key>match</key>
							<string>(?i)\b(a(ll|rchivelog)|c(hange|urrent)|d(e(fault|lay)|isconnect)|expire|from|l(ast|ogfile)|n(ext|o(delay|timeout)?)|s(e(quence|ssion)|witchover)|t(hr(ead|ough)|imeout)|u(ntil|sing))\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>cancel-clause</string>
							<key>match</key>
							<string>(?i)\b(cancel|immediate|nowait|wait)\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>finish-clause</string>
							<key>match</key>
							<string>(?i)\b(disconnect|f(inish|rom)|logfile|nowait|s(ession|kip|tandby)|wait)\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(,)</string>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(?&lt;=time)\s++(?!')</string>
							<key>end</key>
							<string>\s</string>
							<key>name</key>
							<string>string.unquoted</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(:|-)</string>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(repf(?&gt;ooter|oote|oot|oo|o)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.repfooter</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#rep-include</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(reph(?&gt;eader|eade|ead|ea|e)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.repheader</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#rep-include</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(run)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.run</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#terminator</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(sav(e)?)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.save</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(app(?&gt;end|en|e)?|cre(?&gt;ate|at|a)?|file|rep(?&gt;lace|lac|la|l)?)\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(:|\.)</string>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(set)(?=\s++(?!(role|transaction)\b))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.set</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#command-set-include</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(sho(w)?)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.show</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable-language-env</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#command-show-keywords</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#alt-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(shutdown)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.shutdown</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(abort|immediate|local|normal|transactional)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(spo(?&gt;ol|o)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.spool</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(app(?&gt;end|en|e)?|cre(?&gt;ate|at|a)?|file|out|rep(?&gt;lace|lac|la|l)?)\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(off)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(:|\.|/|\\)</string>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(sta(?&gt;rt|r)?)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.start</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable-substitution</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-quoted</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(?&lt;=start)\s++</string>
							<key>end</key>
							<string>(?=\s)</string>
							<key>name</key>
							<string>variable.other</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(ftp|http)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(\.|/|\\|\?|:|#|&amp;|=|\+|%)</string>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#alt-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(startup)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.startup</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(database|mount|open|p(file|luggable))\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(downgrade|force|nomount|only|quiet|re(ad|cover|strict)|upgrade|write)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(=)</string>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(store)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.store</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(app(?&gt;end|en|e)?|cre(?&gt;ate|at|a)?|file|out|rep(?&gt;lace|lac|la|l)?|set)\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(:|\.|/|\\)</string>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(timi(?&gt;ng|n)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.timing</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(show|st(art|op))\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(tti(?&gt;tle|tl|t)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.ttitle</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#title-include</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(undef(?&gt;ine|in|i)?)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.undefine</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(var(?&gt;iable|iabl|iab|ia|i)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.variable</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#storage</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(\(|\))</string>
							<key>name</key>
							<string>keyword.other.delimiter </string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(whenever)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.whenever</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(co(mmit|ntinue)|exit|rollback)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(failure|oserror|s(qlerror|uccess)|warning)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(:|\.)</string>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*(?i)(xquery)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>XQuery</string>
					<key>end</key>
					<string>(?=^/$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.xquery</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(declare|for|in|return)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(by(reference|value)|default|for|in|ordered|return|unordered)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(\$|:|\(|\)|/|\*|\[|\])</string>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*(?i)(\d++)(?=\s)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.numeric</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Pulling show as its own to handle auto-completion</string>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|^\s*+$</string>
					<key>name</key>
					<string>meta.command.sqlplus.edit</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(\S)</string>
							<key>name</key>
							<string>constant.character</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
					</dict>
					<key>match</key>
					<string>^(\.)\s*+$</string>
				</dict>
			</array>
		</dict>
		<key>command-execute</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)^(\s*+/)$</string>
					<key>name</key>
					<string>keyword.control.sqlplus</string>
				</dict>
				<dict>
					<key>match</key>
					<string>;</string>
					<key>name</key>
					<string>keyword.control.sqlplus</string>
				</dict>
			</array>
		</dict>
		<key>command-include</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string-quoted</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(--).*$</string>
					<key>name</key>
					<string>comment.line.double-dash</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-oracle</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant-numeric</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant-character</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant-language</string>
				</dict>
			</array>
		</dict>
		<key>command-keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?i)(a(bort|rchivelog|utomatic|pp(?&gt;end|en|e)?|s|l(l(ow)?|i(?&gt;as|a)?))|b(ackup|egin backup|uff(?&gt;er|e)?|re(?&gt;aks|ak|a)?|old)|c(urrent|hange|ancel|re(?&gt;ate|at|a)?|o(n(sistent|t(rolfile|inue))|rruption|m(mit|p(?&gt;utes|ute|ut|u)?)|l((?&gt;umns|umn|um|u)?)?)|(e(?&gt;nter|nte|nt|n)?)?|le(?&gt;ar|a)?)|d(owngrade|isconnect|ata(file|base)|up(?&gt;licates|licate|licat|lica|lic|li|l)?|e(lay|f(?&gt;ault|aul|au|a)?))|e(x(it|pire)|dition|n(d backup|tmap))|f(inish|rom|o(ld_(b(?&gt;efore|efor|efo|ef|e)?|a(?&gt;fter|fte|ft|f)?)|r(ce|(?&gt;mat|ma|m)?)))|h(ea(?&gt;ding|din|di|d)?|ide)|i(mmediate|nsert)|jus(?&gt;tify|tif|ti|t)?|l(o(cal|gfile)|a(st|b(?&gt;el|e)?)|(e(?&gt;ft|f)?)?|i(ke|st))|m(ount|anaged)|n(ul(l)?|e(xt|w(_v(?&gt;alue|alu|al|a)?|l(?&gt;ine|in|i)?))|o(ne|mount|rmal|wait|timeout|list|d(elay|up(?&gt;licates|licate|licat|lica|lic|li|l)?)|p(arallel|r(i(?&gt;nt|n)?|(?&gt;ompt|omp|om|o)?)))?)|o(pen|ut|ld_v(?&gt;alue|alu|al|a)?|n(ly)?|f(f)?)|p(luggable|file|arallel|r(i(?&gt;nt|n)?|ompt))|quiet|r(ollback|e(cover|ad|strict|p(?&gt;lace|lac|la|l)?)|(?&gt;ight|igh|ig|i)?)|s(how|witchover|e(t|quence|ssion)|napshot|t(op|a(rt|ndby))|ql|cr(?&gt;een|ee|e)?|(ki(p)?)?)|t(hr(ough|ead)|est|o|r(ansactional|u(?&gt;ncated|ncate|ncat|nca|nc|n)?)|im(e(out)?|i(?&gt;ng|n)?)|ab(lespace)?)|u(pgrade|ntil|sing)|w(ait|ith|or(?&gt;d_wrapped|d_wrappe|d_wrapp|d_wrap|d_wra|d_wr|d_w|d_|d)?|r(ite|a(?&gt;pped|ppe|pp|p)?)))\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?i)(avg|cou(?&gt;nt|n)?|min(?&gt;imum|imu|im)?|max(?&gt;imum|imu|im|i)?|sum|std|var(?&gt;iance|ianc|ian|ia|i)?)\b</string>
					<key>name</key>
					<string>support.function</string>
				</dict>
			</array>
		</dict>
		<key>command-options-include</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#command-include</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#command-keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage</string>
				</dict>
			</array>
		</dict>
		<key>command-set-include</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=define)\s*&amp;</string>
					<key>name</key>
					<string>keyword.other.delimiter</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\+|\.|!|\$|\-|#|;)</string>
					<key>name</key>
					<string>keyword.other.delimiter</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#command-set-keywords</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#alt-clause</string>
				</dict>
			</array>
		</dict>
		<key>command-set-keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#variable-language-env</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Options for SET command</string>
					<key>match</key>
					<string>\b(?i)(body|depth|e(ntmap|xp(?&gt;lain|lai|la|l)?)|for(?&gt;mat|ma|m)?|head|i(dentifier|ndent)|linenum|pre(?&gt;format|forma|form|for|fo|f)?|s(ize|pool|tat(?&gt;istics|istic|isti|ist|is|i)?)|t(able|runcate)|un(auth(?&gt;orized|orize|oriz|ori|or|o)?|k(?&gt;nown|now|no|n)?))\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?i)(c(losecursur|ompatibility)|document|maxdata|s(can|pace)|truncate)\b</string>
					<key>name</key>
					<string>invalid.deprecated.oracle.sqlplus</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?i)(by(reference|value)|e(a(?&gt;ch|c)?|ntry)|default|full|i(mm(?&gt;ediate|ediat|edia|edi|ed|e)?|n(termed(?&gt;iate|iat|ia|i)?|v(?&gt;isible|isibl|isib|isi|is|i)?))|lo(?&gt;wer|we|w)?|mix(?&gt;ed|e)?|ordered|u(nordered|p(?&gt;per|pe|p)?)|none|o(ff|n)|tr(aceonly|u(?&gt;ncated|ncate|ncat|nca|nc|n)?)|unl(?&gt;imited|imite|imit|imi|im|i)?|vis(?&gt;ible|ibl|ib|i)?|w(or(?&gt;d_wrapped|d_wrappe|d_wrapp|d_wrap|d_wra|d_wr|d_w|d_|d)?|r(?&gt;apped|appe|app|ap|a)?))\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
			</array>
		</dict>
		<key>command-show-keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\b(err(?&gt;ors)?)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\b(?i)(body|function|java class|p(ackage|rocedure)|t(ype|rigger)|view)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\.</string>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#extended-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(?i)(all|dimension|p(dbs|arameters)|recyc(?&gt;lebin|lebi|leb|le|l)?|s(ga|p(parameters|oo(l)?)))\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>System variables used in SHOW command</string>
					<key>match</key>
					<string>\b(?i)(bti(?&gt;tle|tl|t)?|con_(name|id)|edition|re(p(h(?&gt;eader|eade|ead|ea|e|)?|f(?&gt;ooter|oote|oot|oo|o)?)|l(?&gt;ease|eas|ea|e)?)|tti(?&gt;tle|tl|t)?|user)\b</string>
					<key>name</key>
					<string>variable.language</string>
				</dict>
			</array>
		</dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(rem(?&gt;ark|ar|a)?)(?=\s*+$|\s|;)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=[^- \t])(?&gt;(\t| )*+\n)|(?=^\s*+$)</string>
					<key>name</key>
					<string>meta.command.sqlplus.remark</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#terminator</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\S</string>
							<key>name</key>
							<string>comment.line</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Only valid on a line by itself</string>
					<key>match</key>
					<string>^\s*+(--).*$</string>
					<key>name</key>
					<string>comment.line.double-dash</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Only valid on a line by itself</string>
					<key>match</key>
					<string>(?&lt;=;)\s*+(--).*$</string>
					<key>name</key>
					<string>comment.line.double-dash</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(/\*(?=[^[:alpha:]]))</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Space needed after the opening, otherwise it can be interpreted as a slash and try to execute whatever is in the buffer.</string>
					<key>end</key>
					<string>(\*/)</string>
					<key>name</key>
					<string>comment.block</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(/\*[[:alpha:]])</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Space needed after the opening, otherwise it can be interpreted as a slash and try to execute whatever is in the buffer.</string>
					<key>end</key>
					<string>(\*/)</string>
					<key>name</key>
					<string>comment.block</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(/\*(?=[^[:alpha:]]))</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Space needed after the opening, otherwise it can be interpreted as a slash and try to execute whatever is in the buffer.</string>
					<key>end</key>
					<string>(\*/)</string>
					<key>name</key>
					<string>comment.block</string>
				</dict>
			</array>
		</dict>
		<key>common-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string-quoted</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-substitution</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-oracle</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#terminator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#invalid-comment</string>
				</dict>
			</array>
		</dict>
		<key>constant-character</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(:|/|\.|,|;|\\|@|\?|\$|\||#|&gt;)</string>
					<key>name</key>
					<string>constant.character</string>
				</dict>
			</array>
		</dict>
		<key>constant-language</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?i)(all|by(value|reference)|e(a(?&gt;ch|c)?|ntry)|default|full|i(n(v(?&gt;isible|isibl|isib|isi|is|i)?|termed(?&gt;iate|iat|ia|i)?)|mm(?&gt;ediate|ediat|edia|edi|ed|d)?)|lo(?&gt;wer|we|w)?|mix(?&gt;ed|e)?|none|o(rdered|n|ff)|sql|tr(u(?&gt;ncated|ncate|ncat|nca|nc|n)?|ace(?&gt;only|onl|on|o)?)|u(p(?&gt;per)?|n(ordered|l(?&gt;imited|imite|imit|imi|im|i)?))|vis(?&gt;ible|ibl|ib|i)?|w(or(?&gt;d_wrapped|d_wrappe|d_wrappe|d_wrapp|d_wrap|d_wra|d_wr|d_w|d_|d)?|r(?&gt;apped|appe|app)?))\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
			</array>
		</dict>
		<key>constant-numeric</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.indicator</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.other.indicator</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\b(a|S|A|B|C|L|U)?|(?&lt;=([[:digit:]]))(D|G|V))([[:digit:]])++(\b|(?=D|G|V)|(S|EEEE|MI|PR))</string>
			<key>name</key>
			<string>constant.numeric</string>
		</dict>
		<key>extended-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#common-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constant-numeric</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#identifier</string>
				</dict>
			</array>
		</dict>
		<key>identifier</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(")(?=([^"]){0,30}")</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(")</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable-other-substitution-oracle-sqlplus</string>
						</dict>
						<dict>
							<key>match</key>
							<string>.</string>
							<key>name</key>
							<string>variable.other</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(")(?=([^"]){31,}")</string>
					<key>end</key>
					<string>(")</string>
					<key>name</key>
					<string>invalid.illegal</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)(?&lt;!\$)(\$\$)([[:alpha:]])(([\w$#]){0,29})(?!([\w$#]))</string>
					<key>name</key>
					<string>variable.language</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b([[:alpha:]])(([\w$#]){0,29})(?!([\w$#]))</string>
					<key>name</key>
					<string>variable.other</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b([[:alpha:]])(([\w$#]){30,})</string>
					<key>name</key>
					<string>invalid.illegal</string>
				</dict>
			</array>
		</dict>
		<key>invalid-comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(--).*$</string>
					<key>name</key>
					<string>comment.line.double-dash</string>
				</dict>
			</array>
		</dict>
		<key>operator</key>
		<dict>
			<key>match</key>
			<string>-|\+|=|\(|\)|\[|\]|\*</string>
			<key>name</key>
			<string>keyword.operator</string>
		</dict>
		<key>print-spec</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(bold|c(e(?&gt;nter|nte|nt|n)?|ol)|format|le(?&gt;ft|f)?|r(?&gt;ight|igh|ig|i)?|s(?&gt;kip|ki|k)?|tab)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>rep-include</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#title-include</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(page)\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
			</array>
		</dict>
		<key>storage</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(?i)(b(lob|file|yte|inary_(double|float))|c(lob|har)|date|n(c(clob|har)|um(?&gt;ber|be|b)?)|refcursor|varchar2)\b</string>
					<key>name</key>
					<string>storage.type</string>
				</dict>
			</array>
		</dict>
		<key>string-quoted</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(')</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(')</string>
					<key>name</key>
					<string>string.quoted.single</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable-substitution</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable-language</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(")</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(")</string>
					<key>name</key>
					<string>string.quoted.double</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable-substitution</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable-language</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>string-unquoted</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#constant-numeric</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\S)</string>
					<key>name</key>
					<string>string.unquoted</string>
				</dict>
			</array>
		</dict>
		<key>terminator</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(;|-)(?=\s*+$)</string>
					<key>name</key>
					<string>keyword.other.delimiter</string>
				</dict>
			</array>
		</dict>
		<key>title-include</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#print-spec</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(o(ff|n)|page)\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(,|\.)</string>
					<key>name</key>
					<string>keyword.other.delimiter</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#extended-clause</string>
				</dict>
			</array>
		</dict>
		<key>variable-bind</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;=\s)(:)([[:alnum:]_])([[:alnum:]_])*+</string>
			<key>name</key>
			<string>variable.other.bind</string>
		</dict>
		<key>variable-language</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>_(CONNECT_IDENTIFIER|DATE|EDITOR|O_(VERSION|RELEASE)|PRIVILEGE|SQLPLUS_RELEASE|USER)\b</string>
					<key>name</key>
					<string>variable.language</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(\bsql(?=\.)|\b(pno|sqlcode|lno|http|ftp)\b)</string>
					<key>name</key>
					<string>variable.language</string>
				</dict>
			</array>
		</dict>
		<key>variable-language-env</key>
		<dict>
			<key>comment</key>
			<string>System variables used in SET command</string>
			<key>match</key>
			<string>\b(?i)(a(uto(recovery|(?&gt;commit|commi|comm|com|co|c)?|p(?&gt;rint|rin|ri|r)?|t(?&gt;race|rac|ra|r)?)|rray(?&gt;size|siz|si|s)?|ppi(?&gt;nfo|nf|nf|n)?)|b(lo(?&gt;ckterminator|ckterminato|ckterminat|cktermina|cktermin|cktermi|ckterm|ckter|ckte|ckt|ck|c)?|aseuri)|c(mds(?&gt;ep|e)?|o(py(typecheck|c(?&gt;ommit|ommi|omm|om|o)?)|n(?&gt;cat|ca|c)?|l(invi(?&gt;sible|sibl|sib|si|s)?|sep)|ntext))|de(scribe|f(?&gt;ine|in|i)?)|e(xitc(?&gt;ommit|ommi|omm|om|o)?|sc(char|(?&gt;ape|ap|a)?)|rrorl(?&gt;ogging)?|mb(?&gt;edded)?|ditf(?&gt;ile|il|i)?|cho)|f(l(u(?&gt;sh)?|agger)|eed(?&gt;back|bac|ba|b)?)|h(tml|ea(ds(?&gt;ep|e)?|(?&gt;ding|din|di|d(?!\s++"))?))|instance|l(o(gsource|bof(?&gt;fset|fse|fs|f)?)|in(?&gt;esize|esiz|esi|es|e)?|ong(c(?&gt;hunksize|hunksiz|hunksi|hunks|hunk|hun|hu|h)?)?)|mark(?&gt;up|u)?|n(u(m(f(?&gt;ormat|orma|orm|or|o)?|(?&gt;width|widt|wid|wi|w)?)|ll)|ewp(?&gt;age)?|ode)|ordering|pa(u(?&gt;se|s)?|ges(?&gt;ize|iz|i)?)|recsep(char)?|s(uf(?&gt;fix|fi|f)?|h(ow(?&gt;mode|mod|mo|m)?|ift(?&gt;inout|inou|ino|in|i)?)|ql(t(?&gt;erminator|erminato|erminat|ermina|ermin|ermi|erm|er|e)?|n(?&gt;umber|umbe|umb|um|u)?|c(o(?&gt;ntinue|ntinu|ntin|nti|nt|n)?|(?&gt;ase|as|a)?)|bl(?&gt;anklines|anline|anklin|ankli|ankl|ank|an|a)?|p(re(?&gt;fix|fi|f)?|luscompat(?&gt;ibility|ibilit|ibili|ibil|ibi|ib|i)?|(?&gt;rompt|romp|rom|ro|r)?))|e(curedcol|rverout(?&gt;put|pu|p)?))|t(rim(s(?&gt;pool|poo|po|p)?|(?&gt;out|ou|o)?)|i(mi(?&gt;ng|n)?|(?&gt;me)?)|erm(?&gt;out|ou|o)?|ab)|un(til|d(?&gt;erline|erlin|erli|erl|er|e)?)|ver(?&gt;ify|if|i)?|w(ith|ra(p)?)|x(query|mlopt(?&gt;imizationcheck|imizationchec|imizationche|imizationch|imizationc|imization|imizatio|imizati|imizat|imiza|imiz|imi|im|i)?))\b</string>
			<key>name</key>
			<string>variable.language</string>
		</dict>
		<key>variable-oracle</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#variable-language</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-substitution</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-bind</string>
				</dict>
			</array>
		</dict>
		<key>variable-substitution</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;!&amp;)(&amp;{1,2})\s*+(?:[[:alnum:]_])++(\.)?</string>
			<key>name</key>
			<string>variable.other.substitution</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.oracle.sqlplus</string>
	<key>uuid</key>
	<string>9e0148ca-0796-4a8b-8e0a-9a5f3b222692</string>
</dict>
</plist>
