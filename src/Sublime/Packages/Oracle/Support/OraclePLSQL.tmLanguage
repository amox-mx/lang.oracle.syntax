<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string></string>
	</array>
	<key>hidden</key>
	<true/>
	<key>name</key>
	<string>Oracle PL/SQL</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#meta-block</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#subprogram</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>accessible-by-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>accessible-by-clause</string>
					<key>match</key>
					<string>(?i)\b(accessible|by)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>block-declaration</key>
		<dict>
			<key>begin</key>
			<string>(?i)(^|(?&lt;= |\t|;))declare(?=\s)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=(?i)\b(begin)(\s|$))</string>
			<key>name</key>
			<string>meta.section.declare</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block-declaration-oracle-plsql-include</string>
				</dict>
			</array>
		</dict>
		<key>block-declaration-oracle-plsql-include</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#pragma</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#subprogram</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-declaration-oracle-plsql</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-other-substitution-oracle-sqlplus</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-other-bind-oracle-sqlplus</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword-delimiter</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#statement-conditional-compile</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#identifier</string>
				</dict>
			</array>
		</dict>
		<key>block-exception</key>
		<dict>
			<key>begin</key>
			<string>(?i)(^|(?&lt;= |\t|;))exception(?=\s)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.oracle.plsql</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?=(?i)\b(end)(\s|;))</string>
			<key>name</key>
			<string>meta.block.exception</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\b(when)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=(?i)\b(end|then)(\s|;))</string>
					<key>name</key>
					<string>meta.block.exception.handler</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(invalid_number|no_data_(found|needed)|others|rowtype_mismatch|too_many_rows|zero_divide)\b</string>
							<key>name</key>
							<string>support.variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(then)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=(?i)\b(end|when)(\s|;))</string>
					<key>name</key>
					<string>meta.block.exception.handler</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#statement</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>block-executable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(^|(?&lt;= |\t|;))begin(?=\s)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control.oracle.plsql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?i)(^|(?&lt;= |\t|;))end(?!\s++(if|loop|case)\b)(\s++\w++)?.*(;)</string>
					<key>endCaptures</key>
					<dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.section.executable</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#block-exception</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#label</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#statement</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#label</string>
				</dict>
			</array>
		</dict>
		<key>block-executable-oracle-plsql-include</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#label</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-executable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#static-sql</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#statement-conditional</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-other-substitution-oracle-sqlplus</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-other-bind-oracle-sqlplus</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword-delimiter</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword-operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#statement</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literal</string>
				</dict>
			</array>
		</dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;!-)(--)(.*)$</string>
					<key>name</key>
					<string>comment.line.double-dash</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(/\*)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\*/)</string>
					<key>name</key>
					<string>comment.block</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(/\*)</string>
							<key>end</key>
							<string>(\*/)</string>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>error-directive</key>
		<dict>
			<key>begin</key>
			<string>(?i)(\$error\b)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.oracle.plsql</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?i)(\$end\b)</string>
			<key>name</key>
			<string>statement.directive.error</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#literal</string>
				</dict>
			</array>
		</dict>
		<key>expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword-operator</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(case)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?i)\b(end)\b</string>
					<key>name</key>
					<string>meta.block.case</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(else|then|when)\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?i)(?=(select)\s)</string>
							<key>end</key>
							<string>(?=\))</string>
							<key>name</key>
							<string>meta.block.statement.oracle.sql</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.oracle.sql</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(any|by|cluster|hash|order|partition|range|trigger|value)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(multiset\s++(except|intersect|union)(\s++(all|distinct))?)\b</string>
					<key>name</key>
					<string>keyword.other.multiset</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(inserting|updating|deleting)\b</string>
					<key>name</key>
					<string>keyword.other.predicate</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=\.)(currval|nextval)\b</string>
					<key>name</key>
					<string>support.variable</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=%)(bulk_(exceptions|rowcount)|found|isopen|notfound|rowcount)\b</string>
					<key>name</key>
					<string>support.variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#identifier</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#keyword-delimiter</string>
				</dict>
			</array>
		</dict>
		<key>identifier</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(")(?=([^"]){0,30}")</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(")</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable-other-substitution-oracle-sqlplus</string>
						</dict>
						<dict>
							<key>match</key>
							<string>.</string>
							<key>name</key>
							<string>variable.other</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(")(?=([^"]){31,}")</string>
					<key>end</key>
					<string>(")</string>
					<key>name</key>
					<string>invalid.illegal</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)(?&lt;!\$)(\$\$)([[:alpha:]])(([\w$#]){0,29})(?!([\w$#]))</string>
					<key>name</key>
					<string>variable.language</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b([[:alpha:]])(([\w$#]){0,29})(?!([\w$#]))</string>
					<key>name</key>
					<string>variable.other</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b([[:alpha:]])(([\w$#]){30,})</string>
					<key>name</key>
					<string>invalid.illegal</string>
				</dict>
			</array>
		</dict>
		<key>invoker-rights-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>invoker-rights-clause</string>
					<key>match</key>
					<string>(?i)\b(authid|current_user|definer)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>keyword-delimiter</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(\+|:=|=&gt;|%|\|\||/|\*{1,2}|(?&lt;!\.)((\.){1,2})(?!\.)|=|&lt;&gt;|!=|~=|\^=|&lt;(=)?|&gt;(=)?|-)</string>
					<key>name</key>
					<string>keyword.operator</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\(|\))</string>
					<key>name</key>
					<string>keyword.other.delimiter</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(,)</string>
					<key>name</key>
					<string>keyword.other.separator</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(@)</string>
					<key>name</key>
					<string>keyword.other.indicator</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(;)</string>
					<key>name</key>
					<string>keyword.other.terminator</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(:)</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>keyword-operator</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(and|between|escape|i(n|s)|like|not|or)\b</string>
					<key>name</key>
					<string>keyword.operator</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(a\s++set|empty|member(\s++of)?|submultiset(\s++of)?)\b</string>
					<key>name</key>
					<string>keyword.operator.multiset</string>
				</dict>
			</array>
		</dict>
		<key>label</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.delimiter</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.tag</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.other.delimiter</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^\s*+(&lt;&lt;)(.+?)(&gt;&gt;)(.*)?$</string>
			<key>name</key>
			<string>entity.name.function</string>
		</dict>
		<key>library</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(^|(?&lt;= |\t|;))(?=(library)\s)</string>
					<key>end</key>
					<string>(?&lt;=;)</string>
					<key>name</key>
					<string>meta.block.library</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?i)(^|(?&lt;= |\t|;))(?=(library)\s)</string>
							<key>end</key>
							<string>(?i)(?=(^|(?&lt;= |\t|;))(is|as)(?=\s))|(?&lt;=;)</string>
							<key>name</key>
							<string>meta.block.package.heading</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other.oracle.plsql</string>
										</dict>
									</dict>
									<key>match</key>
									<string>(?i)\b(library)\s++(&amp;?(\w|&amp;|\.)++)\b</string>
									<key>name</key>
									<string>entity.name.function</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(^|(?&lt;= |\t|;))(is|as)(?=\s)</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.control</string>
								</dict>
							</dict>
							<key>end</key>
							<string>;</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.block.declaration</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(agent|credential)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>literal</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(n|N)?'</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'(?!')</string>
					<key>name</key>
					<string>constant.character</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>('')+</string>
							<key>name</key>
							<string>string.quoted.single</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(n|N)?(q|Q)'(\[)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(])'</string>
					<key>name</key>
					<string>constant.character</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(')</string>
							<key>name</key>
							<string>string.quoted.single</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(n|N)?(q|Q)'({)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(})'</string>
					<key>name</key>
					<string>constant.character</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(')</string>
							<key>name</key>
							<string>string.quoted.single</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(n|N)?(q|Q)'(&lt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)'</string>
					<key>name</key>
					<string>constant.character</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(')</string>
							<key>name</key>
							<string>string.quoted.single</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(n|N)?(q|Q)'(\()</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))'</string>
					<key>name</key>
					<string>constant.character</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(')</string>
							<key>name</key>
							<string>string.quoted.single</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(n|N)?(q|Q)'([^\s\[|{|&lt;|\(])</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\3)'</string>
					<key>name</key>
					<string>constant.character.oracle.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(')</string>
							<key>name</key>
							<string>string.quoted.single</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>constant.character</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>constant.character</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(\+|-)?\d++((\.)\d++|\d++((\.)\d++)?)?((e|E)?(\+|-)?(\d++)?)?(f|F|d|D)?\b</string>
					<key>name</key>
					<string>constant.numeric</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(binary_((float|double)_(m(in_(subnormal|normal)|ax_(subnormal|normal))|infinity|nan))|false|null|true)\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
			</array>
		</dict>
		<key>meta-block</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=(?i)\b(begin|declare|library|package|trigger|type)(\s|$))|(?=&lt;&lt;)</string>
					<key>end</key>
					<string>((?=^(\s*+/\s*+|\.)$))</string>
					<key>name</key>
					<string>meta.block.oracle.plsql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#label</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#subprogram</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#package</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#trigger</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#block-executable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#block-declaration</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#library</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#type</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#type-body</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>match</key>
							<string>\S</string>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>package</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(^|(?&lt;= |\t|;))(?=(package)\s)</string>
					<key>end</key>
					<string>(?&lt;=;)</string>
					<key>name</key>
					<string>meta.block.package</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?i)(^|(?&lt;= |\t|;))(?=(package)\s)</string>
							<key>end</key>
							<string>(?i)(?=(^|(?&lt;= |\t|;))(is|as)(?=\s))|(?&lt;=;)</string>
							<key>name</key>
							<string>meta.block.package.heading</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other.oracle.plsql</string>
										</dict>
									</dict>
									<key>match</key>
									<string>(?i)\b(package(\s++body)?)\s++(&amp;?(\w|&amp;|\.)++)\b</string>
									<key>name</key>
									<string>entity.name.function</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(?i)\b(authid\s++(current_user|definer))\b</string>
									<key>name</key>
									<string>keyword.control</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?i)\b(accessible\s++by)\b</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.control</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?&lt;=\))</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#expression</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(^|(?&lt;= |\t|;))(is|as)(?=\s)</string>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.control.oracle.plsql</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?i)(?=\b(end(\s++\w++)?(\s*+;)|begin(\s|$)))</string>
							<key>name</key>
							<string>meta.block.declaration</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#block-declaration-oracle-plsql-include</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#block-executable</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.control.oracle.plsql</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>variable.other.oracle.plsql</string>
								</dict>
								<key>4</key>
								<dict>
									<key>name</key>
									<string>keyword.other.terminator.oracle.plsql</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?i)(^|(?&lt;= |\t|;))(end)\b(\s++(&amp;)?\w++)?\s*+(;)</string>
							<key>name</key>
							<string>keyword.control.oracle.plsql</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>parameter-definition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>name</key>
					<string>meta.block.parameters.define</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(int|long|string|ocidate)\b</string>
							<key>name</key>
							<string>storage.type</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(by|charset(form|id)|duration|indicator|length|maxlen|re(ference|turn)|struct|tdo)\b</string>
							<key>name</key>
							<string>storage.modifier</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(context|self)\b</string>
							<key>name</key>
							<string>support.variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#statement-conditional-compile</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable-other-substitution-oracle-sqlplus</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable-other-bind-oracle-sqlplus</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#keyword-delimiter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#storage</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#support</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#literal</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#identifier</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>pragma</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\b(pragma)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=;)</string>
					<key>name</key>
					<string>meta.statement.pragma</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(autonomous_transaction|exception_init|serially_reusable|udf)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)\b(restrict_references)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>invalid.deprecated</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?&lt;=\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>(?i)\b(default|rn(d|p)s|trust|wn(d|p)s)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#identifier</string>
										</dict>
									</array>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>pragma-inline</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\b(pragma)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=;)</string>
					<key>name</key>
					<string>meta.statement.pragma</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(inline)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>statement</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#statement-block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#statement-loop</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#statement-case</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#statement-continue-exit</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#statement-if</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#pragma-inline</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)(?&lt;=^|;)\s*+(null)(?=\s*+;)</string>
					<key>name</key>
					<string>meta.statement.null</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#statement-assignment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-other-substitution-oracle-sqlplus</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(date|timestamp)\b</string>
					<key>name</key>
					<string>keyword.other.ansi.oracle.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(day|hour|interval|m(inute|onth)|second|to\s++(day|hour|m(inute|onth)|second| year)|year)\b</string>
					<key>name</key>
					<string>keyword.other.interval.oracle.sql</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(execute)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=;)</string>
					<key>name</key>
					<string>meta.statement.execute</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(bulk\s++collect|i(mmediate|n(to)?)|out|return(ing)?|using)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(forall)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=;)</string>
					<key>name</key>
					<string>meta.statement.forall</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(and|between|exceptions|in(dices\s++of)?|save|values\s++of)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#static-sql</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(bulk|collect)\b</string>
					<key>name</key>
					<string>keyword.other.oracle.plsql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(into)\b</string>
					<key>name</key>
					<string>keyword.control.plsql.oracle</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(fetch)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=;)</string>
					<key>name</key>
					<string>meta.statement.fetch</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(bulk\s++collect|into|limit)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(open)\s++(\w++)\b\s*+(?!for)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=;)</string>
					<key>name</key>
					<string>meta.statement.open</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(open)\s++(:)?(\w++)\b\s++(for)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=;)</string>
					<key>name</key>
					<string>meta.statement.open.for</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#static-sql</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(using|in|out)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(close|goto|pipe\s++row|r(aise|eturn))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=;)</string>
					<key>name</key>
					<string>meta.statement</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#statement-conditional-compile</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#static-sql</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>statement-assignment</key>
		<dict>
			<key>begin</key>
			<string>(?i)\s*+(?!if|then|else)(?=(:)?([[:alpha:]])([\w#$\.])*+\s*+(\(.*\))?(\.([[:alpha:]])([\w#$\.])*+)?\s*+:=)</string>
			<key>end</key>
			<string>(?=;)</string>
			<key>name</key>
			<string>meta.statement.assignment</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(:=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=;)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>statement-block</key>
		<dict>
			<key>begin</key>
			<string>(?=(?i)\b(begin|declare)(\s|$))</string>
			<key>end</key>
			<string>(?&lt;=;)</string>
			<key>name</key>
			<string>meta.block</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#block-executable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-declaration</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\S</string>
					<key>name</key>
					<string>meta.diff</string>
				</dict>
			</array>
		</dict>
		<key>statement-case</key>
		<dict>
			<key>begin</key>
			<string>(?i)(^|(?&lt;= |\t|;))case(?=\s)</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.control.oracle.plsql</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?i)(^|(?&lt;= |\t|;))end(\s++case)(\s*+(;?))</string>
			<key>name</key>
			<string>meta.statement.case</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\b(?&lt;=then)(\s++)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?i)(?=\b(e(lse|nd\s++case)|when)(\s|;))</string>
					<key>name</key>
					<string>meta.statement.case.when</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#statement</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(?&lt;=else)(\s++)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?i)(?=(\bend)(\s|;))</string>
					<key>name</key>
					<string>meta.statement.case.else</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#statement</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(else|then|when)\b</string>
					<key>name</key>
					<string>keyword.control.untitled</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>statement-conditional-compile</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(^|(?&lt;= |\t|;))\$if(?=\s)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?i)(^|(?&lt;= |\t|;))\$end\b</string>
					<key>name</key>
					<string>meta.statement.conditional.compile</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?i)(?&lt;=\$then)(\b)</string>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.control</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?i)(?=(\$)(e(nd|lse))(\b))</string>
							<key>name</key>
							<string>meta.statement.conditional.compile.statements</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#error-directive</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#block-declaration-oracle-plsql-include</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#statement</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(?&lt;=\$else)(\b)</string>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.control</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?i)(?=(\$end)(\b))</string>
							<key>name</key>
							<string>meta.statement.conditional.compile.statements</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#error-directive</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#block-declaration-oracle-plsql-include</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#statement</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)(\$)(else|then)\b</string>
							<key>name</key>
							<string>keyword.other.conditional</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>statement-continue-exit</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\b(continue|exit)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.loop</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=;)</string>
					<key>name</key>
					<string>meta.statement.loop.exit</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(when)\b</string>
							<key>name</key>
							<string>keyword.control.loop</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>statement-if</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(^|(?&lt;= |\t|;))if(?=\s)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?i)(^|(?&lt;= |\t|;))end\s++if\s*+(;)</string>
					<key>endCaptures</key>
					<dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter.oracle.plsql</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.statement.if</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?i)\b(?&lt;=then)(\s++)</string>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.control</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?i)(?=(e(nd\s++if|ls(e|if)))(\s|;))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#statement</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)\b(?&lt;=else)(\s++)</string>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.control</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?i)(?=(\bend\s++if)(\s|;))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#statement</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>\b(?i)(els(e|if)|then)\b</string>
							<key>name</key>
							<string>keyword.other.conditional</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>statement-loop</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(^|(?&lt;= |\t|;))loop(?=\s)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?i)(^|(?&lt;= |\t|;))end(\s++)loop(\s++\w++)?(\s*;)</string>
					<key>endCaptures</key>
					<dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.statement.loop</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#statement</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(^|(?&lt;=;))\s*+(for)\s++(\w++)</string>
					<key>beginCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?i)(?=\b(loop)\b)</string>
					<key>name</key>
					<string>meta.statement.loop</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(in|reverse)\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(while)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?i)(?=\b(loop)\b)</string>
					<key>name</key>
					<string>meta.statement.loop</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>static-sql</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(?=\s*\b(commit|insert|(?&lt;!\.)delete|lock\s++table|merge|rollback|s(avepoint|e(lect|t\s++transaction))|update)\b)</string>
					<key>end</key>
					<string>(?=;)</string>
					<key>name</key>
					<string>meta.block.statement.oracle.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.oracle.sql</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>storage</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(byte|char|n(char|varchar2)|varchar2)\b</string>
					<key>name</key>
					<string>storage.type.characer</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(binary_(double|float)|float|number)\b</string>
					<key>name</key>
					<string>storage.type.number</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(long(\s++raw)|raw)\b</string>
					<key>name</key>
					<string>invalid.deprecated</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(date|interval\s++(day|year)|t(o(\s++(month|second))|imestamp)|with(\s++local)?\s++time\s++zone)\b</string>
					<key>name</key>
					<string>storage.type.datetime</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(b(file|lob)|clob|nclob)\b</string>
					<key>name</key>
					<string>storage.type.large-object</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(rowid|urowid)\b</string>
					<key>name</key>
					<string>storage.type.rowid</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(char((\s++varying)?|acter(\s++varying)?)|d(ouble(\s++precision)?|ec(imal)?)|int(eger)?|n(ational|char(\s++varying)?|umeric)|real|smaillint|varchar)\b</string>
					<key>name</key>
					<string>storage.type.ansi</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(ord(audio|d(icom|oc)|image|video)|s(do_(geo(metry|raster)|topo_geometry)|i_(averagecolor|color(histogram)?|featurelist|positionalcolor|stillimage|texture)|ys\.(any(data(set)?|type|)))|uritype|xmltype)\b</string>
					<key>name</key>
					<string>storage.type.oracle-provided</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(b(inary_integer|oolean)|pls_integer|ref\s++cursor)\b</string>
					<key>name</key>
					<string>storage.type.scalar</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(natural(n)?|positive(n)?|si(gntype|mple_(double|integer|float)))\b</string>
					<key>name</key>
					<string>storage.type.subtype</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(cursor)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>storage.type.subtype</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=;)</string>
					<key>name</key>
					<string>meta.type.cursor</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(is|return)\b</string>
							<key>name</key>
							<string>keyword.other.storage</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(?=\(\s*select )</string>
							<key>end</key>
							<string>(?&lt;=\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#parameter-definition</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#static-sql</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(exception|i(s)|r(e(turn|cord))|s(ys_refcursor)|t(able|ype)|var(ray))\b</string>
					<key>name</key>
					<string>storage.type.composite</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=%)(rowtype|type)\b</string>
					<key>name</key>
					<string>storage.type.subtype</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(constant|default|i(n(dex\s++by)?|s(?=\s++table))|no(copy|t\s++null)|o(ut|f)|r(ange|ef)|subtype)\b</string>
					<key>name</key>
					<string>storage.modifier</string>
				</dict>
			</array>
		</dict>
		<key>subprogram</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(^|(?&lt;= |\t|;))(?=(procedure|function)\s)</string>
					<key>end</key>
					<string>(?&lt;=;)|^(?=/\s*)</string>
					<key>name</key>
					<string>meta.block.subprogram</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?i)(^|(?&lt;= |\t|;))(?=(procedure|function)\s)</string>
							<key>end</key>
							<string>(?i)(?=(^|(?&lt;= |\t|;|\)))(is|as)(?=\s))|(?&lt;=;)</string>
							<key>name</key>
							<string>meta.block.subprogram.heading</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<key>4</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>match</key>
									<string>(?i)\b(procedure|function)\s++(\w++)((\.)\w++)?\b</string>
									<key>name</key>
									<string>entity.name.function</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#comment</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#parameter-definition</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(?i)\b(a(ggregate|ccessible\s++by|uthid(\s++(current_user|definer)))|deterministic|p(arallel_enable|ipelined)|re(sult_cache(\s++relies_on)?|turn)|using)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#storage</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(^|(?&lt;= |\t|;|\)))(is|as)\b</string>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.control.oracle.plsql</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?i)(?=\b(begin|language|external)(\s|$))|^(?=/\s*$)</string>
							<key>name</key>
							<string>meta.block.declaration</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#block-declaration-oracle-plsql-include</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(external)\b</string>
							<key>name</key>
							<string>invalid.deprecated</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#block-executable</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)\s*+language\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>;</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.section.call_spec</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(agent|c|in|java|library|name|parameters|with\s++context)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#parameter-definition</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>support</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.indicator</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.function</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)\b((apex|dbms|ctx|o(rd|wa)|s(do|em)|utl|wpg)_\w++|ht(?:f|p))(\.)(\w++)</string>
					<key>name</key>
					<string>support.class</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.indicator</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.function</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)\b((?:wf|fnd)_\w++)(\.)(\w++)</string>
					<key>name</key>
					<string>support.class.apps</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(chartorowid|decode|floor|greatest|lpad|mod|nvl|s(ql(code|errm)|ubstr)|r(aise_application_error|eplace|o(und|widtochar)|trim|pad)|s(um|qrt)|t(o_(binary_(double|float)|char|date|number|timestamp)|runc)|upper)\b</string>
					<key>name</key>
					<string>support.function</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=\.)(count|delete|ex(ists|tend)|first|l(imit|ast)|next|prior|trim)\b</string>
					<key>name</key>
					<string>support.function.collection</string>
				</dict>
			</array>
		</dict>
		<key>trigger</key>
		<dict>
			<key>begin</key>
			<string>(?i)(^|(?&lt;= |\t|;))(?=(trigger)\s)</string>
			<key>end</key>
			<string>(?&lt;=;)|^(?=/\s*)</string>
			<key>name</key>
			<string>meta.block.subprogram</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(^|(?&lt;= |\t|;))(?=(trigger)\s)</string>
					<key>end</key>
					<string>(?i)(?=(^|(?&lt;= |\t|;|\)))(call|declare|begin|c(all|ompound))(?=\s))</string>
					<key>name</key>
					<string>meta.block.trigger.heading</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.oracle.plsql</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?i)\b(trigger)\s++(\w++)\b</string>
							<key>name</key>
							<string>entity.name.function</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#trigger-heading-include</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(^|(?&lt;= |\t|;|\)))(?=compound\s++trigger\b)</string>
					<key>end</key>
					<string>^(?=/\s*)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(^|(?&lt;= |\t|;|\)))(compound\s++trigger)\b</string>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.control.oracle.plsql</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?i)(?=\b(after|before|instead)\b)</string>
							<key>name</key>
							<string>meta.block.trigger.compound.declaration</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#block-declaration-oracle-plsql-include</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)\b(after\s++(each\s++row|statement)|before\s++(each\s++row|statement)|instead\s++of\s++each\s++row)\b</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?i)\b(end\s++\1)\s*+(;)</string>
							<key>endCaptures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.block.executable.trigger.compound</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(?i)(\bbegin\b)</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.control</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?i)(?=\bend)\b</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#block-executable-oracle-plsql-include</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>match</key>
									<string>(?i)\b(is)\b</string>
									<key>name</key>
									<string>keyword.control</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.conrol</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>variable.other</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?i)\b(end)(\s++\w++)?\s*+(;)</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-declaration</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#block-executable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>source.oracle.sql</string>
				</dict>
			</array>
		</dict>
		<key>trigger-heading-include</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(a(fter|lter|nalyze|s(sociate\s++statistics)?|udit)|before|c(lone|omment|r(eate|ossedition))|d(atabase|b_role_change|dl|elete|isa(ble|ssociate\s++statistics)|rop)|e(ach|nable)|fo(llows|r(ward)?)|grant|ins(ert|tead)|logo(ff|n)|n(e(sted|w)|oaudit)|o(f|ld|n|r)|p(arent|recedes|luggable)|r(e(ferencing|name|v(erse|oke))|ow)|s(chema|e(rvererror|t\s++container)|hutdown|tartup|uspend)|t(able|runcate)|u(plug|pdate)|when)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>type</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(^|(?&lt;= |\t|;))(?=(type)\s++(?!body\s))</string>
					<key>end</key>
					<string>(?&lt;=;)|(?=^/\s*)</string>
					<key>name</key>
					<string>meta.block.type</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?i)(^|(?&lt;= |\t|;))(?=(type)\s)</string>
							<key>end</key>
							<string>(?i)(?=(^|(?&lt;= |\t|;))(is|as|under)(?=\s))|(?&lt;=;)</string>
							<key>name</key>
							<string>meta.block.type.heading</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
									</dict>
									<key>match</key>
									<string>(?i)\b(type)(\s++)(?!body\s)(&amp;?(\w|&amp;|\.)++)\b</string>
									<key>name</key>
									<string>entity.name.function</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>plsql-type-source</string>
									<key>match</key>
									<string>(?i)\b(force|oid)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#invoker-rights-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#accessible-by-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(^|(?&lt;= |\t|;))((is|as)(\b)|(?=under\b))</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.control</string>
								</dict>
							</dict>
							<key>end</key>
							<string>;|(?=^/\s*)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.block.declaration</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(?i)\b(object|under)\b</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?=;)|(?=^/\s*)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>(?i)\b(authid\s++(current_user|definer)|external\s++name|final|instatiable|language\s++java|overriding|using)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>match</key>
											<string>(?i)\b(customdata|oradata|sqldata)\b</string>
											<key>name</key>
											<string>constant.language</string>
										</dict>
										<dict>
											<key>begin</key>
											<string>\(</string>
											<key>captures</key>
											<dict>
												<key>0</key>
												<dict>
													<key>name</key>
													<string>keyword.other.delimiter</string>
												</dict>
											</dict>
											<key>end</key>
											<string>\)</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>begin</key>
													<string>(?i)\b(constructor|member|static)\b</string>
													<key>beginCaptures</key>
													<dict>
														<key>1</key>
														<dict>
															<key>name</key>
															<string>keyword.other</string>
														</dict>
													</dict>
													<key>end</key>
													<string>(?=,|\))</string>
													<key>patterns</key>
													<array>
														<dict>
															<key>include</key>
															<string>#parameter-definition</string>
														</dict>
														<dict>
															<key>match</key>
															<string>(?i)\b(a(gent|s)|c(ontext)?|external|function|in|java|l(anguage|ibrary)|name|p(arameters|rocedure)|return|variable|with)\b</string>
															<key>name</key>
															<string>keyword.other</string>
														</dict>
														<dict>
															<key>comment</key>
															<string>constructor-spec</string>
															<key>match</key>
															<string>(?i)\b(as|is|re(sult|turn)|self)\b</string>
															<key>name</key>
															<string>keyword.other</string>
														</dict>
														<dict>
															<key>include</key>
															<string>#storage</string>
														</dict>
														<dict>
															<key>include</key>
															<string>#expression</string>
														</dict>
													</array>
												</dict>
												<dict>
													<key>match</key>
													<string>(?i)\b(external|name|ref)\b</string>
													<key>name</key>
													<string>keyword.other</string>
												</dict>
												<dict>
													<key>comment</key>
													<string>inheritance-clauses</string>
													<key>match</key>
													<string>(?i)\b(final|instatiable|not|overriding)\b</string>
													<key>name</key>
													<string>keyword.other</string>
												</dict>
												<dict>
													<key>comment</key>
													<string>constructor-spec</string>
													<key>match</key>
													<string>(?i)\b(final|instantiable)\b</string>
													<key>name</key>
													<string>keyword.other</string>
												</dict>
												<dict>
													<key>comment</key>
													<string>map-order-function-spec</string>
													<key>match</key>
													<string>(?i)\b(map|order)\b</string>
													<key>name</key>
													<string>keyword.other</string>
												</dict>
												<dict>
													<key>comment</key>
													<string>restrict-references-pragma</string>
													<key>match</key>
													<string>(?i)\b(pragma)\b</string>
													<key>name</key>
													<string>keyword.other</string>
												</dict>
												<dict>
													<key>begin</key>
													<string>(?i)\b(restrict_references)\b</string>
													<key>beginCaptures</key>
													<dict>
														<key>1</key>
														<dict>
															<key>name</key>
															<string>keyword.other</string>
														</dict>
													</dict>
													<key>end</key>
													<string>(?&lt;=\))</string>
													<key>patterns</key>
													<array>
														<dict>
															<key>begin</key>
															<string>(\()</string>
															<key>captures</key>
															<dict>
																<key>1</key>
																<dict>
																	<key>name</key>
																	<string>keyword.other.delimiter</string>
																</dict>
															</dict>
															<key>end</key>
															<string>(\))</string>
															<key>patterns</key>
															<array>
																<dict>
																	<key>comment</key>
																	<string>restrict-references-pragma</string>
																	<key>match</key>
																	<string>(?i)\b(default|rn(d|p)s|trust|wn(d|p)s)\b</string>
																	<key>name</key>
																	<string>keyword.other</string>
																</dict>
																<dict>
																	<key>match</key>
																	<string>,</string>
																	<key>name</key>
																	<string>keyword.other.delimiter</string>
																</dict>
																<dict>
																	<key>include</key>
																	<string>#identifier</string>
																</dict>
															</array>
														</dict>
													</array>
												</dict>
												<dict>
													<key>include</key>
													<string>#storage</string>
												</dict>
												<dict>
													<key>include</key>
													<string>#expression</string>
												</dict>
											</array>
										</dict>
										<dict>
											<key>begin</key>
											<string>(?i)\b(constructor|member|static)\b</string>
											<key>beginCaptures</key>
											<dict>
												<key>1</key>
												<dict>
													<key>name</key>
													<string>keyword.other</string>
												</dict>
											</dict>
											<key>end</key>
											<string>(?&lt;=;)</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#subprogram</string>
												</dict>
											</array>
										</dict>
										<dict>
											<key>comment</key>
											<string>constructor-declaration</string>
											<key>match</key>
											<string>(?i)\b(final|instantiable)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>map-order-func-declaration</string>
											<key>match</key>
											<string>(?i)\b(map|order)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>match</key>
											<string>(?i)\b(end)\b(?=\s*+;)</string>
											<key>name</key>
											<string>keyword.control</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#expression</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>comment</key>
									<string>nested-table-type-def</string>
									<key>match</key>
									<string>(?i)\b(n(ot|ull)|of|table)\b</string>
									<key>name</key>
									<string>keyword.control</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>varray-type-def</string>
									<key>match</key>
									<string>(?i)\b(array|of|n(not|ull)|varray|varying)\b</string>
									<key>name</key>
									<string>keyword.control</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>type-body</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(^|(?&lt;= |\t|;))(?=(type\s++body\s))</string>
					<key>end</key>
					<string>(?i)\b(end)\s*(;)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.block.type</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?i)(^|(?&lt;= |\t|;))(?=(type)\s)</string>
							<key>end</key>
							<string>(?i)(?=(^|(?&lt;= |\t|;))(is|as|under)(?=\s))|(?&lt;=;)</string>
							<key>name</key>
							<string>meta.block.type.heading</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
									</dict>
									<key>match</key>
									<string>(?i)\b(type\s++body\s++)(&amp;?(\w|&amp;|\.)++)\b</string>
									<key>name</key>
									<string>entity.name.function</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>plsql-type-source</string>
									<key>match</key>
									<string>(?i)\b(force|oid)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#invoker-rights-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#accessible-by-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)(^|(?&lt;= |\t|;))((is|as)(\b)|(?=under\b))</string>
							<key>beginCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.control</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?i)(?=\bend\s*;)</string>
							<key>endCaptures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>name</key>
							<string>meta.block.declaration</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(?i)\b(constructor|member|static)\b</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?&lt;=;)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#subprogram</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>comment</key>
									<string>constructor-declaration</string>
									<key>match</key>
									<string>(?i)\b(final|instantiable)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>map-order-func-declaration</string>
									<key>match</key>
									<string>(?i)\b(map|order)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(^|\s)(?=(\S)+\s*:=)</string>
					<key>end</key>
					<string>(?=:=)</string>
					<key>name</key>
					<string>variable.other.oracle.plsql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#keyword-delimiter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable-other-bind-oracle-sqlplus</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#identifier</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(\$\$)\w++</string>
					<key>name</key>
					<string>variable.other.directive</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=(f|F)(o|O)(r|R))\s++(?!select\b)(\w++)</string>
					<key>name</key>
					<string>variable.other.oracle.plsql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(sql)(?=%)</string>
					<key>name</key>
					<string>variable.other</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;=%)(bulk_(exceptions|rowcount)|found|isopen|notfound|rowcount)\b</string>
					<key>name</key>
					<string>variable.other</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(sys_invalid_rowid)\b</string>
					<key>name</key>
					<string>support.variable</string>
				</dict>
			</array>
		</dict>
		<key>variable-declaration-oracle-plsql</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#storage</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#support</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literal</string>
				</dict>
			</array>
		</dict>
		<key>variable-other-bind-oracle-sqlplus</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.oracle.sqlplus</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;=\s|^)(:)([[:alnum:]_])([[:alnum:]_])*+</string>
			<key>name</key>
			<string>variable.other.bind.oracle.sqlplus</string>
		</dict>
		<key>variable-other-substitution-oracle-sqlplus</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.oracle.sqlplus</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.oracle.sqlplus</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;!&amp;)(&amp;{1,2})\s*+(?:[[:alnum:]_])++(\.)?</string>
			<key>name</key>
			<string>variable.other.substitution.oracle.sqlplus</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.oracle.plsql</string>
	<key>uuid</key>
	<string>a4bd593a-8202-4207-8c94-a2ef526b96bc</string>
</dict>
</plist>
