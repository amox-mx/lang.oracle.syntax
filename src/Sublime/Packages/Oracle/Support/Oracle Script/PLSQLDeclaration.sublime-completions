{
        "scope": "source.oracle.script meta.block.plsql meta.section.declare, source.oracle.script meta.block.plsql meta.block.declaration",
        "completions":
        [
                { "trigger": "bfile", "contents": "bfile" },
                { "trigger": "binary_double", "contents": "binary_double" },                
                { "trigger": "binary_float", "contents": "binary_float" },                
                { "trigger": "binary_integer", "contents": "binary_integer" },
                { "trigger": "blob", "contents": "blob" },
                { "trigger": "boolean", "contents": "boolean" },
                { "trigger": "char", "contents": "char" },
                { "trigger": "char\tvarying", "contents": "char varying" },
                { "trigger": "character", "contents": "character" },
                { "trigger": "character\tvarying", "contents": "character varying" },
                { "trigger": "clob", "contents": "clob" },
                { "trigger": "constant", "contents": "constant" },
                { "trigger": "cursor\tdeclaration", "contents": "cursor ${1:cursor_name} return ${2:return_type} ;" }, 
                { "trigger": "cursor\tdeclaration + params", "contents": "cursor ${1:cursor_name} (\n\t${2:param_name} ${3:param_type} )\n\treturn ${4:return_type} ;" }, 
                { "trigger": "cursor\tdefinition", "contents": "cursor ${1:cursor_name} is\n\tselect ${2:column}\n\t  from ${3:table_name}\n\t where 1 = 2 ; " },                                                               
                { "trigger": "cursor\tdefinition + params", "contents": "cursor ${1:cursor_name} (\n\t${2:param_name} ${3:param_type} ) is\n\tselect ${4:column}\n\t  from ${5:table_name}\n\t where 1 = 2\n\t    and ${6:column_name} = ${2} ; " },                                                               
                { "trigger": "date", "contents": "date" },
                { "trigger": "dec", "contents": "dec" },
                { "trigger": "decimal", "contents": "decimal" },
                { "trigger": "default", "contents": "default" },
                { "trigger": "deterministic", "contents": "deterministic" },
                { "trigger": "double_precision", "contents": "double_precision" },
                { "trigger": "float", "contents": "float" },
                { "trigger": "function", "contents": "function" },
                { "trigger": "function\tdeclaration", "contents": "function ${1:function_name} (\n\t${2:param1} ${3:param1_type} )\nreturn ${4:return_type} ;" },
                { "trigger": "function\tdefinition", "contents": "function ${1:function_name} (\n\t${2:param1} ${3:param1_type} )\nreturn ${4:return_type}\nis\n\tl_retval ${4/(char|varchar(2)?)/(?1:\\1\\( 1 \\))/gi};\nbegin\n\treturn l_retval ;\nend ${1} ;" },
                { "trigger": "int", "contents": "int" },
                { "trigger": "integer", "contents": "integer" },
                { "trigger": "interval\tyear", "contents": "interval year to month" },
                { "trigger": "interval\tday", "contents": "interval day to second" },
                { "trigger": "long", "contents": "long" },
                { "trigger": "long raw", "contents": "long raw" },
                { "trigger": "national char", "contents": "national char" },
                { "trigger": "national char\tvarying", "contents": "national char varying" },
                { "trigger": "national character", "contents": "national character" },
                { "trigger": "national character\tvarying", "contents": "national character varying" },
                { "trigger": "natural", "contents": "natural" },
                { "trigger": "naturaln", "contents": "naturaln" },
                { "trigger": "nchar", "contents": "nchar" },
                { "trigger": "nchar\tvarying", "contents": "nchar varying" },
                { "trigger": "nclob", "contents": "nclob" },
                { "trigger": "nvarchar2", "contents": "nvarchar2" },
                { "trigger": "not null", "contents": "not null" },
                { "trigger": "null", "contents": "null" },
                { "trigger": "number", "contents": "number" },
                { "trigger": "numeric", "contents": "numeric" },
                { "trigger": "ORDAudio", "contents": "ORDAudio" },
                { "trigger": "ORDImage", "contents": "ORDImage" },
                { "trigger": "ORDVideo", "contents": "ORDVideo" },
                { "trigger": "ORDDoc", "contents": "ORDDoc" },
                { "trigger": "ORDDicom", "contents": "ORDDicom" },
                { "trigger": "pls_integer", "contents": "pls_integer" },
                { "trigger": "parralel_enable", "contents": "parralel_enable" },
                { "trigger": "pipelined", "contents": "pipelined" },
                { "trigger": "positive", "contents": "positive" },
                { "trigger": "positiven", "contents": "positiven" },
                { "trigger": "procedure", "contents": "procedure" },
                { "trigger": "procedure\tdeclaration", "contents": "procedure ${1:procedure_name} (\n\t${2:param1} ${3:param1_type} ) ;" },
                { "trigger": "procedure\tdefinition", "contents": "procedure ${1:procedure_name} (\n\t${2:param1} ${3:param1_type} )\nis\nbegin\n\tnull ;\nend ${1} ;" },
                { "trigger": "procedure\texternal java", "contents": "procedure ${1:procedure_name} (\n\t${2:param1} ${3:param1_type} )\nas java language name '${4:class_name}.${5:method_name}( ${6:param_type} )' ;" },
                { "trigger": "pragma\tautonomous_transaction", "contents": "pragma autonomous_transaction ;" },
                { "trigger": "raw", "contents": "raw" },
                { "trigger": "range", "contents": "range ${1:low}..${2:high}" },
                { "trigger": "real", "contents": "real" },
                { "trigger": "result_cache", "contents": "result_cache" },
                { "trigger": "rowid", "contents": "rowid" },
                { "trigger": "rowtype", "contents": "rowtype" },
                { "trigger": "SDO_Geometry", "contents": "SDO_Geometry" },
                { "trigger": "SDO_Topo_Geometry", "contents": "SDO_Topo_Geometry" },
                { "trigger": "SDO_GeoRaster", "contents": "SDO_GeoRaster" },
                { "trigger": "SI_StillImage", "contents": "SI_StillImage" },
                { "trigger": "SI_AverageColor", "contents": "SI_AverageColor" },
                { "trigger": "SI_PositionalColor", "contents": "SI_PositionalColor" },
                { "trigger": "SI_ColorHistogram", "contents": "SI_ColorHistogram" },
                { "trigger": "SI_Texture", "contents": "SI_Texture" },
                { "trigger": "SI_FeatureList", "contents": "SI_FeatureList" },
                { "trigger": "SI_Color", "contents": "SI_Color" },
                { "trigger": "signtype", "contents": "signtype" },
                { "trigger": "simple_double", "contents": "simple_double" },
                { "trigger": "simple_float", "contents": "simple_float" },                
                { "trigger": "simple_integer", "contents": "simple_integer" },                
                { "trigger": "smallint", "contents": "smallint" },
                { "trigger": "subtype", "contents": "subtype" },
                { "trigger": "sys\tAnyData", "contents": "sys.AnyData" },
                { "trigger": "sys\tAnyType", "contents": "sys.AnyType" },
                { "trigger": "sys\tAnyDataSet", "contents": "sys.AnyDataSet" },
                { "trigger": "timestamp", "contents": "timestamp" },
                { "trigger": "timestamp\twith tz", "contents": "timestamp with time zone" },
                { "trigger": "timestamp\twith local tz", "contents": "timestamp with local time zone" },
                { "trigger": "type", "contents": "type" },
                { "trigger": "type\tassoc. array", "contents": "type ${1:type_name} is table of ${2:array_type}\n\tindex by ${3:index_type} ;" },
                { "trigger": "type\tnested table", "contents": "type ${1:type_name} is table of ${2:array_type} ;" },
                { "trigger": "type\trecord", "contents": "type ${1:type_name} is record(\n\t${2:element}\t${3:element_type}) ;" },
                { "trigger": "type\tref cursor", "contents": "type ${1:type_name} is ref cursor ;" },
                { "trigger": "type\tref cursor +return", "contents": "type ${1:type_name} is ref cursor return ${2:return_type} ;" },
                { "trigger": "type\tvarray", "contents": "type ${1:type_name} is varray( ${2:varray_size} ) of ${3:varray_type} ;" },
                { "trigger": "URIType", "contents": "URIType" },
                { "trigger": "urowid", "contents": "urowid" },
                { "trigger": "varchar", "contents": "varchar" },
                { "trigger": "varchar2", "contents": "varchar2" },
                { "trigger": "XMLType", "contents": "XMLType" }                
        ]
}        