{
        "scope": "source.oracle - meta.block.oracle.plsql - meta.command.sqlplus - meta.statement.oracle.sql, meta.command.sqlplus.append, meta.command.sqlplus.change, meta.command.sqlplus.input, meta.command.sqlplus.list, meta.command.sqlplus.run",
        "completions":
        [
                { "trigger": "accept\tnumber variable", "contents": "accept ${1:variable_name} number${2: format '${3:format_mask}'}${4: default ${5:default_value}}${6: prompt '${7:Enter ${1/^([[:alnum:]]++)|(_([[:alnum:]]++))/\\u\\1(?2: \\u\\3)/g}${3/(.+)/ [\\1]/}: }'}${8: ${9:hide}}\n$0"},
                { "trigger": "accept\tchar variable", "contents": "accept ${1:variable_name} char${2: format '${3:A${4:20}}'}${5: default ${6:default_value}}${7: prompt '${8:Enter ${1/^([[:alnum:]]++)|(_([[:alnum:]]++))/\\u\\1(?2: \\u\\3)/g}${4/(\\d+)/ [ max \\1 ]/}: }'}${9: ${10:hide}}\n$0"},
                { "trigger": "accept\tdate variable", "contents": "accept ${1:variable_name} date${2: format '${3:MM/DD/YYYY}'}${4: default ${5:default_value}}${6: prompt '${7:Enter ${1/^([[:alnum:]]++)|(_([[:alnum:]]++))/\\u\\1(?2: \\u\\3)/g}${3/(.+)/ [\\1]/}: }'}${8: ${9:hide}}\n$0"},
                { "trigger": "accept\tbinary_float variable", "contents": "accept ${1:variable_name} binary_float${2: default ${3:default_value}}${4: prompt '${5:Enter ${1/^([[:alnum:]]++)|(_([[:alnum:]]++))/\\u\\1(?2: \\u\\3)/g} ([-]9.999E{+|-\\}999): }'}${6: ${7:hide}}\n$0"},
                { "trigger": "accept\tbinary_double variable", "contents": "accept ${1:variable_name} binary_double${2: default ${3:default_value}}${4: prompt '${5:Enter ${1/^([[:alnum:]]++)|(_([[:alnum:]]++))/\\u\\1(?2: \\u\\3)/g} ([-]9.999E{+|-\\}999): }'}${6: ${7:hide}}\n$0"},
                { "trigger": "append\ttext", "contents": "append ${1:text to append}\n$0" },
                { "trigger": "append\t;", "contents": "append ;;\n$0" },
                { "trigger": "archive\tlog list", "contents": "archive log list\n" },
                { "trigger": "attribute\tlist all", "contents": "attribute\n" },
                { "trigger": "attribute\tdefine", "contents": "attribute ${1:type_name}.${2:attribute_name}${3: alias ${4:alias_name}}${5: format ${6:format_mask}}\n$0" },
                { "trigger": "attribute\tclear", "contents": "attribute ${1:type_name}.${2:attribute_name} clear\n$0" },
                { "trigger": "attribute\tlike", "contents": "attribute ${1:type_name}.${2:attribute_name} ${3:like ${4:{type_name.attribute_name|alias\\}}}\n$0" },
                { "trigger": "attribute\toff", "contents": "attribute ${1:type_name}.${2:attribute_name} off\n$0" },
                { "trigger": "attribute\ton", "contents": "attribute ${1:type_name}.${2:attribute_name} on\n$0" },
                { "trigger": "break\tlist current", "contents": "break\n$0" },
                { "trigger": "break\ton single element", "contents": "break on ${1:{column|expr|row\\}}${2: skip ${3:[n|page]}}${4: duplicates}\n$0" },
                { "trigger": "break\ton multiple elements", "contents": "break on ${1:{column|expr|row\\}}${2: skip ${3:[n|page]}}${4: duplicates} on ${5:{column|expr|row\\}}${6: skip ${7:[n|page]}}${8: duplicates}${9: on ${11:{column|expr|row\\}}${12: skip ${13:[n|page]}}${14: duplicates}}\n$0" },
                { "trigger": "break\ton report", "contents": "break on report\n$0" },
                { "trigger": "btitle\tlist definition", "contents": "btitle\n$0" },
                { "trigger": "btitle\tset simple", "contents": "btitle${1: skip${2: ${3:[n]}}}${4: bold} '${5:text}'${6: skip${7: ${8:[n]}}}\n$0" },
                { "trigger": "btitle\tset aligned", "contents": "btitle${1: skip${2: ${3:[n]}}}${4: left '${5:text}'}${6: center '${7:text}'}${8: right '${9:text}'}${10: skip${11: ${12:[n]}}}\n$0" },
                { "trigger": "btitle\tset algined/multi-line", "contents": "btitle${1: skip${2: ${3:[n]}}}${4: left '${5:text}'}${6: center '${7:text}'}${8: right '${9:text}'} skip${10: ${11:[n]}}${12: left '${13:text}'}${14: center '${15:text}'}${16: right '${17:text}'}${18: skip${19: ${20:[n]}}}\n$0" },
                { "trigger": "btitle\tset column aligned", "contents": "btitle${1: skip${2: ${3:[n]}}}${4: bold}${5: col ${6:n}} '${7:text}'${8: ${9:tab ${10:n}} '${11:text}'}${12: skip${13: ${14:[n]}}}\n$0" },
                { "trigger": "btitle\tturn off", "contents": "btitle off\n" },
                { "trigger": "btitle\tturn on", "contents": "btitle on\n" },
                { "trigger": "change\tuse / as delimiter", "contents": "change /${1:old}/${2:new}/\n$0" },
                { "trigger": "change\tuse custom delimiter", "contents": "change ${1:/}${2:old}${1}${3:new}${1}\n$0" },
                { "trigger": "clear\tbreaks", "contents": "clear breaks\n" },
                { "trigger": "clear\tbuffer", "contents": "clear buffer\n" },
                { "trigger": "clear\tcolumns", "contents": "clear columns\n" },
                { "trigger": "clear\tcomputes", "contents": "clear computes\n" },
                { "trigger": "clear\tscreen", "contents": "clear screen\n" },
                { "trigger": "clear\tsql", "contents": "clear sql\n" },
                { "trigger": "clear\ttiming", "contents": "clear timing\n" },
                { "trigger": "column\tlist all col attribs", "contents": "column\n" },
                { "trigger": "column\tlist single col attribs", "contents": "column ${1:{column|expression\\}}\n$0" },
                { "trigger": "column\tclear attributes", "contents": "column ${1:{column|expression\\}} clear\n$0" },
                { "trigger": "column\tdisable attributes", "contents": "column ${1:{column|expression\\}} off\n$0" },
                { "trigger": "column\tenable attributes", "contents": "column ${1:{column|expression\\}} on\n$0" },
                { "trigger": "column\tset simple attribs", "contents": "column ${1:{column|expression\\}}${2: format ${3:format_mask}}${4: heading '${1/([[:alnum:]]++)(_([[:alnum:]]++))?(_([[:alnum:]]++))?/\\u\\1(?2: \\u\\3)(?4: \\u\\5)/}'}\n$0" },
                { "trigger": "column\tset all attributes", "contents": "column ${1:{column|expression\\}}${2: alias ${3:column_alias}}${4: entmap ${5:{on|off\\}}}${6: fold_after}${7: fold_before}${8: format ${9:format_mask}}${10: heading '${1/([[:alnum:]]++)(_([[:alnum:]]++))?(_([[:alnum:]]++))?/\\u\\1(?2: \\u\\3)(?4: \\u\\5)/}'}${12: justify ${13:{left|center|right\\}}}${14: newline}${15: new_value ${16:variable}}${17: ${18:{noprint|print\\}}}${19: null '${20:text}'}${21: old_value ${22:variable}}${23: ${24:{wrapped|word_wrapped|truncated\\}}}\n$0" },
                { "trigger": "column\tset new_value", "contents": "column ${1:{column|expression\\}} new_value ${2:variable_name}${5: noprint}\n$0" },
                { "trigger": "column\tset noprint", "contents": "column ${1:{column|expression\\}} noprint\n$0" },
                { "trigger": "column\tset alias", "contents": "column ${1:{column|expression\\}}${2: alias ${3:column_alias}}\n$0" },
                { "trigger": "column\tcopy attributes", "contents": "column ${1:{column|expression\\}} like ${2:{expression|alias\\}}\n$0" },
                { "trigger": "column\tmerge attributes", "contents": "column ${1:{column|expression\\}} like ${2:{expression|alias\\}}${3: alias ${4:column_alias}}${5: entmap ${6:{on|off\\}}}${7: fold_after}${8: fold_before}${9: format ${10:format_mask}}${11: heading '${1/([[:alnum:]]++)(_([[:alnum:]]++))?(_([[:alnum:]]++))?/\\u\\1(?2: \\u\\3)(?4: \\u\\5)/}'}${13: justify ${14:{left|center|right\\}}}${15: newline}${16: new_value ${17:variable}}${18: ${19:{noprint|print\\}}}${20: null '${21:text}'}${22: old_value ${23:variable}}${24: ${25:{wrapped|word_wrapped|truncated\\}}}\n$0" },
                { "trigger": "compute\tlist current", "contents": "compute\n" },
                { "trigger": "compute\taverage", "contents": "compute avg${1: label '${2:Average}'} of ${3:{expr|column|alias\\}} on ${4:{expr|column|alias|report|row\\}}\n$0" },
                { "trigger": "compute\tcount", "contents": "compute count${1: label '${2:Not Null}'} of ${3:{expr|column|alias\\}} on ${4:{expr|column|alias|report|row\\}}\n$0" },
                { "trigger": "compute\tminimum", "contents": "compute minimum${1: label '${2:Minimum}'} of ${3:{expr|column|alias\\}} on ${4:{expr|column|alias|report|row\\}}\n$0" },
                { "trigger": "compute\tmaximum", "contents": "compute maximum${1: label '${2:Maximum}'} of ${3:{expr|column|alias\\}} on ${4:{expr|column|alias|report|row\\}}\n$0" },
                { "trigger": "compute\tnumber", "contents": "compute number${1: label '${2:Rows}'} of ${3:{expr|column|alias\\}} on ${4:{expr|column|alias|report|row\\}}\n$0" },
                { "trigger": "compute\tsum", "contents": "compute sum${1: label '${2:Total}'} of ${3:{expr|column|alias\\}} on ${4:{expr|column|alias|report|row\\}}\n$0" },
                { "trigger": "compute\tstd deviation", "contents": "compute std${1: label '${2:Std Dev}'} of ${3:{expr|column|alias\\}} on ${4:{expr|column|alias|report|row\\}}\n$0" },
                { "trigger": "compute\tvariance", "contents": "compute variance${1: label '${2:Variance}'} of ${3:{expr|column|alias\\}} on ${4:{expr|column|alias|report|row\\}}\n$0" },
                { "trigger": "compute\tmultiple functions", "contents": "compute ${1:{avg|count|minimum|maximum|number|sum|std|variance\\}}${2: label '${3:text}'} ${4:{avg|count|minimum|maximum|number|sum|std|variance\\}}${5: label '${6:text}'}${7: ${8:{avg|count|minimum|maximum|number|sum|std|variance\\}${9: label '${10:text}'}}} of ${11:{expr|column|alias\\}} on ${12:{expr|column|alias|report|row\\}}\n$0" },
                { "trigger": "connect\tconnect", "contents": "connect\n" },
                { "trigger": "connect\tusr[/pwd][@alias]", "contents": "connect ${1:user}${2:/${3:password}}${4:@${5:alias}}${6: edition=${7:value}}\n$0" },
                { "trigger": "connect\tproxy[user][/pwd][@alias]", "contents": "connect ${1:proxy}[${2:user}]${3:/${4:password}}${5:@${6:alias}}${7: edition=${8:value}}\n$0" },
                { "trigger": "connect\tas sysasm", "contents": "connect / as sysasm${1: edition=${2:value}}\n$0" },
                { "trigger": "connect\tas sysbackup", "contents": "connect / as sysbackup${1: edition=${2:value}}\n$0" },
                { "trigger": "connect\tas sysdba", "contents": "connect / as sysdba${1: edition=${2:value}}\n$0" },
                { "trigger": "connect\tas sysdg", "contents": "connect / as sysdg${1: edition=${2:value}}\n$0" },
                { "trigger": "connect\tas sysoper", "contents": "connect / as sysoper${1: edition=${2:value}}\n$0" },
                { "trigger": "connect\tas syskm", "contents": "connect / as syskm${1: edition=${2:value}}\n$0" },
                { "trigger": "connect\tfull syntax", "contents": "connect ${1:user}${$2:/${3:password}}${4:@${5:alias}}${6: as ${7:[sysasm|sysbackup|sysdba|sysdg|sysoper|syskm]}}${8: edition=${9:value}}\n$0" },
                { "trigger": "copy\tfrom/to db", "contents": "copy ${1:{from|to\\}} ${2:user}${3:/${4:password}}@${5:alias} -\n${6:{append|insert|create|replace\\}} ${7:destination_table}${8: ( ${9:column, column, ...} )} -\nusing select ${10:column, column, ...} -\nfrom ${11:table}${12: -\nwhere ${13:1 = 2}}\n\n$0" },
                { "trigger": "copy\tfrom db to db", "contents": "copy from ${2:user}${3:/${4:password}}@${5:alias} to ${6:user}${7:/${8:password}}@${9:alias} -\n${10:{append|insert|create|replace\\}} ${11:destination_table}${12: ( ${13:column, column, ...} )} -\nusing select ${14:column, column, ...} -\nfrom ${15:table}${16: -\nwhere ${17:1 = 2}}\n$0" },
                { "trigger": "define\tlist var defnitions", "contents": "define\n" },
                { "trigger": "define\tlist var defnition", "contents": "define ${1:variable_name}\n$0" },
                { "trigger": "define\tvariable", "contents": "define ${1:variable_name} = '${2:variable_value}'\n$0" },
                { "trigger": "define\t_editor", "contents": "define _EDITOR = '${2:editor_executable_path}'" },
                { "trigger": "del\tcurrent line", "contents": "del\n" },
                { "trigger": "del\tline n", "contents": "del ${1:n}\n$0" },
                { "trigger": "del\tline n to m", "contents": "del ${1:n} ${2:m}\n$0" },
                { "trigger": "del\tline n to last", "contents": "del ${1:n} last\n$0" },
                { "trigger": "del\tline n to current", "contents": "del ${1:n} *\n$0" },
                { "trigger": "del\tcurrent line to n", "contents": "del * ${2:n}\n$0" },
                { "trigger": "del\tcurrent to last line", "contents": "del * last\n$0" },
                { "trigger": "del\tlast line", "contents": "del last\n" },
                { "trigger": "describe\tobject", "contents": "describe ${1:object}\n$0" },
                { "trigger": "describe\tobject@db_link", "contents": "describe ${1:object}@${2:db_link}\n$0" },
                { "trigger": "describe\tschema.object", "contents": "describe ${1:schema}.${2:object}\n$0" },
                { "trigger": "describe\tschema.object@db_link", "contents": "describe ${1:schema}.${2:object}@${5:db_link}\n$0" },
                { "trigger": "disconnect\tdisconnect", "contents": "disconnect\n" },
                { "trigger": "edit\tfile", "contents": "edit ${1:filename}${2:.${3:ext}}\n$0" },
                { "trigger": "execute\texecute", "contents": "execute ${1:plsql_statement}\n$0" },
                { "trigger": "exit\tsuccess", "contents": "exit success${1: ${2:[commit|rollback]}}\n$0" },
                { "trigger": "exit\tfailure", "contents": "exit failure${1: ${1:[commit|rollback]}}\n$0" },
                { "trigger": "exit\twarning", "contents": "exit warning${1: ${1:[commit|rollback]}}\n$0" },
                { "trigger": "exit\twith return code", "contents": "exit ${1:{n|variable|:BindVariable\\}}${2: ${3:[commit|rollback]}}\n$0" },
                { "trigger": "get\tfile", "contents": "get ${1:filename}${2:.${3:ext}}${4: ${5:[list|nolist]}}\n$0" },
                { "trigger": "help\tusing help", "contents": "help\n" },
                { "trigger": "help\tlist topics", "contents": "help index\n" },
                { "trigger": "help\tshow topic", "contents": "help ${1:topic}\n$0" },
                { "trigger": "host\texit to host", "contents": "host\n" },
                { "trigger": "host\texecute command", "contents": "host ${1:command}\n$0" },
                { "trigger": "input\tsingle line", "contents": "input ${1:text}\n$0" },
                { "trigger": "input\tmultiple lines", "contents": "input\n" },
                { "trigger": "list\tcurrent line", "contents": "list\n" },
                { "trigger": "list\tline n", "contents": "list ${1:n}\n$0" },
                { "trigger": "list\tline n to m", "contents": "list ${1:n} ${2:m}\n$0" },
                { "trigger": "list\tline n to last", "contents": "list ${1:n} last\n$0" },
                { "trigger": "list\tline n to current", "contents": "list ${1:n} *\n$0" },
                { "trigger": "list\tcurrent line to n", "contents": "list * ${1:n}\n$0" },
                { "trigger": "list\tcurrent line to last", "contents": "list * last\n" },
                { "trigger": "list\tlast line", "contents": "list last\n" },
                { "trigger": "password\tcurrent user", "contents": "password\n" },
                { "trigger": "password\tother user", "contents": "password ${1:username}\n$0" },
                { "trigger": "pause\tpause", "contents": "pause ${1:text}\n$0" },
                { "trigger": "print\tall variables", "contents": "print\n" },
                { "trigger": "print\tsingle variable", "contents": "print ${1:variable}\n$0" },
                { "trigger": "prompt\tprompt", "contents": "prompt ${1:text}\n$0" },
                { "trigger": "quit\tsuccess", "contents": "quit success${1: ${2:[commit|rollback]}}\n$0" },
                { "trigger": "quit\tfailure", "contents": "quit failure${1: ${1:[commit|rollback]}}\n$0" },
                { "trigger": "quit\twarning", "contents": "quit warning${1: ${1:[commit|rollback]}}\n$0" },
                { "trigger": "quit\twith return code", "contents": "quit ${1:{n|variable|:BindVariable\\}}${2: ${3:[commit|rollback]}}\n$0" },
                { "trigger": "recover\tdatabase", "contents": "recover database\n" },
                { "trigger": "recover\tdatabase until time", "contents": "recover database until time ${1:01-JAN-2001:04:32:00}\n$0" },
                { "trigger": "recover\ttablespace", "contents": "recover tablespace ${1:ts_one}${2:, ${3:ts_two}}${4:, ${5:ts_three}}\n$0" },
                { "trigger": "recover\tdatafile", "contents": "recover datafile '${1:data1.db}'\n" },
                { "trigger": "recover\tbegin backup", "contents": "recover begin backup\n" },
                { "trigger": "recover\tend backup", "contents": "recover end backup\n" },
                { "trigger": "remark\tremark", "contents": "remark ${1:text}\n$0" },
                { "trigger": "repfooter\tshow current", "contents": "repfooter\n$0" },
                { "trigger": "repfooter\tset simple", "contents": "repfooter${1: page}${2: bold} '${3:text}'\n$0" },
                { "trigger": "repfooter\tset aligned", "contents": "repfooter${1: page}${2: left '${3:text}'}${4: center '${5:text}'}${6: right '${7:text}'}\n$0" },
                { "trigger": "repfooter\tset aligned, multi-line", "contents": "repfooter${1: page}${2: left '${3:text}'}${4: center '${5:text}'}${6: right '${7:text}'} skip${8: ${9:[n]}}${10: left '${11:text}'}${12: center '${13:text}'}${14: right '${15:text}'}\n$0" },
                { "trigger": "repfooter\tset column aligned", "contents": "repfooter${1: page}${2: bold}${3: col ${4:n}} '${5:text}'\n$0" },
                { "trigger": "repfooter\tturn off", "contents": "repfooter off\n" },
                { "trigger": "repfooter\tturn on", "contents": "repfooter on\n" },
                { "trigger": "repheader\tshow current", "contents": "repheader\n$0" },
                { "trigger": "repheader\tset simple", "contents": "repheader${1: page}${2: bold} '${3:text}'\n$0" },
                { "trigger": "repheader\tset aligned", "contents": "repheader${1: page}${2: left '${3:text}'}${4: center '${5:text}'}${6: right '${7:text}'}\n$0" },
                { "trigger": "repheader\tset aligned, multi-line", "contents": "repheader${1: page}${2: left '${3:text}'}${4: center '${5:text}'}${6: right '${7:text}'} skip${8: ${9:[n]}}${10: left '${11:text}'}${12: center '${13:text}'}${14: right '${15:text}'}\n$0" },
                { "trigger": "repheader\tset column aligned", "contents": "repheader${1: page}${2: bold}${3: col ${4:n}} '${5:text}'\n$0" },
                { "trigger": "repheader\tturn off", "contents": "repheader off\n" },
                { "trigger": "repheader\tturn on", "contents": "repheader on\n" },
                { "trigger": "run\texecute buffer contents", "contents": "run\n" },
                { "trigger": "save\tcreate file", "contents": "save file ${1:filename}${2:.${3:ext}} create\n$0" },
                { "trigger": "save\treplace file", "contents": "save file ${1:filename}${2:.${3:ext}} replace\n$0" },
                { "trigger": "save\tappend file", "contents": "save file ${1:filename}${2:.${3:ext}} append\n$0" },
                { "trigger": "show\tall options", "contents": "show all\n" },
                { "trigger": "show\tautorecovery", "contents": "show autorecovery\n" },
                { "trigger": "show\tbtitle", "contents": "show btitle\n" },
                { "trigger": "show\tcon_id", "contents": "show con_id\n" },
                { "trigger": "show\tcon_name", "contents": "show con_name\n" },
                { "trigger": "show\tedition", "contents": "show edition\n" },
                { "trigger": "show\t\tfunction", "contents": "show errors function ${1:${2:schema}.}${3:function_name}\n$0" },
                { "trigger": "show\terrors for procedure", "contents": "show errors procedure ${1:${2:schema}.}${3:procedure_name}\n$0" },
                { "trigger": "show\terrors for package", "contents": "show errors package ${1:${2:schema}.}${3:package_name}\n$0" },
                { "trigger": "show\terrors for package body", "contents": "show errors package body ${1:${2:schema}.}${3:package_body_name}\n$0" },
                { "trigger": "show\terrors for trigger", "contents": "show errors trigger ${1:${2:schema}.}${3:trigger_name}\n$0" },
                { "trigger": "show\terrors for view", "contents": "show errors view ${1:${2:schema}.}${3:view_name}\n$0" },
                { "trigger": "show\terrors for type", "contents": "show errors type ${1:${2:schema}.}${3:type_name}\n$0" },
                { "trigger": "show\terrors for type body", "contents": "show errors type body ${1:${2:schema}.}${3:type_body_name}\n$0" },
                { "trigger": "show\terrors for dimension", "contents": "show errors dimension ${1:${2:schema}.}${3:dimension_name}\n$0" },
                { "trigger": "show\terrors for java class", "contents": "show errors java class ${1:${2:schema}.}${3:java_class_name}\n$0" },
                { "trigger": "show\tlno", "contents": "show lno\n" },
                { "trigger": "show\tparameters", "contents": "show parameters${1: ${2:[parameter_name]}}\n$0" },
                { "trigger": "show\tpdbs", "contents": "show pdbs\n" },
                { "trigger": "show\tpno", "contents": "show pno\n" },
                { "trigger": "show\trecyclebin", "contents": "show recyclebin${1: ${2:[original_name]}}\n$0" },
                { "trigger": "show\trelease", "contents": "show release\n" },
                { "trigger": "show\trepfooter", "contents": "show repfooter\n" },
                { "trigger": "show\trepheader", "contents": "show repheader\n" },
                { "trigger": "show\tsga", "contents": "show sgarepheader\n" },
                { "trigger": "show\tspool", "contents": "show spool\n" },
                { "trigger": "show\tspparameters", "contents": "show spparameters${1: ${2:[parameter_name]}}\n$0" },
                { "trigger": "show\tsqlcode", "contents": "show sqlcode\n" },
                { "trigger": "show\tttitle", "contents": "show ttitle\n" },
                { "trigger": "show\tuser", "contents": "show user\n" },
                { "trigger": "show\txquery", "contents": "show xquery\n" },
                { "trigger": "shutdown\tabort", "contents": "shutdown abort\n" },
                { "trigger": "shutdown\timmediate", "contents": "shutdown immediate\n" },
                { "trigger": "shutdown\tnormal", "contents": "shutdown normal\n" },
                { "trigger": "shutdown\ttransactional", "contents": "shutdown transactional${1: local}\n$0" },
                { "trigger": "spool\tcreate file", "contents": "spool ${1:filename}${2:.${3:sql}} create\n$0" },
                { "trigger": "spool\treplace file", "contents": "spool ${1:filename}${2:.${3:sql}} replace\n$0" },
                { "trigger": "spool\tappend file", "contents": "spool ${1:filename}${2:.${3:sql}} append\n$0" },
                { "trigger": "spool\tshow status", "contents": "spool\n" },
                { "trigger": "spool\tturn off", "contents": "spool off\n" },
                { "trigger": "spool\tout to printer", "contents": "spool out\n" },
                { "trigger": "start\t@file", "contents": "@${1:filename}${2:.${3:sql}}${4:${5: ${6:[param1]}}${7: ${8:[param2]}}${9: ${10:[param3]}}}\n$0" },
                { "trigger": "start\t@@file", "contents": "@@${1:filename}${2:.${3:sql}}${4:${5: ${6:[param1]}}${7: ${8:[param2]}}${9: ${10:[param3]}}}\n$0" },
                { "trigger": "start\t@http", "contents": "@http://${1:domain}${2::${3:port}}/${4:path}/${5:filename}${6:.${7:ext}}${8:${9: ${10:[param1]}}${11: ${12:[param2]}}${13: ${14:[param3]}}}\n$0" },
                { "trigger": "start\t@ftp", "contents": "@ftp://${1:domain}${2::${3:port}}/${4:path}/${5:filename}${6:.${7:ext}}${8:${9: ${10:[param1]}}${11: ${12:[param2]}}${13: ${14:[param3]}}}\n$0" },
                { "trigger": "startup\tstartup", "contents": "startup\n" },
                { "trigger": "startup\tmount", "contents": "startup mount${1: ${2:[dbname]}}\n$0" },
                { "trigger": "startup\tmount - full syntax", "contents": "startup${1: ${2:force}}${3: ${4:restrict}}${5: pfile=${6:filename}}${7: ${8:quiet}} mount${9: ${10:[dbname]}}\n$0" },
                { "trigger": "startup\topen", "contents": "startup open${1: ${2:[read only|read write|read write recover|recover]}}${3: ${4:[dbname]}}\n$0" },
                { "trigger": "startup\topen - full syntax", "contents": "startup${1: ${2:force}}${3: ${4:restrict}}${5: pfile=${6:filename}}${7: ${8:quiet}} open${9: ${10:[read only|read write|read write recover|recover]}}${11: ${12:[dbname]}}\n$0" },
                { "trigger": "startup\tnomount", "contents": "startup nomount\n$0" },
                { "trigger": "startup\tnomount - full syntax", "contents": "startup${1: ${2:force}}${3: ${4:restrict}}${5: pfile=${6:filename}}${7: ${8:quiet}} nomount\n$0" },
                { "trigger": "startup\tpluggable", "contents": "startup${1: pluggable database ${2:pdbname}}${3: ${4:force}}${5: ${6:upgrade}}${7: ${8:restrict}}${9: open ${10:{read write|read only\\}}}\n$0" },
                { "trigger": "startup\tupgrade", "contents": "startup${1: pfile=${2:filename}} upgrade${4: ${5:quiet}}\n$0" },
                { "trigger": "startup\tdowngrade", "contents": "startup${1: pfile=${2:filename}} downgrade${3: ${4:quiet}}\n$0" },
                { "trigger": "store\tcreate", "contents": "store set ${1:filename}${2:.${3:ext}} create\n$0" },
                { "trigger": "store\tappend", "contents": "store set ${1:filename}${2:.${3:ext}} append\n$0" },
                { "trigger": "store\treplace", "contents": "store set ${1:filename}${2:.${3:ext}} replace\n$0" },
                { "trigger": "timing\tstart", "contents": "timing start ${1:timer_name}\n$0" },
                { "trigger": "timing\tshow current", "contents": "timing show\n" },
                { "trigger": "timing\tstop current", "contents": "timing stop\n" },
                { "trigger": "ttitle\tlist definition", "contents": "ttitle\n$0" },
                { "trigger": "ttitle\tset simple", "contents": "ttitle${1: skip${2: ${3:[n]}}}${4: bold} '${5:text}'${6: skip${7: ${8:[n]}}}\n$0" },
                { "trigger": "ttitle\tset aligned", "contents": "ttitle${1: skip${2: ${3:[n]}}}${4: left '${5:text}'}${6: center '${7:text}'}${8: right '${9:text}'}${10: skip${11: ${12:[n]}}}\n$0" },
                { "trigger": "ttitle\tset algined/multi-line", "contents": "ttitle${1: skip${2: ${3:[n]}}}${4: left '${5:text}'}${6: center '${7:text}'}${8: right '${9:text}'} skip${10: ${11:[n]}}${12: left '${13:text}'}${14: center '${15:text}'}${16: right '${17:text}'}${18: skip${19: ${20:[n]}}}\n$0" },
                { "trigger": "ttitle\tset column aligned", "contents": "ttitle${1: skip${2: ${3:[n]}}}${4: bold}${5: col ${6:n}} '${7:text}'${8: ${9:tab ${10:n}} '${11:text}'}${12: skip${13: ${14:[n]}}}\n$0" },
                { "trigger": "ttitle\tturn off", "contents": "ttitle off\n" },
                { "trigger": "ttitle\tturn on", "contents": "ttitle on\n" },
                { "trigger": "undefine\tsingle variable", "contents": "undefine ${1:variable_name}\n$0" },
                { "trigger": "undefine\tmultiple variables", "contents": "undefine ${1:variable_name1} ${2:variable_name2}${3: ${4:[variable_name3]}${5: ${6:[variable_name4]}}}\n$0" },
                { "trigger": "variable\tshow all", "contents": "variable\n" },
                { "trigger": "variable\tshow variable", "contents": "variable ${1:variable_name}\n$0" },
                { "trigger": "variable\tdefine number", "contents": "variable ${1:variable_name} number\n$0" },
                { "trigger": "variable\tdefine char", "contents": "variable ${1:variable_name} char${2:(${3:n}${4: ${5:[char|byte]}})}\n$0" },
                { "trigger": "variable\tdefine nchar", "contents": "variable ${1:variable_name} nchar${2:(${3:n}${4: ${5:[char|byte]}})}\n$0" },
                { "trigger": "variable\tdefine varchar2", "contents": "variable ${1:variable_name} varchar2${2:(${3:n}${4: ${5:[char|byte]}})}\n$0" },
                { "trigger": "variable\tdefine nvarchar2", "contents": "variable ${1:variable_name} nvarchar2${2:(${3:n})}\n$0" },
                { "trigger": "variable\tdefine blob", "contents": "variable ${1:variable_name} blob\n$0" },
                { "trigger": "variable\tdefine bfile", "contents": "variable ${1:variable_name} bfile\n$0" },
                { "trigger": "variable\tdefine clob", "contents": "variable ${1:variable_name} clob\n$0" },
                { "trigger": "variable\tdefine nclob", "contents": "variable ${1:variable_name} nclob\n$0" },
                { "trigger": "variable\tdefine refcursor", "contents": "variable ${1:variable_name} refcursor\n$0" },
                { "trigger": "variable\tdefine binary_float", "contents": "variable ${1:variable_name} binary_float\n$0" },
                { "trigger": "variable\tdefine binary_double", "contents": "variable ${1:variable_name} binary_double\n$0" },
                { "trigger": "whenever oserror exit success", "contents": "whenever oserror exit success${1: ${2:[commit|rollback]}}\n$0" },
                { "trigger": "whenever oserror exit failure", "contents": "whenever oserror exit failure${1: ${2:[commit|rollback]}}\n$0" },
                { "trigger": "whenever oserror exit warning", "contents": "whenever oserror exit warning${1: ${2:[commit|rollback]}}\n$0" },
                { "trigger": "whenever oserror exit code", "contents": "whenever oserror exit ${1:{n|variable|:BindVariable\\}}${2: ${3:[commit|rollback]}}\n$0" },
                { "trigger": "whenever oserror continue", "contents": "whenever oserror continue${1: ${2:{commit|rollback|_none_\\}}}\n$0" },
                { "trigger": "whenever sqlerror exit success", "contents": "whenever sqlerror exit success${1: ${2:[commit|rollback]}}\n$0" },
                { "trigger": "whenever sqlerror exit failure", "contents": "whenever sqlerror exit failure${1: ${2:[commit|rollback]}}\n$0" },
                { "trigger": "whenever sqlerror exit warning", "contents": "whenever sqlerror exit warning${1: ${2:[commit|rollback]}}\n$0" },
                { "trigger": "whenever sqlerror exit code", "contents": "whenever sqlerror exit ${1:{n|variable|:BindVariable\\}}${2: ${3:[commit|rollback]}}\n$0" },
                { "trigger": "whenever sqlerror continue", "contents": "whenever sqlerror continue${1: ${2:[commit|rollback|_none_]}}\n$0" },
                { "trigger": "xquery", "contents": "xquery $0\n/\n" }
        ]
}
