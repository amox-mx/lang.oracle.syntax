<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string></string>
	</array>
	<key>hidden</key>
	<true/>
	<key>name</key>
	<string>Oracle SQL</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#statement</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>LOB-compression-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>LOB-compression-clause</string>
					<key>match</key>
					<string>(?i)\b(compress|nocompress)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>LOB-compression-clause</string>
					<key>match</key>
					<string>(?i)\b(high|low|medium)\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
			</array>
		</dict>
		<key>LOB-deduplicate-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>LOB-deduplicate-clause</string>
					<key>match</key>
					<string>(?i)\b(deduplicate|keep_deduplicates)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>LOB-parameters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>LOB-parameters</string>
					<key>match</key>
					<string>(?i)\b(c(ache|hunk)|d(ecrypt|isable)|en(able|crypt)|freepools|in|nocache|pctversion|r(eads|ow)|storage)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#LOB-retention-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#LOB-deduplicate-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#LOB-compression-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#encryption-spec</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#logging-clause</string>
				</dict>
			</array>
		</dict>
		<key>LOB-partition-storage</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>LOB-partition-storage</string>
					<key>match</key>
					<string>(?i)\b(partition|subpartition)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#LOB-partitioning-storage</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#varray-col-properties</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#LOB-storage-clause</string>
				</dict>
			</array>
		</dict>
		<key>LOB-partitioning-storage</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>LOB-partitioning-storage</string>
					<key>match</key>
					<string>(?i)\b(as|basicfile|lob|s(ecurefile|tore))\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>LOB-retention-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>LOB-retention-clause</string>
					<key>match</key>
					<string>(?i)\b(retention|min)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>LOB-retention-clause</string>
					<key>match</key>
					<string>(?i)\b(auto|max|none)\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
			</array>
		</dict>
		<key>LOB-storage-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(as|basicfile|lob|s(ecurefile|tore))\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>LOB-storage-parameters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>LOB-storage-parameters</string>
					<key>match</key>
					<string>(?i)\b(tablespace)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#LOB-parameters</string>
				</dict>
			</array>
		</dict>
		<key>XMLIndex-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>XMLIndex-clause</string>
					<key>match</key>
					<string>(?i)\b(X(db|mlindex))\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#XMLIndex_parameters-clause</string>
				</dict>
			</array>
		</dict>
		<key>XMLIndex-clause-parens-local</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>XMLIndex-clause</string>
					<key>match</key>
					<string>(?i)\b(partition)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#XMLIndex_parameters-clause</string>
				</dict>
			</array>
		</dict>
		<key>XMLType-column-properties</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>XMLType-column-properties</string>
					<key>match</key>
					<string>(?i)\b(column|xmltype)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>XMLType-storage</string>
					<key>match</key>
					<string>(?i)\b(as|b(asicfile|inary)|clob|object|relational|s(ecurefile|tore)|xml)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>XMLType-spec</string>
					<key>match</key>
					<string>(?i)\b(a(ll(ow)?|nyschema|s)|disallow|element|lobs|store|tables|varrays|xmlschema)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>XMLType-storage-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#LOB-parameters</string>
				</dict>
			</array>
		</dict>
		<key>add-column-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#column-properties</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>out-of-line-part-storage</string>
					<key>match</key>
					<string>(?i)\b(add|partition)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#nested-table-col-properties</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#LOB-storage-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#varray-col-properties</string>
				</dict>
			</array>
		</dict>
		<key>add-column-clause-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>column-definition</string>
					<key>match</key>
					<string>(?i)\b(default|encrypt|invisible|null|on|sort|visible)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#identity-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#encryption-spec</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inline-constraint</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inline-ref-constraint</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>virtual-column-definition</string>
					<key>match</key>
					<string>(?i)\b(always|generated|invisible|vi(rtual|sible))\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#evaluation-edition-flag</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unusable-editions-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>add-hash-subpartition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>add-hash-subpartition</string>
					<key>match</key>
					<string>(?i)\b(add)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#individual-hash-subparts</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#dependent-tables-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#update-index-clauses</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parallel-clauses</string>
				</dict>
			</array>
		</dict>
		<key>add-list-subpartition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>add-list-subpartition</string>
					<key>match</key>
					<string>(?i)\b(add)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#list-subpartition-desc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#dependent-tables-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#update-index-clauses</string>
				</dict>
			</array>
		</dict>
		<key>add-overflow-clause-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>add-overflow-clause-parens</string>
					<key>match</key>
					<string>(?i)\b(PARTITION)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#segment-attributes-clause</string>
				</dict>
			</array>
		</dict>
		<key>add-range-subpartition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>add-range-subpartition</string>
					<key>match</key>
					<string>(?i)\b(add)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#range-subpartition-desc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#dependent-tables-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#update-index-clauses</string>
				</dict>
			</array>
		</dict>
		<key>allocate-extent-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(allocate)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(extent)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(datafile|instance|size)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#size-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#literal</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>allow-disallow-clustering</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>allow-disallow-clustering</string>
					<key>match</key>
					<string>(?i)\b(allow|clustering|disallow)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>alter-XMLSchema-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>alter-XMLSchema-clause</string>
					<key>match</key>
					<string>(?i)\b(a(llow|nyschema)|disallow|noschema)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>alter-external-table</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(all|column|limit|project|re(ferenced|ject)|unlimited)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#add-column-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#modify-column-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#drop-column-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parallel-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#external-data-properties</string>
				</dict>
			</array>
		</dict>
		<key>alter-mapping-table-clauses</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>alter-table-properties</string>
					<key>match</key>
					<string>(?i)\b(mapping|table)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#allocate-extent-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#deallocate-unused-clause</string>
				</dict>
			</array>
		</dict>
		<key>alter-overflow-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>alter-overflow-clause</string>
					<key>match</key>
					<string>(?i)\b(overflow)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>add-overflow-clause</string>
					<key>match</key>
					<string>(?i)\b(add|overflow)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#segment-attributes-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#allocate-extent-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#shrink-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#deallocate-unused-clause</string>
				</dict>
			</array>
		</dict>
		<key>alter-table</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(alter\s++table)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$))|(?=^(\.)?\s*+$))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(all|disable|enable|lock|t(able|riggers))\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#alter-table-parens</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#alter-table-properties</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#column-clauses</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#constraint-clauses</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#alter-table-partitioning</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#alter-external-table</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#move_table_clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#modify-opaque-type</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#enable-disable-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>alter-table-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\b(add)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#add-column-clause-parens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#period-clause-parens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(as)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>split_table_(sub)partition</string>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#alter-table-parens-as</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(at)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>split_table_(sub)partition</string>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(basicfile|securefile)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>merge_table_subpartitions</string>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#alter-table-parens-basicfile</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(check)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>split_table_(sub)partition</string>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(clob)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#XMLType-storage-parens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(data)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#alter-table-parens-data</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(drop)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#period-clause-parens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(for)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(hash|range)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(identity)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#identity-clause-parens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(in(terval)?)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(indexes)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#alter-table-parens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(into)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>split_table_(sub)partition</string>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#alter-table-parens-into</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(key)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(lob)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(local)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#XMLIndex-clause-parens-local</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#on-range-partitioned-table</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#on-list-partitioned-table</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#on-hash-partitioned-table-parens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#on-comp-partitioned-table-parens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(location)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(modify)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#modify-column-clauses-parens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(on)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(parameters)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(ref)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(store)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(storage)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#storage-clause-parens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(tables)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#alter-table-parens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(template)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#set-subpartition-template-parens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(than)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#range-values-clause-parens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(type)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#alter-table-parens-type</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(unique)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(unused)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(values)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#list-values-clause-parens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(xml)(?=\s*+\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?&lt;=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(\()</string>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#XMLType-storage-parens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#alter-table-parens</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#alter-table-parens-as</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#alter-table-parens-basicfile</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#alter-table-parens-data</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#alter-table-parens-into</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#alter-table-parens-type</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#LOB-partition-storage</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#object-properties</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#physical-properties</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#column-properties</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#index-partitioning-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#individual-hash-partitions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#on-range-partitioned-table</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#on-list-partitioned-table</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#on-hash-partitioned-table-parens</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#on-comp-partitioned-table-parens</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#index-subpartition-clause-parens</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#external-table-clause-parens</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#XMLType-storage-parens</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#add-overflow-clause-parens</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#modify-LOB-parameters</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#LOB-parameters</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#partition-spec</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#update-all-indexes-clause-parens</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#split-table-partition-parens</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#storage-clause-parens</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#identity-clause-parens</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#identity-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#storage</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>alter-table-parens-as</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#LOB-storage-parameters</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#alter-table-parens</string>
				</dict>
			</array>
		</dict>
		<key>alter-table-parens-basicfile</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>supplemental-id-key-clause</string>
					<key>match</key>
					<string>(?i)\b(tablespace)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>alter-table-parens-data</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>supplemental-id-key-clause</string>
					<key>match</key>
					<string>(?i)\b(all|foreign|key|primary|unique)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>alter-table-parens-into</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#alter-table-parens</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>partition_spec</string>
					<key>match</key>
					<string>(?i)\b(partition)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>subpartition-spec</string>
					<key>match</key>
					<string>(?i)\b(subpartition)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#range-subpartition-desc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#list-subpartition-desc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#partitioning-storage-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#split-nested-table-part-parens</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#split-table-partition-into-parens</string>
				</dict>
			</array>
		</dict>
		<key>alter-table-parens-type</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>substitutable-column-clause</string>
					<key>match</key>
					<string>(?i)\b(only)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>alter-table-partitioning</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>modify-table-default-attrs</string>
					<key>match</key>
					<string>(?i)\b(attributed|default|for|lob|modify|pctthreshold|varray)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#partition-extended-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#deferred-segment-creation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#indexing-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#segment-attributes-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#table-compression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inmemory-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prefix-compression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#alter-overflow-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#LOB-parameters</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>alter-interval-partitioning</string>
					<key>match</key>
					<string>(?i)\b(in(terval)?|s(et|tore))\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>set-subpartition-template</string>
					<key>match</key>
					<string>(?i)\b(s(et|ubpartition)|template)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>modify-range-partition</string>
					<key>match</key>
					<string>(?i)\b(indexes|local|modify|rebuild|unusable)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#partition-extended-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#partition-attributes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#add-range-subpartition</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#add-hash-subpartition</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#add-list-subpartition</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#coalesce-table-subpartition</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#alter-mapping-table-clauses</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>modify-hash-partition</string>
					<key>match</key>
					<string>(?i)\b(indexes|local|modify|rebuild|unusable)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#partition-attributes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#coalesce-table-subpartition</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#alter-mapping-table-clause</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>modify-list-partition</string>
					<key>match</key>
					<string>(?i)\b(add|drop|indexes|local|modify|rebuild|unusable)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>modify-table-subpartition</string>
					<key>match</key>
					<string>(?i)\b(add|build|drop|indexes|lo(b|cal)|modify|unusable|varray)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#allocate-extent-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#deallocate-unused-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#shrink-clause</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>move-table-partition</string>
					<key>match</key>
					<string>(?i)\b(m(apping|ove)|online|table)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#table-partition-description</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#update-index-clauses</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parallel-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#allow-disallow-clustering</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>move-table-subpartition</string>
					<key>match</key>
					<string>(?i)\b(move|online)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#subpartition-extended-name</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#partitioning-storage-clause</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>add-table-partition</string>
					<key>match</key>
					<string>(?i)\b(add|before|partition)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#dependent-tables-clause</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>coalesce-table-partition</string>
					<key>match</key>
					<string>(?i)\b(coalesce|partition)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>drop-table-(sub)partition</string>
					<key>match</key>
					<string>(?i)\b(drop)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>partition-Extended-names</string>
					<key>match</key>
					<string>(?i)\b(partitions)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>subpartition-Extended-names</string>
					<key>match</key>
					<string>(?i)\b(subpartitions)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>rename-partition-subpart</string>
					<key>match</key>
					<string>(?i)\b(rename|to)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>truncate-partition-subpart</string>
					<key>match</key>
					<string>(?i)\b(all|cascade|drop|reuse|storage|truncate)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>split-table-(sub)partition</string>
					<key>match</key>
					<string>(?i)\b(at|into|split|values)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#split-nested-table-part</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>merge-table-partitions</string>
					<key>match</key>
					<string>(?i)\b(into|merge|partitions|to)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>merge-table-subpartitions</string>
					<key>match</key>
					<string>(?i)\b(into|merge|subpartitions|to)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#range-subpartition-desc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#list-subpartition-desc</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>exchange-partition-subpart</string>
					<key>match</key>
					<string>(?i)\b(cascade|exc(hange|luding)|in(cluding|dexes)|table|validation|with(out))\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>alter-table-properties</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>alter-table-properties</string>
					<key>match</key>
					<string>(?i)\b(columns)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#physical-attributes-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#logging-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#table-compression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#immemory-alter-table-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#ilm-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#supplemental-table-logging</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#allocate-extent-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#deallocate-unused-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#upgrade-table-clause</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>records-per-block-cause</string>
					<key>match</key>
					<string>(?i)\b(minimize|nominimize|records_per_block)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parallel-clause</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>row-movement-clause</string>
					<key>match</key>
					<string>(?i)\b(disable|enable|movement|row)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>flashback-archive-clause</string>
					<key>match</key>
					<string>(?i)\b(archive|flashback|no)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>alter-iot-clauses</string>
					<key>match</key>
					<string>(?i)\b(coalesce)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#index-org-table-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#alter-overflow-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#alter-mapping-table-clauses</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#alter-XMLSchema-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#shrink-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#encryption-spec</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>attribute-clustering-clause</string>
					<key>match</key>
					<string>(?i)\b(clustering)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>clustering-join</string>
					<key>match</key>
					<string>(?i)\b(join|on)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>cluster-clause</string>
					<key>match</key>
					<string>(?i)\b(by|interleaved|linear|order)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>clustering-when</string>
					<key>match</key>
					<string>(?i)\b(data|load|movement|no|on|yes)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>zonemap-clause</string>
					<key>match</key>
					<string>(?i)\b(materialized|with(out)?|zonemap)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>audit-operation-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>audit-operation-clause</string>
					<key>match</key>
					<string>(?i)\b(all|privileges|statements)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sql-statement-shortcut</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#system-privileges</string>
				</dict>
			</array>
		</dict>
		<key>audit-schema-object-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>audit-schema-object-clause</string>
					<key>match</key>
					<string>(?i)\b(all)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#sql-operation</string>
				</dict>
			</array>
		</dict>
		<key>auditing-by-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>auditing-by-clause</string>
					<key>match</key>
					<string>(?i)\b(by)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>auditing-on-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>auditing-on-clause</string>
					<key>match</key>
					<string>(?i)\b(d(efault|irectory)|m(ining|odel)|on|profile|sql|translation)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>autoextend-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>autoextend-clause</string>
					<key>match</key>
					<string>(?i)\b(autoextend|next)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>autoextend-clause</string>
					<key>match</key>
					<string>(?i)\b(o(ff|n))\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#size-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#maxsize-clause</string>
				</dict>
			</array>
		</dict>
		<key>block-oracle-plsql</key>
		<dict>
			<key>begin</key>
			<string>(?=(?i)\b(function|package|procedure|trigger|type)(\s|$))</string>
			<key>end</key>
			<string>((?=^(\s*+/\s*+|\.)$))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.oracle.plsql</string>
				</dict>
			</array>
		</dict>
		<key>coalesce-table-subpartition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>coalesce-table-subpartition</string>
					<key>match</key>
					<string>(?i)\b(coalesce|subpartition)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#update-indexes-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parallel-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#allow-disallow-clustering</string>
				</dict>
			</array>
		</dict>
		<key>column-clauses</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#add-column-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#modify-column-clauses</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#drop-column-clause</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>rename-column-clause</string>
					<key>match</key>
					<string>(?i)\b(column|rename|to)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>modify-collection-retrieval</string>
					<key>match</key>
					<string>(?i)\b(as|locator|modify|nested|table|return|value)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>modify-lob-storage-clause</string>
					<key>match</key>
					<string>(?i)\b(modify)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>alter-varray-col-properties</string>
					<key>match</key>
					<string>(?i)\b(modify|varrays)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>column-properties</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#object-type-col-properties</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#nested-table-col-properties</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#varray-col-properties</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#LOB-storage-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#XMLType-column-properties</string>
				</dict>
			</array>
		</dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!-)(--)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>comment.line.double-dash</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(/\*)(?!\+)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\*/)</string>
					<key>name</key>
					<string>comment.block</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(/\*)</string>
							<key>end</key>
							<string>(\*/)</string>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
						<dict>
							<key>match</key>
							<string>&amp;</string>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>common-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#identifier</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator</string>
				</dict>
			</array>
		</dict>
		<key>condition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>constraint-clauses</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>constraint-clauses</string>
					<key>match</key>
					<string>(?i)\b(add|c(ascade|onstraint)|key|modify|primary|rename|to|unique)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#out-of-line-constraint</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#out-of-line-ref-constraint</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constraint-state</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>drop-constraint-clause</string>
					<key>match</key>
					<string>(?i)\b(c(ascade|onstraint)|drop|index|ke(ep|y)|online|primary|unique)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>constraint-state</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>constraint-state</string>
					<key>match</key>
					<string>(?i)\b(d(eferr(able|ed)|isable)|enable|i(mmediate|nitially)|no(rely|t|validate)|rely|validate)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#using-index-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#exceptions-clause</string>
				</dict>
			</array>
		</dict>
		<key>create-table</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\b(create(\s++global\s++temporary)?(\s++/\*\+.+?\*/)?\s++table)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))|(?i)(?=(create\s++(table|view)|grant))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>create-table</string>
							<key>match</key>
							<string>(?i)\b(for)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>relational-table</string>
							<key>match</key>
							<string>(?i)\b(commit|delete|on|preserve|rows)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#physical-properties</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>table-properties</string>
							<key>match</key>
							<string>(?i)\b(archival|cache|no(cache|rowdependencies)|r(esult_cach|ow(dependencies)?)e)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#column-properties</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#indexing-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#table-partitioning-clauses</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#attribute-clustering-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parallel-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#enable-disable-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#row-movement-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#flashback-archive-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#statement-dml-select</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>object-table</string>
							<key>match</key>
							<string>(?i)\b(commit|delete|o(f|n)|preserve|rows)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>object-table-substitution</string>
							<key>match</key>
							<string>(?i)\b(a(ll|t)|levels|not|substitutable)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>oid-clause</string>
							<key>match</key>
							<string>(?i)\b(i(dentifier|s)|generated|key|object|primary|system)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>oid-index-clause</string>
							<key>match</key>
							<string>(?i)\b(oidindex)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>XMLType-table</string>
							<key>match</key>
							<string>(?i)\b(commit|delete|o(f|n)|preserve|xmltype)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#XMLType-storage</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#XMLType-spec</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>XMLType-virtual-columns</string>
							<key>match</key>
							<string>(?i)\b(columns|virtual)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#alter-table-parens</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>create-view</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\s*+(create(\s++or\s++replace)?((\s++no)?\s++force)?(\s++(edition(able|ing)|noneditionable){1,2})?\s++view)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/\s*+))|(?=^\s*+$))|(?i)(?=(create\s++(table)|grant))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>create-view</string>
							<key>match</key>
							<string>(?i)\b(as|bequeath|current_user|definer)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#statement-dml-select</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>object-view-clause</string>
							<key>match</key>
							<string>(?i)\b(default|id(entifier)?|o(bject|f)|under|with)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>XMLType-view-clause</string>
							<key>match</key>
							<string>(?i)\b(default|id(entifier)?|o(bject|f)|with|xmltype)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>XMLSchema-spec</string>
							<key>match</key>
							<string>(?i)\b(a(ll(ow)?|nyschema|s)|disallow|element|lobs|store|tables|varrays|xmlschema)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#subquery-restriction-clause</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>\(</string>
							<key>captures</key>
							<dict>
								<key>0</key>
								<dict>
									<key>name</key>
									<string>keyword.other.delimiter</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-view</string>
									<key>match</key>
									<string>(?i)\b(invisible|visible)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#inline-constraint</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#out-of-line-constraint</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>database-file-clauses</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(a(s|utoextend)|backup|create|d(atafile(s)?|rop)|end|f(ile|or)|including|keep|m(axsize|ove)|ne(w|xt)|o(ff(line)?|n(line)?)|re(name|size|use)|t(empfile|o)|unlimited)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#size-clause</string>
				</dict>
			</array>
		</dict>
		<key>deallocate-unused-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(deallocate|keep|unused)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#size-clause</string>
				</dict>
			</array>
		</dict>
		<key>default-tablespace</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>default-tablespace</string>
					<key>match</key>
					<string>(?i)\b(d(atafile|efault)|tablespace)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>datafile-tempfile-spec</string>
					<key>match</key>
					<string>(?i)\b(reuse|size)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#size-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#autoextend-clause</string>
				</dict>
			</array>
		</dict>
		<key>deferred-segment-creation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>deferred-segment-creation</string>
					<key>match</key>
					<string>(?i)\b(creation|segment)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>deferred-segment-creation</string>
					<key>match</key>
					<string>(?i)\b(deferred|immediate)\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
			</array>
		</dict>
		<key>dependent-tables-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>dependent-tables-clause</string>
					<key>match</key>
					<string>(?i)\b(dependent|tables)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>update-all-indexes-clause</string>
					<key>match</key>
					<string>(?i)\b(update|indexes)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>domain-index-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>domain-index-clause</string>
					<key>match</key>
					<string>(?i)\b(parameters)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>local-domain-index-clause</string>
					<key>match</key>
					<string>(?i)\b(local)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parallel-clause</string>
				</dict>
			</array>
		</dict>
		<key>drop-column-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>drop-column-clause</string>
					<key>match</key>
					<string>(?i)\b(c(ascade|heckpoint|o(lumn|n(straints|tinue)))|drop|invalidate|online|unused|set|unused)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>enable-disable-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(c(ascade|onstraint)|d(isable|rop)|enable|index|ke(ep|y)|novalidate|primary|validate)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#using-index-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#exceptions-clause</string>
				</dict>
			</array>
		</dict>
		<key>encryption-spec</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>encryption-spec</string>
					<key>match</key>
					<string>(?i)\b(by|identified|no|using|salt)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>error-logging-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>error-logging-clause</string>
					<key>match</key>
					<string>(?i)\b(errors|into|l(imit|og)|reject|unlimited)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>evaluation-edition-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>evaluation-edition-clause</string>
					<key>match</key>
					<string>(?i)\b(current|e(dition|valuate)|null|using)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>evaluation-edition-flag</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>evaluation-edition-flag</string>
					<key>match</key>
					<string>(?i)\b(current|e(dition|valuate)|null|using)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>exceptions-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>exceptions-clause</string>
					<key>match</key>
					<string>(?i)\b(exceptions|into)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#statement-dml-select</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#subquery-restriction-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)\b(case)\b</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?i)\b(end)\b</string>
					<key>name</key>
					<string>meta.block.case</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(else|then|when)\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(cursor)\b</string>
					<key>name</key>
					<string>keyword.other.cursor</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(indicator)\b</string>
					<key>name</key>
					<string>keyword.other.indicator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-other-bind-oracle-sqlplus</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#operator-conditional</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>Pseudocolumns</string>
					<key>match</key>
					<string>(?i)\b(c(o(lumn_value|nnect_by_(is(cycle|leaf)|root))|urrval)|level|nextval|o(bject_(id|value)|ra_rowscn)|row(id|num)|versions_((end|start)(scn|time)|operation|xid))\b</string>
					<key>name</key>
					<string>support.variable</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(at\s++(local|time\s++zone(\s++(dbtimezone|sessiontimezone))?))\b</string>
					<key>name</key>
					<string>keyword.other.datetime</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b((day|year)(?=(\s*+\(|\s++to))|to\s++(month|second))\b</string>
					<key>name</key>
					<string>keyword.other.interval</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#identifier</string>
				</dict>
			</array>
		</dict>
		<key>expression-oracle-sql</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>keyword.operator.other.oracle.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#statement-dml-select</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#string-quoted-oracle-sql</string>
						</dict>
						<dict>
							<key>match</key>
							<string>.</string>
							<key>name</key>
							<string>markup.changed</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>extent-management-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>extent-management-clause</string>
					<key>match</key>
					<string>(?i)\b(autoallocate|extent|local|management|size|uniform)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>external-data-properties</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>external-data-properties</string>
					<key>match</key>
					<string>(?i)\b(access|d(efault|irectory)|parameters|using|clob)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>external-table-clause-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>external-table-clause-parens</string>
					<key>match</key>
					<string>(?i)\b(type)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>access-driver-type</string>
					<key>match</key>
					<string>(?i)\b(oracle_(datapump|loader))\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#external-data-properties</string>
				</dict>
			</array>
		</dict>
		<key>file-name-convert</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>file-name-convert</string>
					<key>match</key>
					<string>(?i)\b(file_name_convert|none)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>file-specification-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(blocksize|reuse|size|unlimited)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#size-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#autoextend-clause</string>
				</dict>
			</array>
		</dict>
		<key>flashback-mode-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.language</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>flashback-mode-clause</string>
					<key>match</key>
					<string>(?i)\b(flashback)(?=\s++(on|off))\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>grant-statement</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)\s*(grant)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))|(?i)(?&lt;!grant)\s++(?=(create\s++(table|view)))</string>
					<key>name</key>
					<string>meta.statement.ddl.grant</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>grant</string>
							<key>match</key>
							<string>(?i)\b(container)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>grant</string>
							<key>match</key>
							<string>(?i)\b(all(\s++privileges)?|current)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>grant-system-privileges</string>
							<key>match</key>
							<string>(?i)\b(option|to|with)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>grant-system-privileges</string>
							<key>match</key>
							<string>(?i)\b(a(dmin|ll(\s++privileges)?)|delegate)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#system-privileges</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>grantee-clause</string>
							<key>match</key>
							<string>(?i)\b(public)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>grantee-identified-by</string>
							<key>match</key>
							<string>(?i)\b(by|identified)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>grant-object-privileges</string>
							<key>match</key>
							<string>(?i)\b(option|to|with)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>grant-object-privileges</string>
							<key>match</key>
							<string>(?i)\b(all(\s++privileges)?|grant|hierarchy)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#object-privileges</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#on-object-clause</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>grant-roles-to-programs</string>
							<key>match</key>
							<string>(?i)\b(to)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#program-unit</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>hash-partitions-by-quantity</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>hash-partitions-by-quantity</string>
					<key>match</key>
					<string>(?i)\b(in|overflow|partitions|store)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#table-compression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#index-compression</string>
				</dict>
			</array>
		</dict>
		<key>hash-subparts-by-quantity</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>hash-subparts-by-quantity</string>
					<key>match</key>
					<string>(?i)\b(in|s(tore|ubpartitions))\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>hint</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;!-)(--\+)(.*)$</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>$</string>
					<key>name</key>
					<string>comment.line.double-dash</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(/\*)</string>
							<key>end</key>
							<string>(\*/)</string>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#hint-include</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(/\*\+)</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\*/)</string>
					<key>name</key>
					<string>comment.block</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(/\*)</string>
							<key>end</key>
							<string>(\*/)</string>
							<key>name</key>
							<string>invalid.illegal</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#hint-include</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>hint-include</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(a(ll_rows|ppend(_values)?)|first_rows|c(ache|hange_dupkey_error_index|luster(ing)?|ursor_sharing_exact)|d(isable_parallel_dml|riving_site|ynamic_sampling)|enable_parallel_dml|f(act|ull)|gather_optimizer_statistics|hash|i(gnore_row_on_dupkey_index|n(dex(_(asc|combine|desc|ffs|join|ss(_(asc|desc))?))?|memory(_pruning)?))|leading|m(erge|o(del_min_analysis|nitor))|n(ative_full_outer_join|o(append|cache|_(clustering|expand|fact|gather_optimizer_statistics|in(dex(_(ffs|ss))?|memory(_pruning)?)|m(erge|onitor)|native_full_outer_join|p(arallel(_index)?|q_(concurrent_union|skew)|ush_(pred|subq)|x_join_filter)|query_transformation|re(sult_cache|write)|sta(r_transformation|tement_queuing)|u(nnest|se_(cube|hash|merge|nl))|xml(index_rewrite|_query_rewrite)|zonemap)))|o(pt_param|rdered)|p(arallel(_index)?|q_(concurrent_union|distribute|filter|skew)|ush_(pred|subq)|x_join_filter)|qb_name|re(sult_cache|try_on_row_change|write)|sta(r_transformation|tement_queuing)|u(nnest|se_(c(oncat|ube)|hash|merge|nl(_with_index)?)))\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(auto|broadcast|default|hash|join|manual|none|partition|random(_local)?|s(can|erial))\b</string>
							<key>name</key>
							<string>keyword.control</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>identifier</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(")(?=([^"]){0,30}")</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(")</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable-other-substitution-oracle-sqlplus</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#variable-other-bind-oracle-sqlplus</string>
						</dict>
						<dict>
							<key>match</key>
							<string>.</string>
							<key>name</key>
							<string>variable.other</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>identifier-xxx</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(")(?=([^"]){0,30}")</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(")</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable-other-substitution-oracle-sqlplus</string>
						</dict>
						<dict>
							<key>match</key>
							<string>.</string>
							<key>name</key>
							<string>variable.other</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(")(?=([^"]){31,}")</string>
					<key>end</key>
					<string>(")</string>
					<key>name</key>
					<string>invalid.illegal</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i)(?&lt;!\$)(\$\$)([[:alpha:]])(([\w$#]){0,29})(?!([\w$#]))</string>
					<key>name</key>
					<string>variable.language</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b([[:alpha:]])(([\w$#]){0,29})(?!([\w$#]))</string>
					<key>name</key>
					<string>variable.other</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b([[:alpha:]])(([\w$#]){30,})</string>
					<key>name</key>
					<string>invalid.illegal</string>
				</dict>
			</array>
		</dict>
		<key>identity-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>identity-clause</string>
					<key>match</key>
					<string>(?i)\b(a(lways|s)|by|default|generated|identity|null|on)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>identity-clause-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>identity-options</string>
					<key>match</key>
					<string>(?i)\b(by|c(ache|ycle)|increment|limit|m(axvalue|invalue)|no(c(ache|ycle)|m(axvalue|invalue)|order)|order|start|value|with)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>ilm-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>ilm-clause</string>
					<key>match</key>
					<string>(?i)\b(add|d(elete(_all)?|isable(_all)?)|enable(_all)?|ilm|policy)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>ilm-policy-clause</string>
					<key>match</key>
					<string>(?i)\b(a(ccess|fter)|creation|day(s)?|group|mo(dification|nth(s)?)|no|of|row|segment|row|year(s)?)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#table-compression</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>tiering-clause</string>
					<key>match</key>
					<string>(?i)\b(only|read|t(ier|o))\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>immemory-alter-table-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>immemory_alter_table_clause</string>
					<key>match</key>
					<string>(?i)\b(inmemory|no)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inmemory-parameters</string>
				</dict>
			</array>
		</dict>
		<key>index-attributes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>index-attributes</string>
					<key>match</key>
					<string>(?i)\b(default|invisible|nosort|online|reverse|sort|tablespace)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#physical-attributes-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#logging-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#index-compression</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>partial-index-clause</string>
					<key>match</key>
					<string>(?i)\b(full|indexing|partial)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parallel-clause</string>
				</dict>
			</array>
		</dict>
		<key>index-compression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#prefix-compression</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>advanced-index-compression</string>
					<key>match</key>
					<string>(?i)\b(advanced|compress|low|nocompress)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>index-org-table-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>index-org-table-clause</string>
					<key>match</key>
					<string>(?i)\b(pctthreshold)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>mapping-table-clauses</string>
					<key>match</key>
					<string>(?i)\b(mapping|nomapping|table)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prefix-compression</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>index-org-overflow-clause</string>
					<key>match</key>
					<string>(?i)\b(including|overflow)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#segment-attributes-clause</string>
				</dict>
			</array>
		</dict>
		<key>index-partitioning-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>using-index-clause</string>
					<key>match</key>
					<string>(?i)\b(less|partition|values)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#segment-attributes-clause</string>
				</dict>
			</array>
		</dict>
		<key>index-properties</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>index-properties</string>
					<key>match</key>
					<string>(?i)\b(i(ndextype|s))\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>global-partitioned-index</string>
					<key>match</key>
					<string>(?i)\b(by|global|hash|partition|range)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#hash-partitions-by-quantity</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>local-partitioned-index</string>
					<key>match</key>
					<string>(?i)\b(local)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#on-hash-partitioned-table</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#on-comp-partitioned-table</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#index-attributes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#domain-index-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#XMLIndex-clause</string>
				</dict>
			</array>
		</dict>
		<key>index-subpartition-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#on-comp-partitioned-table</string>
				</dict>
			</array>
		</dict>
		<key>index-subpartition-clause-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>index-subpartition-clause-parens</string>
					<key>match</key>
					<string>(?i)\b(subpartition|tablespace|u(nu)sable)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#index-compression</string>
				</dict>
			</array>
		</dict>
		<key>indexing-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>indexing-clause</string>
					<key>match</key>
					<string>(?i)\b(indexing|o(ff|n))\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>individual-hash-partitions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>individual-hash-partitions</string>
					<key>match</key>
					<string>(?i)\b(partition)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#indexing-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#partitioning-storage-clause</string>
				</dict>
			</array>
		</dict>
		<key>inline-constraint</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>inline-constraint</string>
					<key>match</key>
					<string>(?i)\b(constraint|key|n(ot|ull)|primary|unique)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#references-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constraint-state</string>
				</dict>
			</array>
		</dict>
		<key>inline-ref-constraint</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>inline-ref-constraint</string>
					<key>match</key>
					<string>(?i)\b(constraint|is|rowid|scope|with)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#references-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constraint-state</string>
				</dict>
			</array>
		</dict>
		<key>inmemory-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>inmemory-clause</string>
					<key>match</key>
					<string>(?i)\b(inmemory|no)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>inmemory-column-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>inmemory-column-clause</string>
					<key>match</key>
					<string>(?i)\b(inmemory|no)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inmemory-memcompress</string>
				</dict>
			</array>
		</dict>
		<key>inmemory-memcompress</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>inmemory_memcompress</string>
					<key>match</key>
					<string>(?i)\b(capacity|dml|for|memcompress|no|query)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>inmemory_memcompress</string>
					<key>match</key>
					<string>(?i)\b(low|high)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>inmemory-parameters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#inmemory-memcompress</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>inmemory_priority</string>
					<key>match</key>
					<string>(?i)\b(priority)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>inmemory_priority</string>
					<key>match</key>
					<string>(?i)\b(critital|high|low|medium|none)\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>inmemory_distribute</string>
					<key>match</key>
					<string>(?i)\b(auto|by|distribute|partition|r(ange|owid)|subpartition)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>inmemory_duplicate</string>
					<key>match</key>
					<string>(?i)\b(all|duplicate|no)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>inmemory-table-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>inmemory-table-clause</string>
					<key>match</key>
					<string>(?i)\b(inmemory|no)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inmemory-parameters</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inmemory-column-clause</string>
				</dict>
			</array>
		</dict>
		<key>list-subpartition-desc</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>range-subpartition-desc</string>
					<key>match</key>
					<string>(?i)\b(subpartition)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#list-values-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#indexing-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#partitioning-storage-clause</string>
				</dict>
			</array>
		</dict>
		<key>list-values-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>list-values-clause</string>
					<key>match</key>
					<string>(?i)\b(values)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>list-values-clause-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>list-values-clause</string>
					<key>match</key>
					<string>(?i)\b(default)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>list-values-clause</string>
					<key>match</key>
					<string>(?i)\b(null)\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
			</array>
		</dict>
		<key>literal</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(n|N)?'</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>'(?!')</string>
					<key>name</key>
					<string>constant.character</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>('')+</string>
							<key>name</key>
							<string>string.quoted.single</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#substitution-variable</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(n|N)?(q|Q)'(\[)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(])'</string>
					<key>name</key>
					<string>constant.character</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(')</string>
							<key>name</key>
							<string>string.quoted.single</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#substitution-variable</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(n|N)?(q|Q)'({)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(})'</string>
					<key>name</key>
					<string>constant.character</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(')</string>
							<key>name</key>
							<string>string.quoted.single</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#substitution-variable</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(n|N)?(q|Q)'(&lt;)</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(&gt;)'</string>
					<key>name</key>
					<string>constant.character</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(')</string>
							<key>name</key>
							<string>string.quoted.single</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#substitution-variable</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(n|N)?(q|Q)'(\()</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))'</string>
					<key>name</key>
					<string>constant.character</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(')</string>
							<key>name</key>
							<string>string.quoted.single</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#substitution-variable</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(n|N)?(q|Q)'([^\s\[|{|&lt;|\(])</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\3)'</string>
					<key>name</key>
					<string>constant.character.oracle.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(')</string>
							<key>name</key>
							<string>string.quoted.single</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#substitution-variable</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
						<key>10</key>
						<dict>
							<key>name</key>
							<string>constant.character</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
						<key>5</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
						<key>7</key>
						<dict>
							<key>name</key>
							<string>constant.character</string>
						</dict>
						<key>8</key>
						<dict>
							<key>name</key>
							<string>keyword.delimiter</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(\+|-)?\d++((\.)\d++|\d++((\.)\d++)?)?((e|E)?(\+|-)?(\d++)?)?(f|F|d|D)?\b</string>
					<key>name</key>
					<string>constant.numeric</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>date</string>
					<key>match</key>
					<string>(?i)\b(date(?=\s++\())\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>timestamp</string>
					<key>match</key>
					<string>(?i)\b((at\s++time\s++zone|date)(?=\s++\())\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>interval</string>
					<key>match</key>
					<string>(?i)\b(day|hour|interval|m(inute|onth)|second|to|year((?=\s*+\()|(?=\s++to)))\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(binary_((float|double)_(m(in_(subnormal|normal)|ax_(subnormal|normal))|infinity|nan))|false|null|true)\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
			</array>
		</dict>
		<key>logging-clause</key>
		<dict>
			<key>match</key>
			<string>(?i)\b(filesystem_like_logging|logging|nologging)\b</string>
			<key>name</key>
			<string>keyword.other</string>
		</dict>
		<key>maxsize-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>maxsize-clause</string>
					<key>match</key>
					<string>(?i)\b(maxsize)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>maxsize-clause</string>
					<key>match</key>
					<string>(?i)\b(unlimited)\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#size-clause</string>
				</dict>
			</array>
		</dict>
		<key>modify-LOB-parameters</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>modify-LOB-parameters</string>
					<key>match</key>
					<string>(?i)\b(freepools|pctversion|rebuild)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#LOB-retention-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#LOB-deduplicate-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#LOB-compression-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#encryption-spec</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#logging-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#allocate-extent-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#shrink-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#deallocate-unused-clause</string>
				</dict>
			</array>
		</dict>
		<key>modify-column-clauses</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>modify-column-clauses</string>
					<key>match</key>
					<string>(?i)\b(modify)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>modify-col-substitutable</string>
					<key>match</key>
					<string>(?i)\b(a(ll|t)|column|force|levels|not|substitutable)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>modify-column-clauses-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>modify-col-properties</string>
					<key>match</key>
					<string>(?i)\b(d(e(crypt|fault)|rop)|encrypt|identity|null|on)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#identity-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#encryption-spec</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inline-constraint</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#LOB-storage-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#alter-XMLSchema-clause</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>modify-virtcol-properties</string>
					<key>match</key>
					<string>(?i)\b(always|generated|virtual)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#evaluation-edition-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#unusable-editions-clause</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>modify-col-visibility</string>
					<key>match</key>
					<string>(?i)\b(invisible|visible)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>modify-opaque-type</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(modify|opaque|store|type|unpacked)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>move-table-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(move|online)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#segment-attributes-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#table-compression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#index-org-table-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#LOB-storage-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#varray-col-properties</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parallel-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#allow-disallow-clustering</string>
				</dict>
			</array>
		</dict>
		<key>nested-table-col-properties</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>nested-table-col-properties</string>
					<key>match</key>
					<string>(?i)\b(as|column_value|locator|nested|return|store|table|value)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>nested-table-col-properties</string>
					<key>match</key>
					<string>(?i)\b(global|local)\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#substitutable-column-clause</string>
				</dict>
			</array>
		</dict>
		<key>object-privileges</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>object-privileges</string>
					<key>match</key>
					<string>(?i)\b(a(lter|rchive)|commit|de(bug|lete)|execute|flashback|in(dex|herit|sert)|keep|merge|on(?=\s++commit)|privileges|query|re(ad|f(erences|resh)|write)|s(e(lect|quence)|ql)|translate|u(nder|pdate|se)|view|write)\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
			</array>
		</dict>
		<key>object-properties</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>object-properties</string>
					<key>match</key>
					<string>(?i)\b(default)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inline-constraint</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inline-ref-constraint</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#out-of-line-constraint</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#out-of-line-ref-constraint</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>supplemental-logging-props</string>
					<key>match</key>
					<string>(?i)\b(log|supplemental)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#supplemental-log-grp-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#supplemental-id-key-clause</string>
				</dict>
			</array>
		</dict>
		<key>object-type-col-properties</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>object-type-col-properties</string>
					<key>match</key>
					<string>(?i)\b(column)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#substitutable-column-clause</string>
				</dict>
			</array>
		</dict>
		<key>on-comp-partitioned-table</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>on-comp-partitioned-table</string>
					<key>match</key>
					<string>(?i)\b(store)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>on-comp-partitioned-table-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>on-hash-partitioned-table-parens</string>
					<key>match</key>
					<string>(?i)\b(partition|u(nu)sable)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#index-compression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#segment-attributes-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#index-subpartition-clause</string>
				</dict>
			</array>
		</dict>
		<key>on-hash-partitioned-table</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>on-hash-partitioned-table</string>
					<key>match</key>
					<string>(?i)\b(store)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>on-hash-partitioned-table-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>on-hash-partitioned-table-parens</string>
					<key>match</key>
					<string>(?i)\b(partition|tablespace|u(nu)sable)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>on-list-partitioned-table-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#on-range-partitioned-table</string>
				</dict>
			</array>
		</dict>
		<key>on-object-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>on-object-clause</string>
					<key>match</key>
					<string>(?i)\b(directory|edition|java|m(ining|odel)|on|profile|resource|s(ource|ql)|traslation|user)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>on-range-partitioned-table</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>using-index-clause</string>
					<key>match</key>
					<string>(?i)\b(partition|u(nu)sable)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#segment-attributes-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#index-compression</string>
				</dict>
			</array>
		</dict>
		<key>operator</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\+|-|\*|/</string>
					<key>name</key>
					<string>keyword.operator.arithmetic</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\|\|</string>
					<key>name</key>
					<string>keyword.operator.concatenation</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(=&gt;|(?&lt;!\.)(\.)(?!\.))</string>
					<key>name</key>
					<string>keyword.operator</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(,)</string>
					<key>name</key>
					<string>keyword.other.separator</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(@)</string>
					<key>name</key>
					<string>keyword.other.indicator</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#substitution-variable</string>
				</dict>
			</array>
		</dict>
		<key>operator-conditional</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(=|!=|&lt;&gt;|\^=|&lt;(=)?|&gt;(=)?)</string>
					<key>name</key>
					<string>keyword.operator.conditional</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(a(ll|n(d|y))|between|e(quals_path|scape|xists)|i(n(finite)?|s)|like(c|2|4)?|n(an|ot)|o(f|n((\s++error)?|ly)|r)|regexp_like|some|type|under_path)\b</string>
					<key>name</key>
					<string>keyword.operator</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(c(onnect(\s++by|_by_root)|ycle)|nocycle|prior|start\s++with)\b</string>
					<key>name</key>
					<string>keyword.operator.query.hierarchical</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(a\s++set|empty|member(\s++of)?|submultiset)\b</string>
					<key>name</key>
					<string>keyword.operator.multiset</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(format|keys|lax|json(_(exists|textcontains))?|strict|unique|with(out)?)\b</string>
					<key>name</key>
					<string>keyword.operator.json</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(score|contains|catsearch|matches)\b</string>
					<key>name</key>
					<string>keyword.operator.text</string>
				</dict>
			</array>
		</dict>
		<key>out-of-line-constraint</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>out-of-line-constraint</string>
					<key>match</key>
					<string>(?i)\b(constraint|foreign|primary)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#references-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constraint-state</string>
				</dict>
			</array>
		</dict>
		<key>out-of-line-ref-constraint</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>out-of-line-ref-constraint</string>
					<key>match</key>
					<string>(?i)\b(constraint|foreign|is|rowid|scope|with)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#references-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#constraint-state</string>
				</dict>
			</array>
		</dict>
		<key>parallel-clause</key>
		<dict>
			<key>match</key>
			<string>(?i)\b(parallel|noparallel)\b</string>
			<key>name</key>
			<string>keyword.other</string>
		</dict>
		<key>parameter-definition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>name</key>
					<string>meta.block.parameters.define</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(int|long|string|ocidate)\b</string>
							<key>name</key>
							<string>storage.type</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(by|charset(form|id)|duration|indicator|length|maxlen|re(ference|turn)|struct|tdo)\b</string>
							<key>name</key>
							<string>storage.modifier</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(context|self)\b</string>
							<key>name</key>
							<string>support.variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#keyword-delimiter</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#storage</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
						<dict>
							<key>match</key>
							<string>:=</string>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>partition-attributes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>partition-attributes</string>
					<key>match</key>
					<string>(?i)\b(lob|overflow|varray)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#physical-attributes-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#logging-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#allocate-extent-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#deallocate-unused-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#shrink-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#table-compression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inmemory-clause</string>
				</dict>
			</array>
		</dict>
		<key>partition-extended-name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>partition-extended-name</string>
					<key>match</key>
					<string>(?i)\b(for|partition)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>partition-extension-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>partition-extension-clause</string>
					<key>match</key>
					<string>(?i)\b(for|partition|subpartition)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>partition-spec</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>partition-spec</string>
					<key>match</key>
					<string>(?i)\b(overflow|partition)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#table-partition-description</string>
				</dict>
			</array>
		</dict>
		<key>partitioning-storage-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>partitioning-storage-clause</string>
					<key>match</key>
					<string>(?i)\b(as|basicfile|lob|overflow|s(ecurefile|tore)|tablespace|varray)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#table-compression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#index-compression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inmemory-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#LOB-partitioning-storage</string>
				</dict>
			</array>
		</dict>
		<key>period-clause-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>period-clause-parens</string>
					<key>match</key>
					<string>(?i)\b(for|period)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>physical-attributes-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(initrans|pct(free|used))\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage-clause</string>
				</dict>
			</array>
		</dict>
		<key>physical-properties</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>object-properties</string>
					<key>match</key>
					<string>(?i)\b(cluster|external|heap|index|organization)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#deferred-segment-creation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#segment-attributes-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#table-compression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inmemory-table-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#ilm-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#index-org-table-clause</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>external-table-clause</string>
					<key>match</key>
					<string>(?i)\b(limit|reject|unlimited)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>prefix-compression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>prefix-compression</string>
					<key>match</key>
					<string>(?i)\b(compress|nocompress)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>program-unit</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>program-unit</string>
					<key>match</key>
					<string>(?i)\b(function|p(ackage|rocedure))\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>query-table-expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>query-table-expression</string>
					<key>match</key>
					<string>(?i)\b(lateral)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#partition-extension-clause</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>sample-clause</string>
					<key>match</key>
					<string>(?i)\b(block|s(ample|eed))\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#table-collection-expression</string>
				</dict>
			</array>
		</dict>
		<key>range-subpartition-desc</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>range-subpartition-desc</string>
					<key>match</key>
					<string>(?i)\b(subpartition)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#range-values-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#indexing-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#partitioning-storage-clause</string>
				</dict>
			</array>
		</dict>
		<key>range-values-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>range-values-clause</string>
					<key>match</key>
					<string>(?i)\b(less|than|values)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>range-values-clause-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>range-values-clause-parens</string>
					<key>match</key>
					<string>(?i)\b(maxvalue)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>references-clause</key>
		<dict>
			<key>match</key>
			<string>(?i)\b(cascade|delete|null|on|references|set)\b</string>
			<key>name</key>
			<string>keyword.other</string>
		</dict>
		<key>returning-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>returning-clause</string>
					<key>match</key>
					<string>(?i)\b(bulk|collect|into|return(ing)?)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>rollup-cube-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>rollup-cube-clause</string>
					<key>match</key>
					<string>(?i)\b(cube|rollup)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>segment-attributes-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>segment-attributes-clause</string>
					<key>match</key>
					<string>(?i)\b(tablespace)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#physical-attribute-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#logging-clause</string>
				</dict>
			</array>
		</dict>
		<key>select-include</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(a\s++set|distinct|e(mpty|xcept)|intersect|m(ember(\s++of)?|ultiset)|submultiset(\s++of)?|union)\b</string>
					<key>name</key>
					<string>keyword.operator.multiset</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
			</array>
		</dict>
		<key>set-subpartition-template-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#range-subpartition-desc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#list-subpartition-desc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#individual-hash-subparts</string>
				</dict>
			</array>
		</dict>
		<key>shrink-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>shrink-clause</string>
					<key>match</key>
					<string>(?i)\b(c(ascade|ompact)|s(pace|rhink))\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>size-clause</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.numeric</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i)\b(\d++)\s*+(E|G|K|M|P|T)\b</string>
		</dict>
		<key>split-nested-table-part</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>split-nested-table-part</string>
					<key>match</key>
					<string>(?i)\b(into|nested|table)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>split-nested-table-part-into</key>
		<dict>
			<key>begin</key>
			<string>(?i)\b(into)(?=(\s|\n)*+\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?&lt;=\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(partition)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#segment-attributes-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#split-nested-table-part</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#split-nested-table-part-into</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>split-nested-table-part-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>nested-table-partition-spec</string>
					<key>match</key>
					<string>(?i)\b(partition)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#segment-attributes-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#split-nested-table-part</string>
				</dict>
			</array>
		</dict>
		<key>split-table-partition-into-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>split-table-partition-into-parens</string>
					<key>match</key>
					<string>(?i)\b(partition|subpartition)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#range-values-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#table-partition-description</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#hash-subparts-by-quantity</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#partition-spec</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#range-subpartition-desc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#list-subpartition-desc</string>
				</dict>
			</array>
		</dict>
		<key>split-table-partition-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#range-subpartition-desc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#list-subpartition-desc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#individual-hash-subparts</string>
				</dict>
			</array>
		</dict>
		<key>sql-operation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>sql-operation</string>
					<key>match</key>
					<string>(?i)\b(a(lter|udit)|comment|delete|execute|flashback|grant|in(dex|sert)|lock|re(ad|name)|select|update)\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
			</array>
		</dict>
		<key>sql-statement-shortcut</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>sql-statement-shortcut</string>
					<key>match</key>
					<string>(?i)\b(a(lter|udit)|c(luster|o(mment|ntext(?!\s++namespace)))|d(atabase|elete|i(mension|rectory))|ex(ecute|ists)|grant|in(dex|sert)|l(ink|ock)|materialized|not|outline|p(luggable|ro(cedure|file)|ublic)|rol(e|lback)|s(e(gment|lect|quence|ssion)|y(nonym|stem))|t(able(space)?|rigger|ype)|u(pdate|ser)|view)\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
			</array>
		</dict>
		<key>statement</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=(?i)^\s*(\(|a(dminister|nalyze|lter|ssociate|udit)|c(all|omm(ent|it)|reate)|d(elete|isassociate|rop)|explain|flashback|grant|insert|lock|merge|noaudit|purge|r(e(name|voke)|ollback)|s(avepoint|e(t|lect))|truncate|update)\b)</string>
					<key>end</key>
					<string>((?=(;|\]\]&gt;))|((?=^\s*+/$))|(?=^(\.)?\s*+$))</string>
					<key>name</key>
					<string>meta.statement.oracle.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#statement-ddl</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#statement-dml-select</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#statement-dml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#statement-control-transaction</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#statement-control-session</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#statement-control-system</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#statement-embedded</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#statement-key-mgmt</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=(?i)\s*(select)\b)</string>
					<key>end</key>
					<string>(?=(\]\]&gt;|;|\)))</string>
					<key>name</key>
					<string>meta.statement.oracle.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#statement-dml-select</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?=(?i)^\s*(with)\b)</string>
					<key>end</key>
					<string>(?=(?i)^\s*(select)\b)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#statement-dml-select</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>statement-control-session</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(alter\s++session)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$))|(?=^(\.)?\s*+$))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(a(dvise|rchival)|c(lose|o(mmit|ntainer))|d(atabase|dl|isable|ml)|e(dition|nable)|force|guard|in|link|n(ame|othing)|p(arallel|r(imary|ocedure))|query|r(esumable|o(llback|w))|s(et|ync)|timeout|visibility|with)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(a(ctive|ll))\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(set\s++role)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>set-role</string>
							<key>match</key>
							<string>(?i)\b(by|except|identified)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>set-role</string>
							<key>match</key>
							<string>(?i)\b(all|none)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>statement-control-system</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(alter\s++system)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(a(ll|pply|rchive)|b(ackup|uffer_cache|y)|c(h(ange|eck(point)?)|l(ient|ose)|o(mment|n(firm|trolfile))|urrent)|d(atafiles|eferred|is(able|connect|tribute(d)?))|en(able|cryption)|flush|g(lobal(\s++context|_topic_enabled)|roup)|i(dentified|mmediate|nstance)|k(ey|ill)|log(file)?|migrat(e|ion)|n(ext|o(replay|switch)?)|open|p(atch|ost_transaction)|quiesce|r(e(covery|do|gister|llocate|s(et|tricted|ume))|olling)|s(cope|e(quence|ssion|t)|h(ared_pool|utwodn)|id|t(art|o(p)?)|uspend|witch)|to|u(nquiesce|s(e_stored_outlines|ing))|wallet)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(both|global(?!\s++context)|local|memory|spfile)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>statement-control-transaction</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(commit)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>commit</string>
							<key>match</key>
							<string>(?i)\b(comment|force|w(ork|rite))\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>commit</string>
							<key>match</key>
							<string>(?i)\b(batch|immediate|nowait|wait)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(rollback)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>rollback</string>
							<key>match</key>
							<string>(?i)\b(force|savepoint|to|work)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(savepoint)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(set\s++constraint(s)?)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>set-constraint</string>
							<key>match</key>
							<string>(?i)\b(all)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>set-constraint</string>
							<key>match</key>
							<string>(?i)\b(deferred|immediate)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*+(set\s++transaction)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>set-transaction</string>
							<key>match</key>
							<string>(?i)\b(commited|isolation|level|name|only|r(ead|ollback)|se(gment|rializable)|use|write)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>set-constraint</string>
							<key>match</key>
							<string>(?i)\b(deferred|immediate)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>statement-ddl</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(analyze)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.ddl.analyze</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>analyze</string>
							<key>match</key>
							<string>(?i)\b(c(hained|luster)|delete|index|list|rows|system|statistics|table)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#partition-extension-clause</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>validation-clauses</string>
							<key>match</key>
							<string>(?i)\b(c(ascade|complete)|dangling|fast|null|ref|s(et|tructure)|to|update|validate)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>validation-clauses</string>
							<key>match</key>
							<string>(?i)\b(o(ff|n)line)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>into-clause</string>
							<key>match</key>
							<string>(?i)\b(into)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(associate)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.ddl.associate-statistics</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>associate-statistics</string>
							<key>match</key>
							<string>(?i)\b(statistics|with)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>column-association</string>
							<key>match</key>
							<string>(?i)\b(columns)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>using-statistics-type</string>
							<key>match</key>
							<string>(?i)\b(null|using)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>function-association</string>
							<key>match</key>
							<string>(?i)\b(functions|index(typ)?es|packages|types)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>default-cost-clause</string>
							<key>match</key>
							<string>(?i)\b(cost|default)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>default-selectivity-clause</string>
							<key>match</key>
							<string>(?i)\b(default|selectivity)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>storage-table-clause</string>
							<key>match</key>
							<string>(?i)\b(managed|s(torage|ytem)|tables|user|with)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(disassociate)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.ddl.disassociate-statistics</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>disassociate-statistics</string>
							<key>match</key>
							<string>(?i)\b(columns|f(orce|rom|unctions)|index(es|types)|packages|statistics|types)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(audit)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.ddl.associate-statistics</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>audit</string>
							<key>match</key>
							<string>(?i)\b(access|by|container|direct_path|in|load|n(etwork|ot)|s(ession|uccessful)|whenever)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>audit</string>
							<key>match</key>
							<string>(?i)(?&lt;==)\s*+(all|current)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#audit-operation-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#auditing-by-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#audit-schema-object-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#auditing-on-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(?=^\s*(create)\s)</string>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.ddl.create</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#block-oracle-plsql</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*(create\s++audit)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-audit-policy</string>
									<key>match</key>
									<string>(?i)\b(container|evaluate|p(er|olicy)|when)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>create-audit-policy</string>
									<key>match</key>
									<string>(?i)\b(instance|s(ession|tatement))\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>create-audit-policy</string>
									<key>match</key>
									<string>(?i)(?&lt;==)\s*+(all|current)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>privilege-audit-clause</string>
									<key>match</key>
									<string>(?i)\b(privileges)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>standard-actions</string>
									<key>match</key>
									<string>(?i)\b(a(ctions|ll)|directory|m(ining|odel)|on)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>component-actions</string>
									<key>match</key>
									<string>(?i)\b(actions|component|on)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>component-actions</string>
									<key>match</key>
									<string>(?i)\b(d(atapump|irect_load|v)|ols|xs)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>roles-audit-clause</string>
									<key>match</key>
									<string>(?i)\b(roles)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>object-actions</string>
									<key>match</key>
									<string>(?i)\b(a(lter|udit)|comment|delete|execute|flashback|grant|in(dex|sert)|lock|re(ad|name)|select|update)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>component-actions-datapump</string>
									<key>match</key>
									<string>(?i)\b(all|export|import)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>component-actions-direct-load</string>
									<key>match</key>
									<string>(?i)\b(all|load)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>component-actions-ols</string>
									<key>match</key>
									<string>(?i)\b(a(ction|ll|pply|uthorization)|c(omponents|reate)|d(ata|isable|rop)|enable|label|oid|p(olicy|rivileged)|remove|s(et|ubscribe)|unsubscribe)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>component-actions-xs</string>
									<key>match</key>
									<string>(?i)\b(a(cl|dd|ll|ssign|ttribute)|c(allback|lass|ookie|reate)|d(ata|e(lete|stroy)|isable)|enable|g(et|lobal|rant)|inactive|namespace|p(assword|roxy)|r(e(move|voke)|ole(set)?)|s(e(curity|ssion|t)|witch)|t(emplate|imeout)|u(pdate|ser)|verifier)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>component-actions-dv</string>
									<key>match</key>
									<string>(?i)\b(access|e(rror|val)|fa(ctor|ilure|lse)|level|n(eg|ull)|r(ealm|ule)|s(et|uccess)|trust|v(alidate|iolation))\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#system-privileges</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++cluster)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-cluster</string>
									<key>match</key>
									<string>(?i)\b(cache|hash(keys)?|i(ndex|s)|no(cache|rowdependencies)|rowdependencies|si(ngle|ze)|table(space)?)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#physical-attributes-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#size-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#parallel-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>cluster-range-partitions</string>
									<key>match</key>
									<string>(?i)\b(by|partition|range)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#alter-table-parens</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create(\s++or\s++replace)?\s++context)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-context</string>
									<key>match</key>
									<string>(?i)\b(accessed|initialized|using)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>create-context</string>
									<key>match</key>
									<string>(?i)\b(externally|globally)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++controlfile)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-context</string>
									<key>match</key>
									<string>(?i)\b(archivelog|data(base|file)|force|logging|max(datafiles|instances|log(files|history|members))|no(archivelog|resetlogs)|re(setlogs|use)|set)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>logfile-clause</string>
									<key>match</key>
									<string>(?i)\b(group|logfile)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#file-specification-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>character-set-clause</string>
									<key>match</key>
									<string>(?i)\b(character|set)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++database)(?!\s++link)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-database</string>
									<key>match</key>
									<string>(?i)\b(b(igfile|y)|c(haracter|ontrolfile)|d(atafile|efault)|identified|max(datafiles|instances)|national|reuse|s(et|mallfile|ys(tem)?)|tablespace|user(_data)?)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>database-logging-clauses</string>
									<key>match</key>
									<string>(?i)\b(archivelog|force|group|log(file|ging)|max(log(files|history|members))|noarchivelog)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>tablespace-clauses</string>
									<key>match</key>
									<string>(?i)\b(datafile|extent|local|management|sysaux)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#default-tablespace</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>default-temp-tablespace</string>
									<key>match</key>
									<string>(?i)\b(bigfile|default|smallfile|t(ablespace|emp(file|orary)))\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#extent-management-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#size-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>undo-tablespace</string>
									<key>match</key>
									<string>(?i)\b(bigfile|datafile|smallfile|tablespace|undo)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>set-timezone</string>
									<key>match</key>
									<string>(?i)\b(set|time_zone)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>enable-plugabble-database</string>
									<key>match</key>
									<string>(?i)\b(enable|database|pluggable|s(eed|ys(aux|tem)))\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>tablespace-datafile-clauses</string>
									<key>match</key>
									<string>(?i)\b(datafiles|size)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#autoextend-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#file-specification-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create(\s++(public|shared)){0,2}\s++database\s++link)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-database-link</string>
									<key>match</key>
									<string>(?i)\b(by|c(onnect|urrent_user)|identified|to|using)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>dblink-authentication</string>
									<key>match</key>
									<string>(?i)\b(authenticated|identified|by)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++dimension)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>level-clause</string>
									<key>match</key>
									<string>(?i)\b(is|level|skip|when)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>level-clause</string>
									<key>match</key>
									<string>(?i)\b(null)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>hierarchy-clause</string>
									<key>match</key>
									<string>(?i)\b(hierarchy)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>attribute-clause</string>
									<key>match</key>
									<string>(?i)\b(attribute|determines)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>extended-attribute-clause</string>
									<key>match</key>
									<string>(?i)\b(attribute|determines|level)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>comment</key>
											<string>hierarchy-clause</string>
											<key>match</key>
											<string>(?i)\b(child|of)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>dimension-join-clause</string>
											<key>match</key>
											<string>(?i)\b(join|key|References)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#expression</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create(\s++or\s++replace)?\s++directory)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-directory</string>
									<key>match</key>
									<string>(?i)\b(as)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++diskgroup)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-diskgroup</string>
									<key>match</key>
									<string>(?i)\b(attribute|disk|external|failgroup|high|normal|re(dundancy|gular)|quorum)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>qualified-disk-clause</string>
									<key>match</key>
									<string>(?i)\b(force|n(ame|oforce)|size)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#size-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++edition)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-edition</string>
									<key>match</key>
									<string>(?i)\b(as|child|of)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++flashback)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-flashback-archive</string>
									<key>match</key>
									<string>(?i)\b(archive|d(ata|efault)|no|optimize|tablespace)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>flashback-archive-quota</string>
									<key>match</key>
									<string>(?i)\b(quota)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>flashback-archive-retention</string>
									<key>match</key>
									<string>(?i)\b(day|month|retention|year)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#size-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create(\s++(bitmap|unique))?\s++index)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#alter-table-parens</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>create-index</string>
									<key>match</key>
									<string>(?i)\b(index|on|u(nusable|sable))\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>cluster-index-clause</string>
									<key>match</key>
									<string>(?i)\b(cluster)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#index-attributes</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#index-properties</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>bitmap-join-index-clause</string>
									<key>match</key>
									<string>(?i)\b(from|where)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create(\s++or\s++replace)?\s++indextype)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-indextype</string>
									<key>match</key>
									<string>(?i)\b(for|local|partition|range|with)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>using-type-clause</string>
									<key>match</key>
									<string>(?i)\b(using)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>array-dml-clause</string>
									<key>match</key>
									<string>(?i)\b(array|dml|with(out)?)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#storage-table-clause</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#common-clause</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create(\s++or\s++replace)?(\s++and\s++(compile|resolve))?(\s++noforce)?\s++java)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-java</string>
									<key>match</key>
									<string>(?i)\b(b(file|lob)|cl(ass|ob)|named|reso(lver|urce)|s(chema|ource)|using)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#invoker-rights-clause</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?i)\b(as)\b</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?&lt;=\})</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>source.java</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create(\s++or\s++replace)?(\s++(editionable|noneditionable))?\s++library)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-library</string>
									<key>match</key>
									<string>(?i)\b(a(gent|s)|credential|i(n|s)|static|trusted)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(\.)</string>
									<key>name</key>
									<string>keyword.delimiter</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(\w)++</string>
									<key>name</key>
									<string>variable.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#literal</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++materialized\s++view(?!\s++log))\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-materialized-view</string>
									<key>match</key>
									<string>(?i)\b(for|index|no|o(f|n)|pre(built|cision)|reduced|table|u(pdate|sing)|with(out)?)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>scoped-table-ref-constraint</string>
									<key>match</key>
									<string>(?i)\b(for|is|scope)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#physical-properties</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>materialized-view-props</string>
									<key>match</key>
									<string>(?i)\b(cache|nocache)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#column-properties</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#table-partitioning-clauses</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#parallel-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>build-clause</string>
									<key>match</key>
									<string>(?i)\b(build|deferred|immediate)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#physical-attributes-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>create-mv-refresh</string>
									<key>match</key>
									<string>(?i)\b(commit|de(fault|mand)|enforced|key|local|master|ne(ver|xt)|on|primary|r(efresh|ollback)|trusted|using|s(egment|tart)|with)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>create-mv-refresh</string>
									<key>match</key>
									<string>(?i)\b(complete|f(ast|orce))\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#evaluation-edition-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>query-rewrite-clause</string>
									<key>match</key>
									<string>(?i)\b(disable|enable|query|rewrite)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#statement-dml-select</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>comment</key>
											<string>create-materialized-view</string>
											<key>match</key>
											<string>(?i)\b(encrypt)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>create-materialized-view</string>
											<key>match</key>
											<string>(?i)\b(default|maxvalue|null|partition)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#storage-clause-parens</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#common-clause</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++materialized\s++view\s++log)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-materialized-view-log</string>
									<key>match</key>
									<string>(?i)\b(c(ache|ommit)|id|key|nocache|o(bject|n)|primary|rowid|s(cn|equence)|tablespace|with)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#physical-attributes-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#logging-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#parallel-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#table-partitioning-clauses</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>new-values-clause</string>
									<key>match</key>
									<string>(?i)\b(excluding|including|new|values)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>mv-log-purge-clause</string>
									<key>match</key>
									<string>(?i)\b(asynchronous|i(mmediate|nterval)|next|purge|repeat|s(tart|ynchronous)|with)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>interval-expr</string>
									<key>match</key>
									<string>(?i)\b(day|month|second|year)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>for-refresh-clause</string>
									<key>match</key>
									<string>(?i)\b(f(ast|or)|refresh|synchronous|using)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage-clause-parens</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#common-clause</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++materialized\s++zonemap)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-zonemap-on-table</string>
									<key>match</key>
									<string>(?i)\b(disable|enable|on|pruning)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>create-zonemap-as-subquery</string>
									<key>match</key>
									<string>(?i)\b(as|disable|enable|pruning)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>zonemap-attributes</string>
									<key>match</key>
									<string>(?i)\b(cache|nocache|pct(free|used)|scale|tablespace)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>zonemap-refresh-clause</string>
									<key>match</key>
									<string>(?i)\b(on|refresh)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>zonemap-refresh-clause</string>
									<key>match</key>
									<string>(?i)\b(com(mit|plete)|d(ata|emand)|f(ast|orce)|load|movement)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>interval-expr</string>
									<key>match</key>
									<string>(?i)\b(day|month|second|year)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>for-refresh-clause</string>
									<key>match</key>
									<string>(?i)\b(f(ast|or)|refresh|synchronous|using)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#statement-dml-select</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++(\s++or\s++replace)?operator)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>binding-clause</string>
									<key>match</key>
									<string>(?i)\b(binding|return)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>implementation-clause</string>
									<key>match</key>
									<string>(?i)\b(ancillary|to)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>using-function-clause</string>
									<key>match</key>
									<string>(?i)\b(using)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#common-clause</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create(\s++or\s++replace)?(\s++(p(rivate|ublic)))?\s++outline)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-outline</string>
									<key>match</key>
									<string>(?i)\b(category|f(or|rom)|on|p(rivate|ublic))\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++pfile)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-pfile</string>
									<key>match</key>
									<string>(?i)\b(from|memory|spfile)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++pluggable)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-pluggable-database</string>
									<key>match</key>
									<string>(?i)\b(database)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>create-pdb-from-seed</string>
									<key>match</key>
									<string>(?i)\b(admin|by|identified|user)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>pdb-dba-roles</string>
									<key>match</key>
									<string>(?i)\b(roles)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#default-tablespace</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#file-name-convert</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>pdb-storage-clause</string>
									<key>match</key>
									<string>(?i)\b(storage|unlimited)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>path-prefix-clause</string>
									<key>match</key>
									<string>(?i)\b(none|path_prefix)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>tempfile-reuse-clause</string>
									<key>match</key>
									<string>(?i)\b(reuse|tempfile)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>user-tablespaces-clause</string>
									<key>match</key>
									<string>(?i)\b(all|except|none|user_tablespaces)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>standbys-clause</string>
									<key>match</key>
									<string>(?i)\b(all|none|standbys)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#logging-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>create-file-dest-clause</string>
									<key>match</key>
									<string>(?i)\b(create_file_dest|none)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>create-pdb-clone</string>
									<key>match</key>
									<string>(?i)\b(copy|data|from|no(n\$cdb)|snapshot)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>create-pdb-from-xml</string>
									<key>match</key>
									<string>(?i)\b(as|c(lone|opy)|move|nocopy|using)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>source-file-name-convert</string>
									<key>match</key>
									<string>(?i)\b(source_file_name_convert|none)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>source-file-directory</string>
									<key>match</key>
									<string>(?i)\b(source_file_directory|none)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#datafile-tempfile-spec</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#extent-management-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#storage-clause</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>comment</key>
											<string>pdb-storage-clause</string>
											<key>match</key>
											<string>(?i)\b(max(size|_shared_temp_size)|unlimited)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#storage-clause-parens</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#size-clause</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#common-clause</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++profile)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-profile</string>
									<key>match</key>
									<string>(?i)\b(container|limit)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>create-profile</string>
									<key>match</key>
									<string>(?i)\b(all|current)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>resource-parameters</string>
									<key>match</key>
									<string>(?i)\b(c(o(mposite_limit|nnect_time)|pu_per_(call|session))|idle_time|logical_reads_per_(call|session)|private_sga|sessions_per_user)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>resource-parameters</string>
									<key>match</key>
									<string>(?i)\b(default|unlimited)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#size-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>password-parameters</string>
									<key>match</key>
									<string>(?i)\b(failed_login_attempts|password_(grace_time|l(ife_time|ock_time)|reuse_(max|time)|verify_function))\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>resource-parameters</string>
									<key>match</key>
									<string>(?i)\b(default|null|unlimited)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++restore)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-restore-point</string>
									<key>match</key>
									<string>(?i)\b(as|guarantee|of|p(oint|reserve)|scn|timestamp)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>create-restore-point</string>
									<key>match</key>
									<string>(?i)\b(database|flashback)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++role)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-role</string>
									<key>match</key>
									<string>(?i)\b(by|container|identified|not|using)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>create-fole</string>
									<key>match</key>
									<string>(?i)\b(all|current|externally|globally)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create(\s++public)?\s++rollback)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-rollback-segment</string>
									<key>match</key>
									<string>(?i)\b(segment|tablespace)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#storage-clause</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage-clause-parens</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#common-clause</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++schema)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-schema</string>
									<key>match</key>
									<string>(?i)\b(authorization)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#grant-statement</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#create-table</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#create-view</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?i)(?=\b(##create)\b)</string>
									<key>end</key>
									<string>(?i)(?=;|create)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#create-table</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#create-view</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#grant-statement</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++sequence)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-sequence</string>
									<key>match</key>
									<string>(?i)\b(by|c(ache|ycle)|global|increment|keep|m(axvalue|invalue)|no(c(ache|ycle)|keep|m(axvalue|invalue)|order)|order|s(ession|tart)|with)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++spfile)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-spfile</string>
									<key>match</key>
									<string>(?i)\b(from|memory|pfile)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create(\s++or\s++replace)?(\s++(editionable|noneditionable))?(\s++public)?\s++synonym)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-synonym</string>
									<key>match</key>
									<string>(?i)\b(for)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*(?=create(\s++global\s++temporary)?(\s++/\*\+.+?\*/)?\s++table\b)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#create-table</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create(\s++(bigfile|smallfile))?(\s++(temporary|undo))?\s++tablespace)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>permanent-tablespace-clause</string>
									<key>match</key>
									<string>(?i)\b(blocksize|d(atafile|efault)|e(ncryption|xtent)|force|logging|minimum|o(ffline|nline))\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#file-specification-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#size-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#logging-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>tablespace-encryption-spec</string>
									<key>match</key>
									<string>(?i)\b(using)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#table-compression</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#inmemory-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#storage-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#flashback-mode-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>temporary-tablespace-clause</string>
									<key>match</key>
									<string>(?i)\b(tempfile)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#tablespace-group-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#extent-management-clause</string>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>constant.language</string>
										</dict>
									</dict>
									<key>comment</key>
									<string>segment-management-clause</string>
									<key>match</key>
									<string>(?i)\b(segment|space|management(\s++(auto|manual))?)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>segment-management-clause</string>
									<key>match</key>
									<string>(?i)\b(auto|manual)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>undo-tablespace-clause</string>
									<key>match</key>
									<string>(?i)\b(datafile)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#tablespace-retention-clause</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage-clause-parens</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#common-clause</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(create\s++user)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>create-user</string>
									<key>match</key>
									<string>(?i)\b(a(ccount|s)|by|container|default|e(ditions|nable|x(pire|ternally))|globally|identified|lock|on|p(assword|rofile)|quota|t(ablespace|emporary)|unl(imited|ock))\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>constant-language</string>
									<key>match</key>
									<string>(?i)\b(all|current)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#size-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^(?=\s*+create(\s++or\s++replace)?((\s++no)?\s++force)?(\s++(edition(able|ing)|noneditionable){1,2})?\s++view\b)</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#create-view</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(create|or|replace)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#statement-include</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(comment)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.ddl.analyze</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>comment</string>
							<key>match</key>
							<string>(?i)\b(audit|column|edition|i(ndextype|s)|m(aterialized|ining|odel)|o(n|perator)|policy|table|view)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(?=(alter)\s++(?!s(ession|ystem)))</string>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.ddl.alter</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++audit)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(a(c(l|cess|tion(s)?)|d(d|minister|visor)|l(l|ter)|n(alize|y)|pply|rchive|ss(embly|ign|ociate)|ttribute|u(dit|thorization))|b(ackup|ecome|ody|uild)|c(all(back)?|hange|l(ass|uster)|o(m(m(ent|it)|ponent(s)?)|n(dition|nect|straints|text)|okie|st)|reate|ube)|d(ata((base)?|pump)|ba|e(bug|lete|queue|stroy)|i(ctionary|mension|rect(_load|ory)|s(a(ble|ssociate)|k))|rop|v)|e(dition|n(able|queue)|rror|val(uat(e|ion))?|x(e(cute|mpt)|p(lain|ort)|ternal))|f(a(ctor|ilure|lse)|ile|lashback|o(lder|rce)|u(ll|nction))|g(et|lobal|r(ant|roup))|i(dentity|mport|n(active|dex(es|type)?|s(ert|tance)))|j(ava|o(b|in))|key|l(abel|evel|i(brary|nk)|o(ad|ck|go(ff|n)))|m(a(nage(ment|r)|terialized)|e(asure|thod)|ining|odel)|n(amespace|eg|o(audit|tification)|ull)|o(bject|id|ls|n|perator|utline)|p(a(ckage|ssword)|er|file|luggagle|o(int|licy)|r(ivilege(d|s)?|o(ce(dure|ss)|file|gram|xy))|u(blic|rge))|que(ry|ue)|r(e(a(d|lm)|cyclebin|fresh|move|name|s(ource|t(ore|ricted)|umable)|voke|write)|ol(e(s(et)?)?|lback)|ule)|s(avepoint|che(duler|ma)|e(curity|g(ment)?|lect|quence|ssion|t)|pfile|ql|tat(ement|istics)|u(bscribe|ccess|mmary)|witch|y(nonym|s(dba|oper|tem)))|t(able(space)?|emplate|imeout|r(a(cing|nsaction)|igger|u(ncate|st))|uning|type)|u(n(d(er|rop)|limited|suscribe)|p(date|sert)|ser)|v(alidate|erifier|i(ew|olation))|xs|zonemap)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++cluster)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#physical-attributes-clause</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(?i)\b(cache|modify|nocache|partition|size)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#size-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#allocate-extent-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#parallel-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#deallocate-unused-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)\b(alter\s++database)(?!\s++link)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(a(bort|ctivate|ll(ow)?|pply|rchive(d|log)|s|utomatic|vailability)|b(ackup|egin|igfile|lock(size)?)|c(a(ching|ncel)|hange|l(ear|one)|o(mmit|n(sistent|t(inue|rolfile)|vert)|rruption))|d(atabase|efault|is(able|connect)|owngrade)|e(dition|n(able|d))|f(a(il(ed|over)|r)|inish|lashback|or(ce|eign)|rom|ull)|g(lobal_name|roup|uard)|i(dentity|mmediate|n(itial|stance))|ke(ep|y)|log(file(s)?|ging|ical)|m(a(n(aged|ual)|ximize)|ember|ount)|n(o(archivelog|delay|ne|resetlogs|wait)?)|o(nly|pen|r)|p(erformance|hysical|r(epare|imary|otection))|re(ad|cover|gister|place|setlogs|use)|s(e(ssion|t)|hutdown|ize|kip|mallfile|napshot|t(a(ndby|rt)|op)|witch(over)?|ync)|t(ablespace|e(mporary|st)|hread|ime(_zone)?|o|ra(c(e|king)|nsaction))|u(n(archived|ique|recoverable|til)|pgrade|sing)|verify|w(ait|ith(out)?|rite))\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#parallel-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#size-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#file-specification-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#database-file-clauses</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#supplemental-db-logging-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter(\s++(public|shared)){0,2}\s++(database\s++link))\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(authenticated|by|connect|identified|to)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#identifier</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++dimension)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(a(dd|ttribute)|c(ascade|olumn)|d(etermines|rop)|hierarchy|is|level|null|restrict|skip|when)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>(?i)\b(child|join|key|of|references)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#expression</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#identifier</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++diskgroup)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(a(dd|fter|l(ias|l)|ttribute(s)|uto)|c(ascade|heck)|d(i(rectory|s(able|k(s)?|mount))|rop)|enable|f(ailgroup|ile|or(ce)?)|group|in|low|m(ax|ember|o(dify|unt(path)?))|n(ame|o(force|r(epair|mal)|wait))|o((ff|n)line|ther|wner)|p(ermission|ower)|quorum|re(balance|gular|name|p(air|lace)|s(ize|tricted))|s(crub|ize|_tripe(columns|width))|t(emplate|o)|u(ndrop|s(age|er(group)?))|volume|w(ait|ith))\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>(?i)\b(co(arse|ld)|fine|h(igh|ot)|mirror(cold|hot)|unprotected)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#expression</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#size-clause</string>
								</dict>
								<dict>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>constant.numeric</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
									</dict>
									<key>match</key>
									<string>\b(\d++)\s*+(H)\b</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++flashback)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(a(dd|ll|rchive)|before|d(a(ta|y)|efault)|mo(dify|nth)|no|optimize|purge|quota|re(move|tention)|s(cn|et)|t(ablespace|imestamp)|year)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#size-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#literal</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#identifier</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++(function|library|procedure))\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(compile|debug|editionable|noneditionable|reuse|settings)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++index)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(a(d(d|vanced)|t(tributes)?)|block|c(ascade|leanup|o(alesce|mp(act|ile|ress)))|d(e(allocate|fault)|isable|rop)|enable|f(or|ull)|in(dexing|to|visible)|keep|low|mo(dify|nitoring)|no(compress|monitoring|reverse)|online|par(ameters|ti(al|tion))|re(build|name|ferences|verse)|s(hirnk|p(ace|lit)|ubpartition)|t(ablespace|o)|u(nus(able|ed)|pdate|sage)|visible)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#allocate-extent-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#parallel-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#physical-attributes-clause</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>(?i)\b(advanced|compress|low|par(ameters|tition)|nocompress|tablespace|u(nu)?sable)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#physical-attributes-clause</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#logging-clause</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#common-clause</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++indextype)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(a(dd|rray)|compile|d(ml|rop)|local|managed|partition|range|s(torage|ystem)|tables|us(er|ing)|with(out)?)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#common-clause</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++java)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(authid|c(lass|ompile|urrent_user)|definer|resolve(r?)|source)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>begin</key>
											<string>\(</string>
											<key>captures</key>
											<dict>
												<key>0</key>
												<dict>
													<key>name</key>
													<string>keyword.other.delimiter</string>
												</dict>
											</dict>
											<key>end</key>
											<string>\)</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#string</string>
												</dict>
												<dict>
													<key>include</key>
													<string>#common-clause</string>
												</dict>
											</array>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++materialized\s++view)(?!\s++log)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#physical-attributes-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#parallel-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#logging-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#allocate-extent-clause-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#deallocate-unused-clause</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(?i)\b(a(d(d|vanced)|ll|rchive|s|uto)|b(asic(file)?|e(fore|ginning)|y)|c(apacity|o(alesce|lumn|m(mit|p(lete|ress))|nstraints)|ritical|urrent)|d(e(fault|mand)|is(able|tribute)|ml|uplicate)|e(dition|n(able|forced)|valuate)|f(ast|or(ce)?)|high|i(n(cluding|memory)|s)|key|l(evel|o(b|cking|w))|m(aster|e(dium|mcompress)|odify)|n(ext|o(ne)?|ull)|o(n|verflow)|p(artition|ctthreshold|ri(mary|ority))|query|r(ange|e(fresh|write)|o(llback|w(id)?))|s(coped|e(curefile|gment)|t(art|ore)|ubpartition)|trusted|u(nusable|sing)|with)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>(?i)\b(c(ache|hunk)|d(ecrypt|isable)|en(able|crypt)|freepools|in|nocache|p(artition|ctversion)|re(ads|build)|storage|row|tablespace)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#logging-clause</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#storage-clause</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#allocate-extent-clause-clause</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#deallocate-unused-clause</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#common-clause</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++materialized\s++view\s++log)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(a(dd|synchronous)|cache|excluding|f(ast|or(ce)?)|i(d|mmediate|n(cluding|terval))|key|move|n(e(w|xt)|ocache)|o(bject|n)|p(urge|rimary)|r(e(fresh|peat)|owid)|s(equence|tart|ynchronous)|using|values|with)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#physical-attributes-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#parallel-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#logging-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#allocate-extent-clause-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#deallocate-unused-clause</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#common-clause</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++materialized\s++zonemap)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(c(ache|om(mit|p(ile|lete)))|d(ata|emand|isable)|enable|f(ast|orce)|load|movement|nocache|on|p(ct(free|used)|runing)|re(build|fresh)|unusable)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++operator)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(a(dd|ncillary)|binding|co(ntext|mp(ile|ute))|d(ata|rop)|force|index|return|scan|to|using|with)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#common-clause</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++outline)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(c(ategory|hange)|enable|disable|p(rivate|ublic)|re(build|name)|to)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++(package))\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(body|compile|debug|editionable|noneditionable|package|reuse|s(ettings|pecification))\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++pluggable)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(a(ll|utomatic)|b(ackup|egin|igfile)|c(lose|ontinue)|d(ata(base|file)|efault|is(able|card))|e(dition|n(able|d)|xcept)|f(orce|rom)|global_name|i(mmediate|n(stances|to))|logfile|norelocate|o(ffline|nl(ine|y)|pen)|re(ad|cover(y)?|locate|name|s(etlogs|tricted))|s(ave|et|mallfile|t(ate|orage))|t(ablespace|emporary|ime_zone|o)|u(n(limited|plug)|pgrade)|write)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#logging-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#database-file-clauses</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#supplemental-db-logging-clause</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>captures</key>
									<dict>
										<key>0</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>(?i)\b(max(size|_shared_temp_size)|unlimited)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#size-clause</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#common-clause</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++profile)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(c(o(mposite_limit|n(nect_time|tainer))|pu_per_(call|session))|failed_login_attempts|idle_time|l(imit|ogical_reads_per_(call|session))|p(assword_(grace_time|l(ife_time|ock_time)|reuse_(max|time)|verify_function)|rivate_sga)|sessions_per_user)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(?i)\b(all|current|default|unlimited)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++resource)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(c(o(nnect_time|st)|pu_per_session)|logical_reads_per_session|private_sga)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#literal</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++role)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(by|container|externally|gobally|identified|not|using)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(?i)\b(all|current)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++rollback)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(s(egment|hrink)|to)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(?i)\b(o(ff|n)line)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#storage-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#size-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#identifier</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++sequence)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(c(ache|ycle)|global|increment\s+by|keep|m(ax|in)value|no(c(ache|ycle)|keep|m((ax|in)value)|order)|order|session)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter(\s+public)?\s++synonym)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(compile)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(?i)\b(editionable|noneditionable)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#alter-table</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++tablespace)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>begin</key>
									<string>(?i)\b(storage)(?=\s*+\()</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?&lt;=\))</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>begin</key>
											<string>(\()</string>
											<key>captures</key>
											<dict>
												<key>1</key>
												<dict>
													<key>name</key>
													<string>keyword.other.delimiter</string>
												</dict>
											</dict>
											<key>end</key>
											<string>(\))</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>include</key>
													<string>#storage-clause-parens</string>
												</dict>
												<dict>
													<key>include</key>
													<string>#common-clause</string>
												</dict>
											</array>
										</dict>
									</array>
								</dict>
								<dict>
									<key>begin</key>
									<string>(\()</string>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(\))</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage-clause-parens</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#common-clause</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>comment</key>
									<string>alter-tablespace</string>
									<key>match</key>
									<string>(?i)\b(b(ackup|egin)|coalesce|default|e(nd|xtent)|keep|minimum|re(name|size)|s(pace|hrink)|to)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#table-compression</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#inmemory-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#storage-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>datafile-temp-clauses</string>
									<key>match</key>
									<string>(?i)\b(add|d(atafile|rop)|keep|o(ffline|nline)|rename|srhink|t(empfile|o))\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#file-specification-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>tablespace-logging-clauses</string>
									<key>match</key>
									<string>(?i)\b(force|logging|no)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#logging-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#tablespace-group-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>tablespace-state-clauses</string>
									<key>match</key>
									<string>(?i)\b(immediate|normal|o(nl(ine|y)|ffline)|permanent|read|temporary|write)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#autoextend-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#maxsize-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#flashback-mode-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#tablespace-retention-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++(trigger))\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(compile|d(ebug|isable)|e(ditionable|nable)|noneditionable|re(name|use)|settings|to)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++type)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>alter-type</string>
									<key>match</key>
									<string>(?i)\b(editionable|noneditionable)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>alter-type-clause</string>
									<key>match</key>
									<string>(?i)\b(final|instatiable|not|reset)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>type-compile-clause</string>
									<key>match</key>
									<string>(?i)\b(body|debug|compile|reuse|s(ettings|pecification))\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>type-replace-clause</string>
									<key>match</key>
									<string>(?i)\b(as|object|replace)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>invoker-rights-clause</string>
									<key>match</key>
									<string>(?i)\b(authid|current_user|definer)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>accesible-by-clause</string>
									<key>match</key>
									<string>(?i)\b(accessible|by)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(?i)\b(deterministic|parallel_enable)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?i)\b(constructor)\b</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?i)\b(return\s++(self)\s++as\s++result)\b</string>
									<key>endCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<key>2</key>
										<dict>
											<key>name</key>
											<string>support.variable</string>
										</dict>
									</dict>
									<key>patterns</key>
									<array>
										<dict>
											<key>match</key>
											<string>(?i)\b(function)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#parameter-definition</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?i)\b(object)(?=\s*+\()</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?&lt;=\))</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>begin</key>
											<string>(\()</string>
											<key>captures</key>
											<dict>
												<key>1</key>
												<dict>
													<key>name</key>
													<string>keyword.other.delimiter</string>
												</dict>
											</dict>
											<key>end</key>
											<string>(\))</string>
											<key>patterns</key>
											<array>
												<dict>
													<key>begin</key>
													<string>(?i)\b(member|static)\b</string>
													<key>beginCaptures</key>
													<dict>
														<key>1</key>
														<dict>
															<key>name</key>
															<string>keyword.other</string>
														</dict>
													</dict>
													<key>end</key>
													<string>(?=,|\))</string>
													<key>patterns</key>
													<array>
														<dict>
															<key>include</key>
															<string>#parameter-definition</string>
														</dict>
														<dict>
															<key>match</key>
															<string>(?i)\b(a(gent|s)|c(ontext)?|external|function|in|java|l(anguage|ibrary)|name|p(arameters|rocedure)|return|variable|with)\b</string>
															<key>name</key>
															<string>keyword.other</string>
														</dict>
														<dict>
															<key>include</key>
															<string>#storage</string>
														</dict>
														<dict>
															<key>include</key>
															<string>#expression</string>
														</dict>
													</array>
												</dict>
												<dict>
													<key>begin</key>
													<string>(?i)\b(constructor)\b</string>
													<key>beginCaptures</key>
													<dict>
														<key>1</key>
														<dict>
															<key>name</key>
															<string>keyword.other</string>
														</dict>
													</dict>
													<key>end</key>
													<string>(?=,|\))</string>
													<key>patterns</key>
													<array>
														<dict>
															<key>include</key>
															<string>#parameter-definition</string>
														</dict>
														<dict>
															<key>match</key>
															<string>(?i)\b(a(gent|s)|c(ontext)?|external|function|in|java|l(anguage|ibrary)|name|p(arameters|rocedure)|re(sult|turn)|variable|with)\b</string>
															<key>name</key>
															<string>keyword.other</string>
														</dict>
														<dict>
															<key>match</key>
															<string>(?i)\b(self)\b</string>
															<key>name</key>
															<string>support.variable</string>
														</dict>
														<dict>
															<key>include</key>
															<string>#storage</string>
														</dict>
														<dict>
															<key>include</key>
															<string>#expression</string>
														</dict>
													</array>
												</dict>
												<dict>
													<key>include</key>
													<string>#storage</string>
												</dict>
												<dict>
													<key>comment</key>
													<string>inheritance-clauses</string>
													<key>match</key>
													<string>(?i)\b(not|final|instatiable|overriding)\b</string>
													<key>name</key>
													<string>keyword.other</string>
												</dict>
												<dict>
													<key>comment</key>
													<string>map-order-function-spec</string>
													<key>match</key>
													<string>(?i)\b(map|order)\b</string>
													<key>name</key>
													<string>keyword.other</string>
												</dict>
												<dict>
													<key>comment</key>
													<string>pragma-clause</string>
													<key>match</key>
													<string>(?i)\b(pragma)\b</string>
													<key>name</key>
													<string>keyword.other</string>
												</dict>
												<dict>
													<key>begin</key>
													<string>(?i)\b(restric_references)(?=\s*+\()</string>
													<key>beginCaptures</key>
													<dict>
														<key>1</key>
														<dict>
															<key>name</key>
															<string>keyword.other</string>
														</dict>
													</dict>
													<key>end</key>
													<string>(?&lt;=\))</string>
													<key>patterns</key>
													<array>
														<dict>
															<key>begin</key>
															<string>(\()</string>
															<key>captures</key>
															<dict>
																<key>1</key>
																<dict>
																	<key>name</key>
																	<string>keyword.other.delimiter</string>
																</dict>
															</dict>
															<key>end</key>
															<string>(\))</string>
															<key>patterns</key>
															<array>
																<dict>
																	<key>comment</key>
																	<string>pragma-clause</string>
																	<key>match</key>
																	<string>(?i)\b(default|rn(dp|)s|trust|wn(d|p)s)\b</string>
																	<key>name</key>
																	<string>keyword.other</string>
																</dict>
																<dict>
																	<key>include</key>
																	<string>#common-expression</string>
																</dict>
															</array>
														</dict>
													</array>
												</dict>
												<dict>
													<key>include</key>
													<string>#common-clause</string>
												</dict>
											</array>
										</dict>
									</array>
								</dict>
								<dict>
									<key>begin</key>
									<string>(?i)\b(member|static)\b</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(?i)(?=,|;|invalidate|cascade)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#parameter-definition</string>
										</dict>
										<dict>
											<key>match</key>
											<string>(?i)\b(a(gent|s)|c(ontext)?|deterministic|external|function|in|java|l(anguage|ibrary)|name|p(ara(llel_enable|meters)|rocedure)|return|variable|with)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#storage</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#expression</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>begin</key>
									<string>(\()</string>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(\))</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#storage</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#expression</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>comment</key>
									<string>alter-method-spec</string>
									<key>match</key>
									<string>(?i)\b(add|drop)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>alter-attribute-definition</string>
									<key>match</key>
									<string>(?i)\b(attribute|add|drop|modify)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>dependent-handling-clause</string>
									<key>match</key>
									<string>(?i)\b(c(ascade|onvert)|data|force|in(cluding|validate)|not|substitutable|t(able|o))\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>alter-collections-clauses</string>
									<key>match</key>
									<string>(?i)\b(element|limit|modify|type)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#exceptions-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#storage</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++user)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>alter-user</string>
									<key>match</key>
									<string>(?i)\b(a(ccount|ll|s)|by|c(ontainer|urrent)|default|e(ditions|nable|x(cept|pire|ternally))|for(ce)?|globally|identified|lock|none|on|p(assword|rofile)|quota|r(eplace|ole)|t(ablespace|emporary)|unl(imited|ock))\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#size-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>proxy-clause</string>
									<key>match</key>
									<string>(?i)\b(connect|enterprise|grant|revoke|through|users)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>db-user-proxy-clauses</string>
									<key>match</key>
									<string>(?i)\b(a(ll|uthentication)|except|no|r(equired|ole(s)?)|with)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>container-data-clause</string>
									<key>match</key>
									<string>(?i)\b(a(dd|ll)|container_data|default|for|remove|set)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>authenticated-using-clause</string>
									<key>match</key>
									<string>(?i)\b(authenticated|using)\b</string>
									<key>name</key>
									<string>invalid.deprecated</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(alter\s++view)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>alter-view</string>
									<key>match</key>
									<string>(?i)\b(add|co(mpile|nstraint)|editionable|key|drop|modify|no(neditionable|rely)|only|primary|re(ad|ly)|unique|write)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#out-of-line-constraint</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(?=(drop)\s)</string>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.ddl.drop</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?i)(drop\s++(audit|context|d(atabase|i(mension|rectory))|f(lashback|unction)|library|o(perator|utline)|p(ackage|ro(cedure|file)|ublic)|r(estore|ol(e|lback))|s(equence|synonym)|t(able(space)?|rigger|ype)|user|view))\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>drop-audit-policy</string>
									<key>match</key>
									<string>(?i)\b(policy)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>drop-database-link</string>
									<key>match</key>
									<string>(?i)\b(database|link)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>drop-flashback-archive</string>
									<key>match</key>
									<string>(?i)\b(archive)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>drop-operator</string>
									<key>match</key>
									<string>(?i)\b(force)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>drop-package</string>
									<key>match</key>
									<string>(?i)\b(body)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>drop-profile</string>
									<key>match</key>
									<string>(?i)\b(cascade)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>drop-restore-point</string>
									<key>match</key>
									<string>(?i)\b(point)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>drop-rollback-segment</string>
									<key>match</key>
									<string>(?i)\b(segment)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>drop-table</string>
									<key>match</key>
									<string>(?i)\b(c(ascade|onstraints)|purge)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>drop-tablespace</string>
									<key>match</key>
									<string>(?i)\b(and|c(ascade|on(straints|tents))|datafiles|including|keep)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>drop-type</string>
									<key>match</key>
									<string>(?i)\b(body|force|validate)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>drop-user</string>
									<key>match</key>
									<string>(?i)\b(cascade)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>drop-user</string>
									<key>match</key>
									<string>(?i)\b(c(ascade|onstraints))\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(drop\s++cluster)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>drop-cluster</string>
									<key>match</key>
									<string>(?i)\b(c(ascade|onstraints)|including|tables)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(drop\s++diskgroup)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>drop-diskgroup</string>
									<key>match</key>
									<string>(?i)\b(contents|excluding|force|including)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(drop\s++edition)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>drop-edition</string>
									<key>match</key>
									<string>(?i)\b(cascade)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(drop\s++index)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>drop-index</string>
									<key>match</key>
									<string>(?i)\b(force|online)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#identifier</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(drop\s++indextype)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>drop-indextype</string>
									<key>match</key>
									<string>(?i)\b(force)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#identifier</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(drop\s++java)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>drop-indextype</string>
									<key>match</key>
									<string>(?i)\b(class|resource|source)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(drop\s++materialized)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>drop-materialized-view</string>
									<key>match</key>
									<string>(?i)\b(reserve|table|view)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>drop-materialized-view-log</string>
									<key>match</key>
									<string>(?i)\b(log|on|view)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>drop-materialized-zonemap</string>
									<key>match</key>
									<string>(?i)\b(zonemap)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)^\s*+(drop\s++pluggable)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>drop-pluggable-database</string>
									<key>match</key>
									<string>(?i)\b(data(base|files)|keep|including)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
						<dict>
							<key>match</key>
							<string>.</string>
							<key>name</key>
							<string>markup.changed</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(flashback)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.ddl.flashback</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>flashback-database</string>
							<key>match</key>
							<string>(?i)\b(before|database|point|res(etlogs|tore)|s(cn|tandby)|t(imestamp|o))\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>flashback-table</string>
							<key>match</key>
							<string>(?i)\b(before|d(isable|rop)|enable|point|re(name|store)|scn|t(able|imestamp|o|riggers))\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^(?=\s*+grant\b)</string>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.ddl.grant</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#grant-statement</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(noaudit)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.ddl.noaudit</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>noaudit</string>
							<key>match</key>
							<string>(?i)\b(container|direct_path|load|n(etwork|ot)|successful|whenever)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>noaudit</string>
							<key>match</key>
							<string>(?i)(?&lt;==)\s*+(all|current)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#audit-operation-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#auditing-by-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#audit-schema-object-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#auditing-on-clause</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>noaudit-unified</string>
							<key>match</key>
							<string>(?i)\b(attributes|by|context|namespace|policy)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(purge)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.ddl.purge</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>purge</string>
							<key>match</key>
							<string>(?i)\b(dba_recyclebin|index|recyclebin|table(space)?|user)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#identifier</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(rename)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.ddl.rename</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>rename</string>
							<key>match</key>
							<string>(?i)\b(to)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#identifier</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(revoke)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.ddl.revoke</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>revoke</string>
							<key>match</key>
							<string>(?i)\b(container)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>revoke</string>
							<key>match</key>
							<string>(?i)\b(all|current)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>revoke-system-privileges</string>
							<key>match</key>
							<string>(?i)\b(all|from|privileges)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#system-privileges</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>revokee-clause</string>
							<key>match</key>
							<string>(?i)\b(public)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>revoke-object-privileges</string>
							<key>match</key>
							<string>(?i)\b(all|c(ascade|onstraints)|from|privileges)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#on-object-clause</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>revokee-roles-from-programs</string>
							<key>match</key>
							<string>(?i)\b(all|from)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#program-unit</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(truncate\s++cluster)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.ddl.truncate</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>truncate-cluster</string>
							<key>match</key>
							<string>(?i)\b(drop|reuse|storage)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(truncate\s++table)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.ddl.truncate</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>truncate-table</string>
							<key>match</key>
							<string>(?i)\b(all|cascade|drop|log|materialized|p(reserve|urge)|reuse|storage|view)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#common-clause</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>statement-dml</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=(?i)\s*+(update|delete|insert)\s)</string>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/\s*+$))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.oracle.sql.dml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?i)\s*(delete)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>name</key>
							<string>meta.statement.dml.delete</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#hint</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>delete</string>
									<key>match</key>
									<string>(?i)\b(from|only)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#partition-extension-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#table-collection-expression</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#returning-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>where-clause</string>
									<key>match</key>
									<string>(?i)\b(where)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#returning-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#error-logging-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)\s*(insert)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>name</key>
							<string>meta.statement.dml.insert</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#hint</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>insert</string>
									<key>match</key>
									<string>(?i)\b(from|only)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>insert-into-clause</string>
									<key>match</key>
									<string>(?i)\b(into)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>values-clause</string>
									<key>match</key>
									<string>(?i)\b(values)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#partition-extension-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#table-collection-expression</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#returning-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#error-logging-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#statement-dml-select</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>multitable-insert</string>
									<key>match</key>
									<string>(?i)\b(all)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>conditional-insert-clause</string>
									<key>match</key>
									<string>(?i)\b(all|else|first|then|when)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)\s*(update)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
							</dict>
							<key>end</key>
							<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
							<key>name</key>
							<string>meta.statement.dml.update</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#hint</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>update</string>
									<key>match</key>
									<string>(?i)\b(only)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#partition-extension-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#table-collection-expression</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#returning-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>where-clause</string>
									<key>match</key>
									<string>(?i)\b(where)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#returning-clause</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#error-logging-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>update-set-clause</string>
									<key>match</key>
									<string>(?i)\b(set|value)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>plsql-extension</string>
									<key>match</key>
									<string>(?i)(\b(current\s++of\b|row\s*(?==)))</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(call)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.dml.call</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>call</string>
							<key>match</key>
							<string>(?i)\b(in(dicator|to))\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(merge)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.dml.merge</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>merge</string>
							<key>match</key>
							<string>(?i)\b(into|on|using)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>merge-update-clause</string>
							<key>match</key>
							<string>(?i)\b(delete|matched|set|then|update|when)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>where-clause</string>
							<key>match</key>
							<string>(?i)\b(where)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>merge-update-clause</string>
							<key>match</key>
							<string>(?i)\b(default)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>merge-insert-clause</string>
							<key>match</key>
							<string>(?i)\b(insert|matched|not|then|values|when)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#logging-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(explain)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.dml.explain</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>explain-plan</string>
							<key>match</key>
							<string>(?i)\b(for|into|plan|s(et|tatement_id))\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#statement-dml-select</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#statement-dml</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)^\s*(lock)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>end</key>
					<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
					<key>name</key>
					<string>meta.statement.dml.lock-table</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>comment</key>
							<string>lock-table</string>
							<key>match</key>
							<string>(?i)\b(in|mode|nowait|table|wait)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>lock-mode</string>
							<key>match</key>
							<string>(?i)\b(exclusive|row|share|update)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#partition-extension-clause</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>statement-dml-select</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?i)(?&lt;!timestamp )\b(with)(?!\s++(check|read|object))\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=(?i)^\s*(select)\b)</string>
					<key>name</key>
					<string>meta.section.with</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#hint</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.oracle.plsql</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>subquery-factoring-clause</string>
							<key>match</key>
							<string>(?i)\b(as)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>search-clause</string>
							<key>match</key>
							<string>(?i)\b(by|first|nulls|se(arch|t))\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>search-clause</string>
							<key>match</key>
							<string>(?i)\b(asc|breadth|de(pth|sc)|first|last)\b</string>
							<key>name</key>
							<string>constant.language</string>
						</dict>
						<dict>
							<key>comment</key>
							<string>cycle-clause</string>
							<key>match</key>
							<string>(?i)\b(cycle|default|set|to)\b</string>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(?=(select)\s)</string>
					<key>end</key>
					<string>(?=(\]\]&gt;|;|\)))|(((?=^\s*+/\s*+$))|(?=^(\.)?\s*+$))|(?i)(?&lt;!multiset)(?=(\s++|^\s*+)(grant|intersect|log\s++errors|minus|union|with(\s++(check|read)))\b)</string>
					<key>name</key>
					<string>meta.statement.dml.select</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?i)\b(select)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=(;|\)|\]\]&gt;))|((?=^\s*+/\s*+$))|(?=^(\.)?\s*+$)|(?i)\b(?=(from)\s)</string>
							<key>name</key>
							<string>meta.section.select</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#hint</string>
								</dict>
								<dict>
									<key>match</key>
									<string>(?i)\b(all|distinct|unique)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>select-list</string>
									<key>match</key>
									<string>(?i)\b(as)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>plsql-extension</string>
									<key>match</key>
									<string>(?i)\b(bulk|collect|into)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#variable-other-bind-oracle-sqlplus</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)\b(from)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=(;|\)|\]\]&gt;))|(?i)\b(?=(for|where|gr(ant|oup)|log\s++errors|order|model|with(\s++(check|read)))\s)|(((?=^\s*+/\s*+$))|(?=^\s*+$))|(?i)(?&lt;!multiset)(?=((^)?\s*+)\b(grant|intersect|log\s++errors|minus|union|with(\s++(check|read)))\b)</string>
							<key>name</key>
							<string>meta.section.from</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>(?i)\b(dual)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>table-reference</string>
									<key>match</key>
									<string>(?i)\b(only)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>flashback-query-clause</string>
									<key>match</key>
									<string>(?i)\b(a(nd|s)|between|for|of|period|scn|m(axvalue|invalue)|timestamp|versions)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>pivot-clause</string>
									<key>match</key>
									<string>(?i)\b(pivot|xml)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>pivot-for-clause</string>
									<key>match</key>
									<string>(?i)\b(for)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>pivot-in-clause</string>
									<key>match</key>
									<string>(?i)\b(in)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>unpivot-clause</string>
									<key>match</key>
									<string>(?i)\b(exclude|include|nulls|unpivot)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>row-pattern-clause</string>
									<key>match</key>
									<string>(?i)\b(match_recognize)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>containers-clause</string>
									<key>match</key>
									<string>(?i)\b(containers)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>inner-cross-join-clause</string>
									<key>match</key>
									<string>(?i)\b(cross|inner|join|natural|on|using)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>outer-join-clause</string>
									<key>match</key>
									<string>(?i)\b(join|natural|on|using)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>outer-join-type</string>
									<key>match</key>
									<string>(?i)\b(outer)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>outer-join-type</string>
									<key>match</key>
									<string>(?i)\b(full|left|right)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>query-partition-clause</string>
									<key>match</key>
									<string>(?i)\b(by|partition)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>query-partition-clause</string>
									<key>match</key>
									<string>(?i)\b(join|outer|type)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>cross-outer-apply-clause</string>
									<key>match</key>
									<string>(?i)\b(apply|cross|outer)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#query-table-expression</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>(\()</string>
									<key>captures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>(\))</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#query-table-expression</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>match-recognize</string>
											<key>match</key>
											<string>(?i)\b(define|pattern)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>pivot-in-clause</string>
											<key>match</key>
											<string>(?i)\b(a(ny|s))\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#statement-dml-select</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>unpivot-in-clause</string>
											<key>match</key>
											<string>(?i)\b(as)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>row-pattern-partition-id</string>
											<key>match</key>
											<string>(?i)\b(by|partition)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>row-pattern-order-by</string>
											<key>match</key>
											<string>(?i)\b(by|order)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>row-pattern-measures</string>
											<key>match</key>
											<string>(?i)\b(measures)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>row-pattern-measure-column</string>
											<key>match</key>
											<string>(?i)\b(as)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>row-pattern-rows-per-match</string>
											<key>match</key>
											<string>(?i)\b(all|match|one|per|row(s)?)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>row-pattern-skip-to</string>
											<key>match</key>
											<string>(?i)\b(after|first|last|match|next|past|row|skip|to)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>row-pattern-permute</string>
											<key>match</key>
											<string>(?i)\b(permute)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>row-pattern-subset-clauses</string>
											<key>match</key>
											<string>(?i)\b(subset)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>row-pattern-classifier-func</string>
											<key>match</key>
											<string>(?i)\b(classifier)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>row-pattern-match-num-func</string>
											<key>match</key>
											<string>(?i)\b(match|number)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>row-pattern-nav-logical</string>
											<key>match</key>
											<string>(?i)\b(fi(nal|rst)|last|running)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>row-pattern-nav-physical</string>
											<key>match</key>
											<string>(?i)\b(next|prev)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>row-pattern-nav-compound</string>
											<key>match</key>
											<string>(?i)\b(next|prev)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>comment</key>
											<string>row-pattern-aggregate-func</string>
											<key>match</key>
											<string>(?i)\b(final|running)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#expression</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#condition</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)\b(where)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=(\]\]&gt;|;|\)))|(?i)\b(?=(for|gr(ant|oup)|log\s++errors|model|order|with(\s++(check|read)))\s)|(((?=^\s*+/\s*+$))|(?=^\s*+$))|(?i)(?&lt;!multiset)(?=(\s++|^\s*+)(grant|intersect|log\s++errors|minus|union)\b)</string>
							<key>name</key>
							<string>meta.section.where</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#condition</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)\b(group)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=(;|\)|\]\]&gt;))|(?i)\b(?=(order|model)\s)|(((?=^\s*+/\s*+$))|(?=^(\.)?\s*+$))|(?i)(?&lt;!multiset)(?=(\s++|^\s*+)(intersect|minus|union)\b)</string>
							<key>name</key>
							<string>meta.section.group_by</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>group-by</string>
									<key>match</key>
									<string>(?i)\b(by|having)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#rollup-cube-clause</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>grouping-sets-clause</string>
									<key>match</key>
									<string>(?i)\b(grouping|sets)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#rollup-cube-clause</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#statement-dml-select</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#subquery-restriction-clause</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#expression</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)\b(model)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=(;|\)|\]\]&gt;))|(?i)\b(?=(fetch|offset)\s)|(((?=^\s*+/\s*+$))|(?=^(\.)?\s*+$))|(?i)(?&lt;!multiset)(?=(\s++|^\s*+)(intersect|minus|union)\b)</string>
							<key>name</key>
							<string>meta.section.group_by</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>cell-reference-options</string>
									<key>match</key>
									<string>(?i)\b(dimension|ignore|keep|nav|reference|single|unique)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>return-rows-clause</string>
									<key>match</key>
									<string>(?i)\b(r(eturn|ows))\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>return-rows-clause</string>
									<key>match</key>
									<string>(?i)\b(all|updated)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>reference-model</string>
									<key>match</key>
									<string>(?i)\b(on|reference)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>model-column-clauses</string>
									<key>match</key>
									<string>(?i)\b(by|dimension|measures|partition)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>main-model</string>
									<key>match</key>
									<string>(?i)\b(main)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>model-rules-clause</string>
									<key>match</key>
									<string>(?i)\b(a(ll|utomatic)|order|rules|sequential|up(date|sert))\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>model-iterate-clause</string>
									<key>match</key>
									<string>(?i)\b(iterate|until)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>begin</key>
									<string>\(</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\)</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>include</key>
											<string>#statement-dml-select</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#expression</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>begin</key>
									<string>\[</string>
									<key>beginCaptures</key>
									<dict>
										<key>1</key>
										<dict>
											<key>name</key>
											<string>keyword.other.delimiter</string>
										</dict>
									</dict>
									<key>end</key>
									<string>\]</string>
									<key>patterns</key>
									<array>
										<dict>
											<key>comment</key>
											<string>single-column-for-loop</string>
											<key>match</key>
											<string>(?i)\b(decrement|f(or|rom)|in(crement)|like|to)\b</string>
											<key>name</key>
											<string>keyword.other</string>
										</dict>
										<dict>
											<key>include</key>
											<string>#expression</string>
										</dict>
									</array>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)\b(order)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?=(;|\)|\]\]&gt;))|(?i)\b(?=(for|fetch|offset)\s)|(((?=^\s*+/\s*+$))|(?=^(\.)?\s*+$))|(?i)(?&lt;!multiset)(?=(\s++|^\s*+)(intersect|minus|union)\b)</string>
							<key>name</key>
							<string>meta.section.order_by</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>order-by-clause</string>
									<key>match</key>
									<string>(?i)\b(by)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>order-by-clause</string>
									<key>match</key>
									<string>(?i)\b(asc|desc|siblings)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)\b(for)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?i)((?=;|\))|((?=^\s*+/\s*+$))|(?=^(\.)?\s*+$))</string>
							<key>name</key>
							<string>meta.section.for-update</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>for-update-clause</string>
									<key>match</key>
									<string>(?i)\b(locked|nowait|of|skip|update|wait)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>order-by-clause</string>
									<key>match</key>
									<string>(?i)\b(asc|desc|siblings)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#expression</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)\b(with\s++(check|read))\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?i)((?=;|\))|((?=^\s*+/\s*+$))|(?=^(\.)?\s*+$))</string>
							<key>name</key>
							<string>meta.section.subquery-restriction</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>subquery-restriction-clause</string>
									<key>match</key>
									<string>(?i)\b(constraint|o(nly|ption))\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#dentifier</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?i)\b(fetch|offset)\b</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>keyword.operator</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(?i)((?=;|\))|((?=^\s*+/\s*+$))|(?=^(\.)?\s*+$))|(?i)(?&lt;!multiset)(?=(\s++|^\s*+)(intersect|minus|union)\b)</string>
							<key>name</key>
							<string>meta.section.row-limiting</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>comment</key>
									<string>row-limiting-clause</string>
									<key>match</key>
									<string>(?i)\b(f(etch|irst)|next|o(nly|ffset)|percent|row(s)?|ties|with)\b</string>
									<key>name</key>
									<string>keyword.other</string>
								</dict>
								<dict>
									<key>comment</key>
									<string>order-by-clause</string>
									<key>match</key>
									<string>(?i)\b(asc|desc|siblings)\b</string>
									<key>name</key>
									<string>constant.language</string>
								</dict>
								<dict>
									<key>include</key>
									<string>#common-clause</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#select-include</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?i)(?&lt;!multiset)(?=(\s++|^\s*+)(intersect|minus|union)\b)</string>
					<key>end</key>
					<string>(?i)(?=(\(|select\b))</string>
					<key>name</key>
					<string>meta.statement.dml.select.set</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>(?i)\b(all|intersect|minus|union)\b</string>
							<key>name</key>
							<string>keyword.operator.query.set</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
			</array>
		</dict>
		<key>statement-include</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string-quoted-oracle-sql</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-other-substitution-oracle-sqlplus</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#variable-other-bind-oracle-sqlplus</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#expression-oracle-sql</string>
				</dict>
			</array>
		</dict>
		<key>statement-key-mgmt</key>
		<dict>
			<key>begin</key>
			<string>(?i)^\s*+(administer)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</dict>
			<key>end</key>
			<string>((?=;)|((?=^\s*+/$\s*+))|(?=^\s*+$))</string>
			<key>name</key>
			<string>meta.statement.administer-key</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(a(dd|l(l|ter)|nd|uto_login)|b(ackup|y)|c(l(ient|ose)|ontainer|reate|urrent)|delete|e(ncryption|x(isting|port))|f(or|rom)|i(dentifie(d|r)|mport|n(to)?)|key(s(tore)?)?|local|m(anagement|erge|igrate)|new|open|reverse|se(cret|t)|t(ag|o)|u(pdate|s(e|ing))|with)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)(?&lt;!by)\s++(password)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#literal</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\(</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>keyword.other.delimiter</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?i)(?=\bselect\s)</string>
							<key>end</key>
							<string>(?=\))</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#statement-dml-select</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>#expression</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>=</string>
					<key>name</key>
					<string>keyword.operator</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\S</string>
					<key>name</key>
					<string>constant.character</string>
				</dict>
			</array>
		</dict>
		<key>storage</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(byte|char|n(char|varchar2)|varchar2)\b</string>
					<key>name</key>
					<string>storage.type.characer</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(binary_(double|float)|float|number)\b</string>
					<key>name</key>
					<string>storage.type.number</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(long(\s++raw)|raw)\b</string>
					<key>name</key>
					<string>invalid.deprecated</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(date|interval\s++(day|year)|t(o(\s++(month|second))|imestamp)|with(\s++local)?\s++time\s++zone)\b</string>
					<key>name</key>
					<string>storage.type.datetime</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(b(file|lob)|clob|nclob)\b</string>
					<key>name</key>
					<string>storage.type.large-object</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(rowid|urowid)\b</string>
					<key>name</key>
					<string>storage.type.rowid</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(char((\s++varying)?|acter(\s++varying)?)|d(ouble(\s++precision)?|ec(imal)?)|int(eger)?|n(ational|char(\s++varying)?|umeric)|real|smaillint|varchar)\b</string>
					<key>name</key>
					<string>storage.type.ansi</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(ord(audio|d(icom|oc)|image|video)|s(do_(geo(metry|raster)|topo_geometry)|i_(averagecolor|color(histogram)?|featurelist|positionalcolor|stillimage|texture)|ys\.(any(data(set)?|type|)))|uritype|xmltype)\b</string>
					<key>name</key>
					<string>storage.type.oracle-provided</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)\b(constant|default|i(n(dex\s++by)?|s(?=\s++table))|no(copy|t\s++null)|o(ut|f)|r(ange|ef)|subtype)\b</string>
					<key>name</key>
					<string>storage.modifier</string>
				</dict>
			</array>
		</dict>
		<key>storage-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>storage-clause</string>
					<key>match</key>
					<string>(?i)\b(storage)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>storage-clause-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>storage-clause-parens</string>
					<key>match</key>
					<string>(?i)\b(buffer_pool|default|encrypt|f(lash_cache|reelist(s)?)|keep|groups|initial|m(axextents|inextents)|n(ext|one|ull)|optimal|pctincrease|recycle|unlimited)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#size-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#maxsize-clause</string>
				</dict>
			</array>
		</dict>
		<key>string</key>
		<dict>
			<key>begin</key>
			<string>(")</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.delimiter</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(")</string>
			<key>name</key>
			<string>string.quoted.double</string>
		</dict>
		<key>string-quoted-oracle-sql</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(")</string>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.oracle.sql</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(")</string>
					<key>name</key>
					<string>string.quoted.double.oracle.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#variable-other-substitution-oracle-sqlplus</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>subpartition-extended-name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>modify-table-default-attrs</string>
					<key>match</key>
					<string>(?i)\b(subpartition)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>subquery-restriction-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>subquery-restriction-clause</string>
					<key>match</key>
					<string>(?i)\b(c(heck|onstraint)|o(nly|ption)|read|with)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>substitutable-column-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>substitutable-column-clause</string>
					<key>match</key>
					<string>(?i)\b(all|at|element|levels||is|not|of|substitutable|type)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>substitution-variable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other</string>
						</dict>
					</dict>
					<key>match</key>
					<string>((&amp;){1,2})(\s*+)(\w++)</string>
					<key>name</key>
					<string>variable.other</string>
				</dict>
			</array>
		</dict>
		<key>supplemental-db-logging-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?i)\b(add|columns|d(ata(?=\s++(?!\())|rop)|for|log|procedural|replication|supplemental)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#supplemental-id-key-clause</string>
				</dict>
			</array>
		</dict>
		<key>supplemental-id-key-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>supplemental_id_key_clause</string>
					<key>match</key>
					<string>(?i)\b(columns)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>supplemental-log-grp-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>supplemental-log-grp-clause</string>
					<key>match</key>
					<string>(?i)\b(always|group)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>supplemental-table-logging</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>supplemental-table-logging</string>
					<key>match</key>
					<string>(?i)\b(add|drop|group|log|supplemental)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#supplemental-log-grp-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#supplemental-id-key-clause</string>
				</dict>
			</array>
		</dict>
		<key>system-privileges</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>system-privileges</string>
					<key>match</key>
					<string>(?i)\b(a(ccess|d(minister|visor)|lter|n(alize|y)|rchive|udit)|b(ackup|ecome|uid)|c(hange|l(ass|uster)|o(mm(ent|it)|n(nect|t(ainer|ext(?!\s++namespace)))|st)|reate|ube)|d(at(abase|e)|e(bug|lete)|i(ctionary|mension|rectory)|rop)|e(dition|x(e(cute|mpt)|ternal))|f(lashback|o(lder|rce))|g(lobal|rant)|in(dex(type)?|herit|sert)|job|ke(ep|y)|l(i(brary|nk)|o(ck|gmining))|m(a(nage(ment)?|terialized)|e(asure|rge)|ining|odel)|notification|o(bject|n(?=\s++commit)|perator|utline)|p(lugabble|olicy|r(ivilege|o(ce(dure|ss)|file|gram))|u(blic|rge_dba_recyclebin))|query|r(e(ad|daction|fresh|s(ource|tricted|umable)|write)|ol(lback|e))|s(cheduler|e(gment|lect|quence|ssion|t)|ql|y(nonym|s(backup|d(ba|g)|guid|km|oper|tem)))|t(able(space)?|ime|uning|r(ans(action|lat(e|ion))|igger)|ype)|u(n(der|limited)|pdate|ser)|view)\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
			</array>
		</dict>
		<key>table-collection-expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>table-collection-expression</string>
					<key>match</key>
					<string>(?i)\b(table)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>table-compression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>table_compression</string>
					<key>match</key>
					<string>(?i)\b(archive|co(lumn|mpress)|for|l(evel|ocking)|no(compress)|query|row|store)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>table_compression</string>
					<key>match</key>
					<string>(?i)\b(advanced|basic|high|low)\b</string>
					<key>name</key>
					<string>constant.language</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inmemory-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#storage-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#size-clause</string>
				</dict>
			</array>
		</dict>
		<key>table-partition-description</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#deferred-segment-creation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#indexing-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#segment-attributes-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#table-compression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#prefix-compression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#inmemory-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#LOB-storage-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#varray-col-properties</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#nested-table-col-properties</string>
				</dict>
			</array>
		</dict>
		<key>table-partitioning-clauses</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>range-partitions</string>
					<key>match</key>
					<string>(?i)\b(by|in(terval)?|partition|range|store)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#range-values-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#table-partition-description</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>list-partitions</string>
					<key>match</key>
					<string>(?i)\b(by|list|partition)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>hash-partitions</string>
					<key>match</key>
					<string>(?i)\b(by|hash|partition)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#hash-partitions-by-quantity</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>subpartition-by-range</string>
					<key>match</key>
					<string>(?i)\b(by|range|subpartition)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>subpartition-template</string>
					<key>match</key>
					<string>(?i)\b(subpartition|template)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#hash-subparts-by-quantity</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>subpartition-by-list</string>
					<key>match</key>
					<string>(?i)\b(by|list|subpartition)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>subpartition-by-hash</string>
					<key>match</key>
					<string>(?i)\b(by|hash|in|s(tore|ubpartition(s)?))\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>reference-partitioning</string>
					<key>match</key>
					<string>(?i)\b(by|partition|reference)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>system-partitioning</string>
					<key>match</key>
					<string>(?i)\b(by|partition(s)?|system)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>tablespace-group-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>tablespace-group-clause</string>
					<key>match</key>
					<string>(?i)\b(group|tablespace)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>tablespace-retention-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>tablespace-retention-clause</string>
					<key>match</key>
					<string>(?i)\b(guarantee|noguarantee|retention)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>unusable-editions-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>unusable-editions-clause</string>
					<key>match</key>
					<string>(?i)\b(before|current|edition|null|unusable|with)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</array>
		</dict>
		<key>update-all-indexes-clause-parens</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>index-partition-description</string>
					<key>match</key>
					<string>(?i)\b(par(ameters|tition)|u(nusable|sable))\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#segment-attributes-clause</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#index-compression</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#index-subpartition-clause</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>updae-index-subpartition</string>
					<key>match</key>
					<string>(?i)\b(subpartition|tablespace)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>update-index-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>update-global-index-clause</string>
					<key>match</key>
					<string>(?i)\b(global|in(dexes|validate)|update)\b</string>
					<key>name</key>
					<string>keyword.other</string>
				</dict>
			</array>
		</dict>
		<key>upgrade-table-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>upgrade-table-clause</string>
					<key>match</key>
					<string>(?i)\b(data|including|not|upgrade)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#column-properties</string>
				</dict>
			</array>
		</dict>
		<key>using-index-clause</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>using-index-clause</string>
					<key>match</key>
					<string>(?i)\b(index|using)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#index-properties</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#hash-partitions-by-quantity</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#index-attributes</string>
				</dict>
			</array>
		</dict>
		<key>variable-other-bind-oracle-sqlplus</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.oracle.sqlplus</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(:)([[:alnum:]_])([[:alnum:]_])*+</string>
			<key>name</key>
			<string>variable.other.bind.oracle.sqlplus</string>
		</dict>
		<key>variable-other-substitution-oracle-sqlplus</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.oracle.sqlplus</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.oracle.sqlplus</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?&lt;!&amp;)(&amp;{1,2})\s*+(?:[[:alnum:]_])++(\.)?</string>
			<key>name</key>
			<string>variable.other.substitution.oracle.sqlplus</string>
		</dict>
		<key>varray-col-properties</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>comment</key>
					<string>varray-col-properties</string>
					<key>match</key>
					<string>(?i)\b(varray)\b</string>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#substitutable-column-clause</string>
				</dict>
				<dict>
					<key>comment</key>
					<string>varray-storage-clause</string>
					<key>match</key>
					<string>(?i)\b(as|basicfile|lob|s(ecurefile|torage))\b</string>
					<key>name</key>
					<string>keyword.control.untitled</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#LOB-storage-parameters</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.oracle.sql</string>
	<key>uuid</key>
	<string>53e1bc07-e2f5-4df9-9d65-a8f7a9c3bf6f</string>
</dict>
</plist>
